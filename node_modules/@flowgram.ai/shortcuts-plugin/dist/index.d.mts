import * as _flowgram_ai_core from '@flowgram.ai/core';
import { Command, ContributionProvider, CommandRegistry } from '@flowgram.ai/core';

interface ShortcutsHandler {
    commandId: string;
    commandDetail?: Omit<Command, 'id'>;
    shortcuts: string[];
    isEnabled?: (...args: any[]) => boolean;
    execute: (...args: any[]) => void;
}
declare const ShortcutsContribution: unique symbol;
interface ShortcutsContribution {
    registerShortcuts: (registry: ShortcutsRegistry) => void;
}
declare class ShortcutsRegistry {
    protected contribs: ContributionProvider<ShortcutsContribution>;
    protected commandRegistry: CommandRegistry;
    readonly shortcutsHandlers: ShortcutsHandler[];
    addHandlers(...handlers: ShortcutsHandler[]): void;
    addHandlersIfNotFound(...handlers: ShortcutsHandler[]): void;
    has(commandId: string): boolean;
    protected init(): void;
}

/**
 * @param opts
 *
 * createShortcutsPlugin({
 *   registerShortcuts(registry) {
 *   }
 * })
 */
declare const createShortcutsPlugin: _flowgram_ai_core.PluginCreator<ShortcutsContribution>;

export { ShortcutsContribution, type ShortcutsHandler, ShortcutsRegistry, createShortcutsPlugin };
