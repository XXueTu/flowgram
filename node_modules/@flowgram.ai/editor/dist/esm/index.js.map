{"version":3,"sources":["../../src/index.ts","../../src/preset/editor-props.ts","../../src/preset/editor-default-preset.ts","../../src/utils/compose.ts","../../src/clients/flow-editor-client-plugins.ts","../../src/clients/node-client/create-node-client-plugins.ts","../../src/clients/node-client/node-focus-service.ts","../../src/clients/node-client/highlight/highlight-form-item.ts","../../src/clients/node-client/highlight/highlight-style.ts","../../src/clients/node-client/highlight/constants.ts","../../src/clients/node-client/highlight/use-highlight.ts","../../src/clients/node-client/node-client.ts","../../src/clients/node-client/highlight/create-node-highlight-plugin.ts","../../src/clients/flow-editor-client.ts","../../src/components/editor-provider.tsx","../../src/components/editor-renderer.tsx","../../src/components/editor.tsx","../../src/hooks/use-flow-editor.ts"],"sourcesContent":["import 'reflect-metadata';\nimport { FormModelV2 } from '@flowgram.ai/node';\n\n/* 核心 模块导出 */\nexport * from '@flowgram.ai/utils';\nexport * from '@flowgram.ai/core';\nexport * from '@flowgram.ai/document';\nexport * from '@flowgram.ai/renderer';\nexport * from '@flowgram.ai/variable-plugin';\nexport * from '@flowgram.ai/shortcuts-plugin';\nexport * from '@flowgram.ai/node-core-plugin';\nexport * from '@flowgram.ai/i18n-plugin';\nexport {\n  type interfaces,\n  injectable,\n  postConstruct,\n  named,\n  Container,\n  ContainerModule,\n  AsyncContainerModule,\n  inject,\n  multiInject,\n} from 'inversify';\n\nexport { FlowNodeFormData, NodeRender, type NodeRenderProps } from '@flowgram.ai/form-core';\n\nexport type {\n  FormState,\n  FieldState,\n  FieldArrayRenderProps,\n  FieldRenderProps,\n  FormRenderProps,\n  Validate,\n  FormControl,\n  FieldName,\n  FieldError,\n  FieldWarning,\n  IField,\n  IFieldArray,\n  IForm,\n  Errors,\n  Warnings,\n} from '@flowgram.ai/form';\n\nexport {\n  Form,\n  Field,\n  FieldArray,\n  useForm,\n  useField,\n  useCurrentField,\n  useCurrentFieldState,\n  useFieldValidate,\n  useWatch,\n  ValidateTrigger,\n} from '@flowgram.ai/form';\nexport * from '@flowgram.ai/node';\nexport { FormModelV2 as FormModel };\n\n/**\n * 固定布局模块导出\n */\nexport * from './preset';\nexport * from './components';\nexport * from './hooks';\nexport * from './clients';\n\n/**\n * Plugin 导出\n */\n\nexport * from '@flowgram.ai/node-variable-plugin';\n\nexport { createPlaygroundReactPreset } from '@flowgram.ai/playground-react';\n","import { VariablePluginOptions } from '@flowgram.ai/variable-plugin';\nimport { ReduxDevToolPluginOptions } from '@flowgram.ai/redux-devtool-plugin';\nimport { PlaygroundReactProps, SelectionService } from '@flowgram.ai/playground-react';\nimport { NodeCorePluginOptions } from '@flowgram.ai/node-core-plugin';\nimport { MaterialsPluginOptions } from '@flowgram.ai/materials-plugin';\nimport { I18nPluginOptions } from '@flowgram.ai/i18n-plugin';\nimport { HistoryPluginOptions } from '@flowgram.ai/history';\nimport { FormMetaOrFormMetaGenerator } from '@flowgram.ai/form-core';\nimport {\n  FlowDocument,\n  FlowDocumentJSON,\n  FlowNodeEntity,\n  type FlowNodeJSON,\n  FlowNodeRegistry,\n  FlowNodeType,\n  FlowTransitionLabel,\n  FlowTransitionLine,\n} from '@flowgram.ai/document';\nimport { PluginContext } from '@flowgram.ai/core';\n\nexport interface EditorPluginContext extends PluginContext {\n  document: FlowDocument;\n  selection: SelectionService;\n}\n\n/**\n * 固定布局配置\n */\nexport interface EditorProps<\n  CTX extends EditorPluginContext = EditorPluginContext,\n  JSON = FlowDocumentJSON\n> extends PlaygroundReactProps<CTX> {\n  /**\n   * 初始化数据\n   */\n  initialData?: JSON;\n  /**\n   * 是否为 readonly\n   */\n  readonly?: boolean;\n  /**\n   * 节点定义\n   */\n  nodeRegistries?: FlowNodeRegistry[];\n  /**\n   * 获取默认的节点配置\n   */\n  getNodeDefaultRegistry?: (type: FlowNodeType) => FlowNodeRegistry;\n  /**\n   * 节点引擎配置\n   */\n  nodeEngine?: NodeCorePluginOptions & {\n    /**\n     * 默认FormMeta\n     */\n    createDefaultFormMeta?: (node: FlowNodeEntity) => FormMetaOrFormMetaGenerator;\n    /**\n     * 开启\n     */\n    enable?: boolean;\n  };\n  /**\n   * 默认是否展开所有节点\n   */\n  allNodesDefaultExpanded?: boolean;\n  /**\n   * 画布物料\n   */\n  materials?: MaterialsPluginOptions;\n  /**\n   * 画布数据加载完成, 请使用 onAllLayersRendered 替代\n   * @deprecated\n   * */\n  onLoad?: (ctx: CTX) => void;\n  /**\n   * 是否开启变量引擎\n   */\n  variableEngine?: VariablePluginOptions;\n  /**\n   * 是否开启历史\n   */\n  history?: HistoryPluginOptions<CTX> & { disableShortcuts?: boolean };\n\n  /**\n   * redux 开发者工具配置\n   */\n  reduxDevTool?: ReduxDevToolPluginOptions;\n\n  scroll?: {\n    disableScrollLimit?: boolean; // 关闭滚动限制\n    disableScrollBar?: boolean; //  关闭滚动条\n  };\n\n  /**\n   * 节点数据导出\n   * - node 当前节点\n   * - json 当前节点数据\n   */\n  toNodeJSON?(node: FlowNodeEntity, json: FlowNodeJSON): FlowNodeJSON;\n  /**\n   * 节点数据导入\n   * - node 当前节点\n   * - json 当前节点数据\n   * - isFirstCreate 是否是第一次创建\n   */\n  fromNodeJSON?(node: FlowNodeEntity, json: FlowNodeJSON, isFirstCreate: boolean): FlowNodeJSON;\n  /**\n   * 画布内部常量自定义\n   */\n  constants?: Record<string, any>;\n  /**\n   * 自定义节点线条\n   */\n  formatNodeLines?: (node: FlowNodeEntity, lines: FlowTransitionLine[]) => FlowTransitionLine[];\n  /**\n   * 自定义节点 label\n   */\n  formatNodeLabels?: (node: FlowNodeEntity, lines: FlowTransitionLabel[]) => FlowTransitionLabel[];\n  /**\n   * 国际化\n   */\n  i18n?: I18nPluginOptions;\n}\n\nexport namespace EditorProps {\n  /**\n   * 默认配置\n   */\n  export const DEFAULT: EditorProps = {\n    background: {},\n  };\n}\n","import { interfaces } from 'inversify';\nimport { FlowRendererContainerModule, FlowRendererRegistry } from '@flowgram.ai/renderer';\nimport { createReduxDevToolPlugin } from '@flowgram.ai/redux-devtool-plugin';\nimport { createNodeVariablePlugin } from '@flowgram.ai/node-variable-plugin';\nimport { createNodeCorePlugin } from '@flowgram.ai/node-core-plugin';\nimport { createMaterialsPlugin } from '@flowgram.ai/materials-plugin';\nimport { createI18nPlugin } from '@flowgram.ai/i18n-plugin';\nimport { createHistoryNodePlugin } from '@flowgram.ai/history-node-plugin';\nimport { FlowDocumentContainerModule } from '@flowgram.ai/document';\nimport { createPlaygroundPlugin, Plugin, PluginsProvider } from '@flowgram.ai/core';\n\nimport { compose } from '../utils/compose';\nimport { createFlowEditorClientPlugins } from '../clients/flow-editor-client-plugins';\nimport { EditorPluginContext, EditorProps } from './editor-props';\n\nexport function createDefaultPreset<CTX extends EditorPluginContext = EditorPluginContext>(\n  opts: EditorProps<CTX>,\n  plugins: Plugin[] = []\n): PluginsProvider<CTX> {\n  return (ctx: CTX) => {\n    opts = { ...EditorProps.DEFAULT, ...opts };\n    /**\n     * i18n support\n     */\n    if (opts.i18n) {\n      plugins.push(createI18nPlugin(opts.i18n));\n    }\n    /**\n     * 默认注册顶层 flow editor client plugin\n     */\n    plugins.push(...createFlowEditorClientPlugins());\n\n    /**\n     * 注册 Redux 开发者工具\n     */\n    if (opts.reduxDevTool?.enable) {\n      plugins.push(createReduxDevToolPlugin(opts.reduxDevTool));\n    }\n\n    /**\n     * 注册画布模块\n     */\n    const defaultContainerModules: interfaces.ContainerModule[] = [\n      FlowDocumentContainerModule, // 默认文档\n      FlowRendererContainerModule, // 默认渲染\n    ];\n    /**\n     * 注册物料\n     */\n    plugins.push(createMaterialsPlugin(opts.materials || {}));\n\n    /**\n     * 注册节点引擎\n     */\n    if (opts.nodeEngine && opts.nodeEngine.enable !== false) {\n      plugins.push(createNodeCorePlugin({ materials: opts.nodeEngine.materials }));\n\n      if (opts.variableEngine?.enable) {\n        plugins.push(createNodeVariablePlugin({}));\n      }\n\n      if (opts.history?.enable) {\n        plugins.push(createHistoryNodePlugin({}));\n      }\n    }\n    /**\n     * 画布生命周期注册\n     */\n    plugins.push(\n      createPlaygroundPlugin<CTX>({\n        onInit: (ctx) => {\n          if (opts.nodeRegistries) {\n            ctx.document.registerFlowNodes(...opts.nodeRegistries);\n          }\n          // 自定义画布内部常量\n          if (opts.constants) {\n            ctx.document.options.constants = opts.constants;\n          }\n          // 劫持节点线条\n          if (opts.formatNodeLines) {\n            ctx.document.options.formatNodeLines = compose([\n              ctx.document.options.formatNodeLines,\n              opts.formatNodeLines,\n            ]);\n          }\n          // 劫持节点 label\n          if (opts.formatNodeLabels) {\n            ctx.document.options.formatNodeLabels = compose([\n              ctx.document.options.formatNodeLabels,\n              opts.formatNodeLabels,\n            ]);\n          }\n          if (opts.getNodeDefaultRegistry) {\n            ctx.document.options.getNodeDefaultRegistry = opts.getNodeDefaultRegistry;\n          }\n          // TODO\n          // if (opts.onContentChange) {\n          //   ctx.document.onContentChange(event => opts.onContentChange!(ctx, event));\n          // }\n          // TODO 这个会触发组件注册，后续要废弃这个，通过 materials 插件来做\n          ctx.get<FlowRendererRegistry>(FlowRendererRegistry).init();\n        },\n        onReady(ctx) {\n          if (opts.initialData) {\n            ctx.document.fromJSON(opts.initialData);\n          }\n          if (opts.readonly) {\n            ctx.playground.config.readonly = opts.readonly;\n          }\n          ctx.document.load().then(() => {\n            if (opts.onLoad) opts.onLoad(ctx);\n          });\n        },\n        onDispose(ctx) {\n          ctx.document.dispose();\n        },\n        containerModules: defaultContainerModules,\n      })\n    );\n\n    return plugins;\n  };\n}\n","import { FlowNodeEntity } from '@flowgram.ai/document';\n\nexport type ComposeListItem<T> = (node: FlowNodeEntity, data: T[]) => T[];\n\nexport const compose =\n  <T>(fnList: (ComposeListItem<T> | undefined)[]) =>\n  (node: FlowNodeEntity, data: T[]): T[] => {\n    const list = fnList.filter(Boolean) as ComposeListItem<T>[];\n    if (!list.length) {\n      return data;\n    }\n    return list.reduce((acc: T[], fn) => fn(node, acc), data);\n  };\n","import { definePluginCreator } from '@flowgram.ai/core';\n\nimport { createNodeClientPlugins } from './node-client/create-node-client-plugins';\nimport { FlowEditorClient } from './flow-editor-client';\n\nexport const createFlowEditorClientPlugin = definePluginCreator<{}>({\n  onBind({ bind }) {\n    bind(FlowEditorClient).toSelf().inSingletonScope();\n  },\n});\n\nexport const createFlowEditorClientPlugins = () => [\n  ...createNodeClientPlugins(),\n  createFlowEditorClientPlugin({}),\n];\n","import { definePluginCreator } from '@flowgram.ai/core';\n\nimport { NodeFocusService } from './node-focus-service';\nimport { NodeClient } from './node-client';\nimport { createNodeHighlightPlugin } from './highlight/create-node-highlight-plugin';\n\nexport const createNodeClientPlugin = definePluginCreator<{}>({\n  onBind({ bind }) {\n    bind(NodeFocusService).toSelf().inSingletonScope();\n    bind(NodeClient).toSelf().inSingletonScope();\n  },\n});\n\nexport const createNodeClientPlugins = () => [\n  createNodeHighlightPlugin({}),\n  createNodeClientPlugin({}),\n];\n","import { injectable, inject } from 'inversify';\nimport { type FormItem } from '@flowgram.ai/form-core';\nimport { Playground, PlaygroundConfigRevealOpts } from '@flowgram.ai/core';\n\nimport { highlightFormItem, HighLightOptions } from './highlight';\n\nexport type FocusNodeCanvasOptions = PlaygroundConfigRevealOpts;\n\nexport interface FocusNodeFormItemOptions {\n  canvas?: FocusNodeCanvasOptions;\n  highlight?: boolean | HighLightOptions;\n}\n\n@injectable()\nexport class NodeFocusService {\n  @inject(Playground) readonly playground: Playground;\n\n  protected previousOverlay: HTMLDivElement | undefined;\n\n  protected currentPromise: Promise<void> | undefined;\n\n  highlightNodeFormItem(formItem: FormItem, options?: HighLightOptions) {\n    this.previousOverlay = highlightFormItem(formItem, options);\n  }\n\n  focusNodeFormItem(formItem: FormItem, options?: FocusNodeFormItemOptions): Promise<void> {\n    const node = formItem.formModel.flowNodeEntity;\n    const { canvas = {}, highlight } = options || {};\n    if (this.previousOverlay) {\n      this.previousOverlay.remove();\n      this.previousOverlay = undefined;\n    }\n    const currentPromise = this.playground\n      .scrollToView({ entities: [node], scrollToCenter: true, ...canvas })\n      .then(() => {\n        if (!formItem || !highlight || this.currentPromise !== currentPromise) {\n          return;\n        }\n        this.highlightNodeFormItem(formItem, typeof highlight === 'boolean' ? {} : highlight);\n      });\n    this.currentPromise = currentPromise;\n    return this.currentPromise;\n  }\n}\n","import { FormItem } from '@flowgram.ai/form-core';\nimport { FlowNodeRenderData } from '@flowgram.ai/document';\n\nimport { HIGHLIGHT_CLASSNAME } from './highlight-style';\nimport { DEFAULT_HIGHLIGHT_PADDING } from './constants';\n\nexport interface HighLightOptions {\n  padding?: number;\n  overlayClassName?: string;\n}\n\nexport function highlightFormItem(\n  formItem: FormItem,\n  options?: HighLightOptions,\n): HTMLDivElement | undefined {\n  const parent =\n    formItem.formModel.flowNodeEntity.getData<FlowNodeRenderData>(FlowNodeRenderData).node;\n  const target = formItem.domRef.current;\n\n  if (!target) {\n    return undefined;\n  }\n\n  const overlay = document.createElement('div');\n\n  const { padding = DEFAULT_HIGHLIGHT_PADDING, overlayClassName } = options || {};\n\n  overlay.style.position = 'absolute';\n  overlay.style.top = '0';\n  overlay.style.left = '0';\n  overlay.style.width = '100%';\n  overlay.style.height = '100%';\n  overlay.style.zIndex = '9999';\n\n  parent.appendChild(overlay);\n\n  const parentRect = parent.getBoundingClientRect();\n  const targetRect = target.getBoundingClientRect();\n\n  overlay.style.top = targetRect.top - parentRect.top - padding + 'px';\n  overlay.style.left = targetRect.left - parentRect.left - padding + 'px';\n  overlay.style.width = targetRect.width + padding * 2 + 'px';\n  overlay.style.height = targetRect.height + padding * 2 + 'px';\n\n  overlay.className = overlayClassName || HIGHLIGHT_CLASSNAME;\n  setTimeout(() => {\n    overlay.remove();\n  }, 2000);\n  return overlay;\n}\n","export const HIGHLIGHT_CLASSNAME = 'flowide-highlight';\n\nconst styleText = `\n@keyframes flowide-fade {\n  from {\n   opacity: 1.0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n@-webkit-keyframes flowide-fade {\n  from {\n   opacity: 1.0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n.${HIGHLIGHT_CLASSNAME} {\n  background-color: rgba(238, 245, 40, 0.5);\n  animation: flowide-fade 2s 1 forwards;\n  -webkit-animation: flowide-fade 2s 1 forwards;\n}\n`;\n\nlet styleDom: HTMLStyleElement | undefined;\n\nexport function createHighlightStyle(): void {\n  if (styleDom) return;\n  styleDom = document.createElement('style');\n  styleDom.innerHTML = styleText;\n  document.head.appendChild(styleDom);\n}\n\nexport function removeHighlightStyle(): void {\n  styleDom?.remove();\n  styleDom = undefined;\n}\n","export const DEFAULT_HIGHLIGHT_COLOR = 'rgba(238, 245, 40, 0.5)';\nexport const DEFAULT_HIGHLIGHT_PADDING = 0;\n","import { useRef } from 'react';\n\nimport { FormModel } from '@flowgram.ai/form-core';\n\ninterface HighlightProps {\n  form: FormModel;\n  path: string;\n}\n\nexport function useHighlight(props: HighlightProps) {\n  const ref = useRef<any>(null);\n  const { form, path } = props;\n  const formItem = form.getFormItemByPath(path);\n  if (!formItem) {\n    return null;\n  }\n  formItem.domRef = ref;\n  return ref;\n}\n","import { injectable, inject } from 'inversify';\n\nimport { NodeFocusService } from './node-focus-service';\n\n@injectable()\nexport class NodeClient {\n  @inject(NodeFocusService) nodeFocusService: NodeFocusService;\n}\n","import { definePluginCreator } from '@flowgram.ai/core';\n\nimport { createHighlightStyle, removeHighlightStyle } from './highlight-style';\n\nexport const createNodeHighlightPlugin = definePluginCreator<{}>({\n  onInit() {\n    createHighlightStyle();\n  },\n  onDispose() {\n    removeHighlightStyle();\n  },\n});\n","import { injectable, inject } from 'inversify';\nimport { type FormItem } from '@flowgram.ai/form-core';\nimport { FlowNodeEntity } from '@flowgram.ai/document';\nimport { Playground, PlaygroundConfigRevealOpts } from '@flowgram.ai/core';\n\nimport { FocusNodeFormItemOptions, NodeClient } from './node-client';\n\ninterface FocusNodeOptions {\n  zoom?: PlaygroundConfigRevealOpts['zoom'];\n  easing?: PlaygroundConfigRevealOpts['easing']; // 是否开启缓动，默认开启\n  easingDuration?: PlaygroundConfigRevealOpts['easingDuration']; // 默认 500 ms\n  scrollToCenter?: PlaygroundConfigRevealOpts['scrollToCenter']; // 是否滚动到中心\n}\n\n@injectable()\nexport class FlowEditorClient {\n  @inject(NodeClient) readonly nodeClient: NodeClient;\n\n  @inject(Playground) readonly playground: Playground;\n\n  focusNodeFormItem(formItem: FormItem, options?: FocusNodeFormItemOptions) {\n    this.nodeClient.nodeFocusService.focusNodeFormItem(formItem, options);\n  }\n\n  focusNode(node: FlowNodeEntity, options?: FocusNodeOptions) {\n    this.playground.scrollToView({ entities: [node], ...options });\n  }\n}\n","import React, { useMemo, useCallback } from 'react';\n\nimport { interfaces } from 'inversify';\nimport { FlowDocument } from '@flowgram.ai/document';\nimport {\n  PlaygroundReactProvider,\n  createPluginContextDefault,\n  SelectionService,\n} from '@flowgram.ai/core';\n\nimport { EditorPluginContext, EditorProps, createDefaultPreset } from '../preset';\n\nexport const EditorProvider: React.FC<EditorProps> = (props: EditorProps) => {\n  const { children, ...others } = props;\n  const preset = useMemo(() => createDefaultPreset(others), []);\n  const customPluginContext = useCallback(\n    (container: interfaces.Container) =>\n      ({\n        ...createPluginContextDefault(container),\n        get document(): FlowDocument {\n          return container.get<FlowDocument>(FlowDocument);\n        },\n        get selection(): SelectionService {\n          return container.get<SelectionService>(SelectionService);\n        },\n      } as EditorPluginContext),\n    []\n  );\n  return (\n    <PlaygroundReactProvider plugins={preset} customPluginContext={customPluginContext}>\n      {children}\n    </PlaygroundReactProvider>\n  );\n};\n","export { PlaygroundReactRenderer as EditorRenderer } from '@flowgram.ai/core';\n","import React from 'react';\n\nimport { EditorProps } from '../preset';\nimport { EditorRenderer } from './editor-renderer';\nimport { EditorProvider } from './editor-provider';\n\n/**\n * 画布编辑器\n * @param props\n * @constructor\n */\nexport const Editor: React.FC<EditorProps> = (props: EditorProps) => {\n  const { children, ...otherProps } = props;\n  return (\n    <EditorProvider {...otherProps}>\n      <EditorRenderer>{children}</EditorRenderer>\n    </EditorProvider>\n  );\n};\n","import { useService } from '@flowgram.ai/core';\n\nimport { FlowEditorClient } from '../clients';\n\nexport function useFlowEditor(): FlowEditorClient {\n  return useService(FlowEditorClient);\n}\n"],"mappings":"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","names":["injectable","inject","EditorProps","definePluginCreator","definePluginCreator","injectable","inject","inject","injectable","definePluginCreator","injectable","inject","Playground","inject","Playground","injectable","definePluginCreator","ctx","React","React"]}