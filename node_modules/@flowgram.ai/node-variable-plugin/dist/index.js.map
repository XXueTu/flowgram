{"version":3,"sources":["../src/index.ts","../src/create-node-variable-plugin.ts","../src/with-node-variables.tsx","../src/components/PublicScopeProvider.tsx","../src/components/PrivateScopeProvider.tsx","../src/form-v2/create-provider-effect.ts","../src/form-v2/create-variable-provider-plugin.ts"],"sourcesContent":["export * from './create-node-variable-plugin';\nexport {\n  VariableProviderAbilityOptions,\n  VariableConsumerAbilityOptions,\n  VariableAbilityParseContext,\n} from './types';\nexport { PrivateScopeProvider } from './components/PrivateScopeProvider';\nexport { PublicScopeProvider } from './components/PublicScopeProvider';\nexport { createEffectFromVariableProvider } from './form-v2/create-provider-effect';\nexport { createVariableProviderPlugin } from './form-v2/create-variable-provider-plugin';\n","// import { FormManager } from '@flowgram.ai/form-core';\nimport { NodeManager } from '@flowgram.ai/form-core';\nimport { definePluginCreator } from '@flowgram.ai/core';\n\nimport { withNodeVariables } from './with-node-variables';\n\n// import { withNodeVariables } from './with-node-variables';\n\nexport const createNodeVariablePlugin = definePluginCreator({\n  onInit(ctx) {\n    const nodeManager = ctx.get<NodeManager>(NodeManager);\n    nodeManager.registerNodeRenderHoc(withNodeVariables);\n  },\n});\n","import React from 'react';\n\nimport { NodeRenderHoc, type NodeRenderProps } from '@flowgram.ai/form-core';\n\nimport { PublicScopeProvider } from './components/PublicScopeProvider';\n\n// eslint-disable-next-line react/display-name\nexport const withNodeVariables: NodeRenderHoc = (Component) => (props: NodeRenderProps) =>\n  (\n    <PublicScopeProvider>\n      <Component {...props} />\n    </PublicScopeProvider>\n  );\n","import React, { useMemo } from 'react';\n\nimport { FlowNodeVariableData, type Scope, ScopeProvider } from '@flowgram.ai/variable-plugin';\nimport { useEntityFromContext } from '@flowgram.ai/core';\n\ninterface VariableProviderProps {\n  children: React.ReactElement;\n}\n\nexport const PublicScopeProvider = ({ children }: VariableProviderProps) => {\n  const node = useEntityFromContext();\n\n  const publicScope: Scope = useMemo(() => node.getData(FlowNodeVariableData).public, [node]);\n\n  return <ScopeProvider value={{ scope: publicScope }}>{children}</ScopeProvider>;\n};\n","import React, { useMemo } from 'react';\n\nimport { FlowNodeVariableData, type Scope, ScopeProvider } from '@flowgram.ai/variable-plugin';\nimport { useEntityFromContext } from '@flowgram.ai/core';\n\ninterface VariableProviderProps {\n  children: React.ReactElement;\n}\n\nexport const PrivateScopeProvider = ({ children }: VariableProviderProps) => {\n  const node = useEntityFromContext();\n\n  const privateScope: Scope = useMemo(() => {\n    const variableData: FlowNodeVariableData = node.getData(FlowNodeVariableData);\n    if (!variableData.private) {\n      variableData.initPrivate();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return variableData.private!;\n  }, [node]);\n\n  return <ScopeProvider value={{ scope: privateScope }}>{children}</ScopeProvider>;\n};\n","import { FlowNodeVariableData, type Scope, ASTKind } from '@flowgram.ai/variable-plugin';\nimport { DataEvent, type Effect, type EffectOptions } from '@flowgram.ai/node';\nimport { FlowNodeEntity } from '@flowgram.ai/document';\n\nimport { type VariableProviderAbilityOptions } from '../types';\n\n/**\n * 根据 VariableProvider 生成 FormV2 的 Effect\n * @param options\n * @returns\n */\nexport function createEffectFromVariableProvider(\n  options: VariableProviderAbilityOptions,\n): EffectOptions[] {\n  const getScope = (node: FlowNodeEntity): Scope => {\n    const variableData: FlowNodeVariableData = node.getData(FlowNodeVariableData);\n\n    if (options.private) {\n      return variableData.initPrivate();\n    }\n    return variableData.public;\n  };\n\n  const transformValueToAST: Effect = ({ value, context }) => {\n    if (!context) {\n      return;\n    }\n    const { node } = context;\n    const scope = getScope(node);\n\n    scope.ast.set(options.namespace || '', {\n      kind: ASTKind.VariableDeclarationList,\n      declarations: options.parse(value, {\n        node,\n        scope,\n        options,\n        formItem: undefined,\n      }),\n    });\n  };\n\n  return [\n    {\n      event: DataEvent.onValueInit,\n      effect: (params => {\n        const { context } = params;\n\n        const scope = getScope(context.node);\n        const disposable = options.onInit?.({\n          node: context.node,\n          scope,\n          options,\n          formItem: undefined,\n          // Hack: 新表单引擎暂时不支持 triggerSync\n          triggerSync: undefined as any,\n        });\n\n        if (disposable) {\n          // 作用域销毁时同时销毁该监听\n          scope.toDispose.push(disposable);\n        }\n\n        transformValueToAST(params);\n      }) as Effect,\n    },\n    {\n      event: DataEvent.onValueChange,\n      effect: (params => {\n        transformValueToAST(params);\n      }) as Effect,\n    },\n  ];\n}\n","import { DataEvent, defineFormPluginCreator } from '@flowgram.ai/node';\n\nexport const createVariableProviderPlugin = defineFormPluginCreator('VariableProviderPlugin', {\n  onInit: (ctx, opts) => {\n    // todo\n    // console.log('>>> VariableProviderPlugin init', ctx, opts);\n  },\n  effect: {\n    arr: [\n      {\n        event: DataEvent.onValueInitOrChange,\n        effect: () => {\n          // todo\n          // console.log('>>> VariableProviderPlugin effect triggered');\n        },\n      },\n    ],\n  },\n  onDispose: (ctx, opts) => {\n    // todo\n    // console.log('>>> VariableProviderPlugin dispose', ctx, opts);\n  },\n});\n"],"mappings":"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","names":["import_core","import_react","React","React","import_react","import_variable_plugin","import_core","React","import_variable_plugin","import_node"]}