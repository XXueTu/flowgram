import * as _flowgram_ai_core from '@flowgram.ai/core';
import { VariableDeclarationJSON, ASTNodeJSON, Scope } from '@flowgram.ai/variable-plugin';
import { FormItem } from '@flowgram.ai/form-core';
import { FlowNodeEntity } from '@flowgram.ai/document';
import { Disposable } from '@flowgram.ai/utils';
import React from 'react';
import * as _flowgram_ai_node from '@flowgram.ai/node';
import { EffectOptions } from '@flowgram.ai/node';

declare const createNodeVariablePlugin: _flowgram_ai_core.PluginCreator<unknown>;

interface VariableAbilityCommonContext {
    node: FlowNodeEntity;
    formItem?: FormItem;
    scope: Scope;
    options: VariableAbilityOptions;
}
interface VariableAbilityInitCtx extends VariableAbilityCommonContext {
    triggerSync: () => void;
}
interface VariableAbilityOptions {
    key?: string;
    private?: boolean;
    namespace?: string;
    scope?: 'private' | 'public';
    onInit?: (ctx: VariableAbilityInitCtx) => Disposable | undefined;
    disableRemoveASTWhenFormItemDispose?: boolean;
    [key: string]: any;
}
interface VariableAbilityParseContext extends VariableAbilityCommonContext {
}
interface VariableProviderAbilityOptions<V = any> extends VariableAbilityOptions {
    parse: (v: V, ctx: VariableAbilityParseContext) => VariableDeclarationJSON[];
}
interface VariableConsumerAbilityOptions<V = any> extends VariableAbilityOptions {
    parse: (v: V, ctx: VariableAbilityParseContext) => ASTNodeJSON | undefined;
}

interface VariableProviderProps$1 {
    children: React.ReactElement;
}
declare const PrivateScopeProvider: ({ children }: VariableProviderProps$1) => React.JSX.Element;

interface VariableProviderProps {
    children: React.ReactElement;
}
declare const PublicScopeProvider: ({ children }: VariableProviderProps) => React.JSX.Element;

/**
 * 根据 VariableProvider 生成 FormV2 的 Effect
 * @param options
 * @returns
 */
declare function createEffectFromVariableProvider(options: VariableProviderAbilityOptions): EffectOptions[];

declare const createVariableProviderPlugin: (opts: unknown) => _flowgram_ai_node.FormPlugin<unknown>;

export { PrivateScopeProvider, PublicScopeProvider, type VariableAbilityParseContext, type VariableConsumerAbilityOptions, type VariableProviderAbilityOptions, createEffectFromVariableProvider, createNodeVariablePlugin, createVariableProviderPlugin };
