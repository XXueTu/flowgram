"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  FlowNodeVariableData: () => import_variable_layout2.FlowNodeVariableData,
  GlobalScope: () => import_variable_layout2.GlobalScope,
  createVariablePlugin: () => createVariablePlugin
});
module.exports = __toCommonJS(src_exports);

// src/create-variable-plugin.ts
var import_variable_layout = require("@flowgram.ai/variable-layout");
var import_variable_core = require("@flowgram.ai/variable-core");
var import_document = require("@flowgram.ai/document");
var import_core = require("@flowgram.ai/core");
var import_core2 = require("@flowgram.ai/core");
var createVariablePlugin = (0, import_core.definePluginCreator)({
  onBind({ bind }, opts) {
    const { layout, layoutConfig } = opts;
    if (layout === "free") {
      bind(import_variable_core.ScopeChain).to(import_variable_layout.FreeLayoutScopeChain).inSingletonScope();
    }
    if (layout === "fixed") {
      bind(import_variable_core.ScopeChain).to(import_variable_layout.FixedLayoutScopeChain).inSingletonScope();
    }
    if (layoutConfig) {
      bind(import_variable_layout.VariableLayoutConfig).toConstantValue(layoutConfig || {});
    }
    (0, import_variable_layout.bindGlobalScope)(bind);
  },
  onInit(ctx, opts) {
    const { extendASTNodes } = opts || {};
    const variableEngine = ctx.get(import_variable_core.VariableEngine);
    const astRegisters = ctx.get(import_variable_core.ASTRegisters);
    const entityManager = ctx.get(import_core2.EntityManager);
    const document = ctx.get(import_document.FlowDocument);
    (extendASTNodes || []).forEach((info) => {
      if (Array.isArray(info)) {
        const [extendASTNode, injector] = info;
        astRegisters.registerAST(extendASTNode, injector ? () => injector(ctx) : void 0);
        return;
      }
      astRegisters.registerAST(info);
    });
    entityManager.registerEntityData(import_variable_layout.FlowNodeVariableData, () => ({ variableEngine }));
    document.registerNodeDatas(import_variable_layout.FlowNodeVariableData);
  },
  containerModules: [import_variable_core.VariableContainerModule]
});

// src/index.ts
__reExport(src_exports, require("@flowgram.ai/variable-core"), module.exports);
var import_variable_layout2 = require("@flowgram.ai/variable-layout");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  FlowNodeVariableData,
  GlobalScope,
  createVariablePlugin,
  ...require("@flowgram.ai/variable-core")
});
//# sourceMappingURL=index.js.map