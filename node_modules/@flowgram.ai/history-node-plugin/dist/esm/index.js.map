{"version":3,"sources":["../../src/create-history-node-plugin.ts","../../src/utils/index.ts","../../src/history-node-registers.ts","../../src/operation-metas/change-form-values.ts","../../src/operation-metas/index.ts"],"sourcesContent":["import { FlowDocument } from '@flowgram.ai/document';\nimport { bindContributions, definePluginCreator } from '@flowgram.ai/core';\nimport { HistoryContainerModule, HistoryService, OperationContribution } from '@flowgram.ai/history';\n\nimport { attachFormValuesChange, getFormModelV2 } from './utils';\nimport { HistoryNodeRegisters } from './history-node-registers';\n\n/**\n * 表单历史插件\n */\nexport const createHistoryNodePlugin = definePluginCreator({\n  onBind: ({ bind }) => {\n    bindContributions(bind, HistoryNodeRegisters, [OperationContribution]);\n  },\n  onInit: (ctx, _opts) => {\n    const document = ctx.get<FlowDocument>(FlowDocument);\n    const historyService = ctx.get<HistoryService>(HistoryService);\n\n    document.onNodeCreate(({ node }) => {\n      const formModel = getFormModelV2(node);\n\n      if (!formModel) {\n        return;\n      }\n\n      attachFormValuesChange(formModel, node, historyService);\n    });\n  },\n  containerModules: [HistoryContainerModule],\n});\n","import { get } from 'lodash';\nimport { FormModelV2, isFormModelV2 } from '@flowgram.ai/node';\nimport { FlowNodeFormData } from '@flowgram.ai/form-core';\nimport { FlowNodeEntity } from '@flowgram.ai/document';\nimport { HistoryService, Operation } from '@flowgram.ai/history';\nimport { StackOperation } from '@flowgram.ai/history';\n\nimport { ChangeFormValuesOperationValue, NodeOperationType } from '../types';\n\n/**\n * 获取v2版本的formModel\n * @param node 节点\n * @returns\n */\nexport function getFormModelV2(node: FlowNodeEntity | undefined): FormModelV2 | undefined {\n  if (!node) {\n    return undefined;\n  }\n\n  const formModel = node?.getData(FlowNodeFormData)?.getFormModel<FormModelV2>();\n\n  if (!formModel || !isFormModelV2(formModel)) {\n    return undefined;\n  }\n\n  return formModel;\n}\n\n/**\n * 表单合并策略\n * @param op 操作\n * @param prev 上一个操作\n * @param element 操作栈元素\n * @returns\n */\nexport function shouldChangeFormValuesMerge(\n  op: Operation<ChangeFormValuesOperationValue | undefined>,\n  prev: Operation<ChangeFormValuesOperationValue | undefined>,\n  element: StackOperation,\n) {\n  if (!prev) {\n    return false;\n  }\n\n  if (Date.now() - element.getTimestamp() < 500) {\n    if (\n      op.type === prev.type && // 相同类型\n      op.value?.id === prev.value?.id && // 相同节点\n      op.value?.path === prev.value?.path // 相同路径\n    ) {\n      return {\n        type: op.type,\n        value: {\n          ...op.value,\n          value: op.value?.value,\n          oldValue: prev.value?.oldValue,\n        },\n      };\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * 监听表单值变化\n * @param formModel 表单模型\n * @param node 节点\n * @param historyService 历史服务\n */\nexport function attachFormValuesChange(\n  formModel: FormModelV2,\n  node: FlowNodeEntity,\n  historyService: HistoryService,\n) {\n  formModel.onFormValuesChange(event => {\n    historyService.pushOperation(\n      {\n        type: NodeOperationType.changeFormValues,\n        value: {\n          id: node.id,\n          path: event.name,\n          value: get(event.values, event.name),\n          oldValue: get(event.prevValues, event.name),\n        },\n      },\n      { noApply: true },\n    );\n  });\n}\n","import { injectable } from 'inversify';\nimport { type OperationContribution, type OperationRegistry } from '@flowgram.ai/history';\n\nimport { operationMetas } from './operation-metas';\n\n/**\n * 表单历史操作\n */\n@injectable()\nexport class HistoryNodeRegisters implements OperationContribution {\n  registerOperationMeta(operationRegistry: OperationRegistry): void {\n    operationMetas.forEach(operationMeta => {\n      operationRegistry.registerOperationMeta(operationMeta);\n    });\n  }\n}\n","import { FlowDocument } from '@flowgram.ai/document';\nimport { type PluginContext } from '@flowgram.ai/core';\nimport { type OperationMeta } from '@flowgram.ai/history';\n\nimport { getFormModelV2, shouldChangeFormValuesMerge } from '../utils';\nimport { ChangeFormValuesOperationValue, NodeOperationType } from '../types';\n\n/**\n * 表单修改操作\n */\nexport const changeFormValueOperationMeta: OperationMeta<\n  ChangeFormValuesOperationValue,\n  PluginContext,\n  void\n> = {\n  type: NodeOperationType.changeFormValues,\n  inverse: op => ({\n    ...op,\n    value: {\n      ...op.value,\n      value: op.value.oldValue,\n      oldValue: op.value.value,\n    },\n  }),\n  apply: ({ value: { value, path, id } }, ctx: PluginContext) => {\n    const document = ctx.get<FlowDocument>(FlowDocument);\n    const formModel = getFormModelV2(document.getNode(id));\n\n    if (!formModel) {\n      return;\n    }\n\n    formModel.setValueIn(path, value);\n  },\n  shouldMerge: shouldChangeFormValuesMerge as OperationMeta['shouldMerge'],\n};\n","import { OperationMeta } from '@flowgram.ai/history';\n\nimport { changeFormValueOperationMeta } from './change-form-values';\n\nexport const operationMetas: OperationMeta[] = [changeFormValueOperationMeta];\n"],"mappings":"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","names":["FlowDocument","FlowDocument"]}