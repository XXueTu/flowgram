{"version":3,"sources":["../src/index.ts","../src/common/schema/origin-schema.ts","../src/common/entity-data.ts","../src/common/entity.ts","../src/common/schema/opacity-schema.ts","../src/common/schema/position-schema.ts","../src/common/schema/rotation-schema.ts","../src/common/schema/scale-schema.ts","../src/common/schema/size-schema.ts","../src/common/schema/skew-schema.ts","../src/common/schema/transform-schema.ts","../src/common/utils/bounds.ts","../src/common/entity-manager.ts","../src/common/playground-schedule.ts","../src/core/utils/playground-drag.ts","../src/core/utils/tween.ts","../src/core/utils/playground-gesture.ts","../src/core/utils/use-gesture/core/utils/state.ts","../src/core/utils/use-gesture/core/utils/maths.ts","../src/core/utils/use-gesture/core/utils/events.ts","../src/core/utils/use-gesture/core/utils/fn.ts","../src/core/utils/use-gesture/core/engines/Engine.ts","../src/core/utils/use-gesture/core/engines/CoordinatesEngine.ts","../src/core/utils/use-gesture/core/engines/WheelEngine.ts","../src/core/utils/use-gesture/core/engines/ScrollEngine.ts","../src/core/utils/use-gesture/core/engines/PinchEngine.ts","../src/core/utils/use-gesture/core/engines/MoveEngine.ts","../src/core/utils/use-gesture/core/engines/HoverEngine.ts","../src/core/utils/use-gesture/core/config/commonConfigResolver.ts","../src/core/utils/use-gesture/core/config/coordinatesConfigResolver.ts","../src/core/utils/use-gesture/core/engines/DragEngine.ts","../src/core/utils/use-gesture/core/config/wheelConfigResolver.ts","../src/core/utils/use-gesture/core/config/scrollConfigResolver.ts","../src/core/utils/use-gesture/core/config/support.ts","../src/core/utils/use-gesture/core/config/pinchConfigResolver.ts","../src/core/utils/use-gesture/core/config/moveConfigResolver.ts","../src/core/utils/use-gesture/core/config/hoverConfigResolver.ts","../src/core/utils/use-gesture/core/config/dragConfigResolver.ts","../src/core/utils/use-gesture/core/actions.ts","../src/core/utils/use-gesture/core/TimeoutStore.ts","../src/core/utils/use-gesture/core/EventStore.ts","../src/core/utils/use-gesture/core/config/sharedConfigResolver.ts","../src/core/utils/use-gesture/core/config/resolver.ts","../src/core/utils/use-gesture/core/Controller.ts","../src/core/utils/use-gesture/core/parser.ts","../src/core/utils/use-gesture/vanilla/Recognizer.ts","../src/core/utils/use-gesture/vanilla/createGesture.ts","../src/core/utils/use-gesture/vanilla/Gesture.ts","../src/core/utils/inject-provider-decorators.ts","../src/core/utils/lazy-inject-decorators.ts","../src/common/playground-context.ts","../src/common/entity-manager-contribution.ts","../src/common/config-entity.ts","../src/common/playground-decorator-helper.ts","../src/common/playground-decorators.ts","../src/common/protect-wheel-area.ts","../src/common/index.ts","../src/core/pipeline/pipeline.ts","../src/core/pipeline/pipeline-renderer.tsx","../src/services/selection-service.ts","../src/services/storage-service.ts","../src/services/clipboard-service.ts","../src/services/context-menu-service.ts","../src/services/logger-service.ts","../src/core/pipeline/pipline-react-utils.tsx","../src/core/pipeline/pipeline-entities-selector.ts","../src/core/pipeline/pipeline-registry.ts","../src/core/layer/config/editor-state-config-entity.ts","../src/core/layer/config/playground-config-entity.ts","../src/core/layer/layer.ts","../src/core/layer/playground-layer.ts","../src/core/pipeline/pipeline-entities.ts","../src/react/playground-react-context.ts","../src/react/playground-react-provider.tsx","../src/plugin/plugin.ts","../src/playground-contribution.ts","../src/playground-config.ts","../src/playground-container.ts","../src/playground.ts","../src/react/playground-react-renderer.tsx","../src/react-hooks/use-playground.ts","../src/react-hooks/use-entities.ts","../src/react-hooks/use-refresh.ts","../src/react-hooks/use-playground-container.ts","../src/react-hooks/use-entity-data-from-context.ts","../src/react-hooks/use-entity-from-context.ts","../src/react-hooks/use-listen-events.ts","../src/react-hooks/use-playground-context.ts","../src/react-hooks/use-playground-latest.ts","../src/react-hooks/use-service.ts","../src/react-hooks/use-config-entity.ts","../src/react-hooks/use-playground-drag.ts","../src/playground-mock-tools.ts"],"sourcesContent":["export * from './common';\nexport * from './core';\nexport * from './react';\nexport * from './react-hooks';\nexport * from './services';\nexport * from './plugin';\nexport * from './playground';\nexport * from './playground-config';\nexport * from './playground-contribution';\nexport * from './playground-container';\nexport * from './playground-mock-tools';\nexport { CommandService, CommandRegistry, Command } from '@flowgram.ai/command';\n","import { OriginSchemaDecoration, Schema } from '@flowgram.ai/utils';\nimport type { OriginSchema } from '@flowgram.ai/utils';\n\nimport { EntityData } from '../entity-data';\n\nexport { OriginSchema, OriginSchemaDecoration };\n\nexport class OriginData extends EntityData<OriginSchema> implements OriginSchema {\n  static type = 'OriginData';\n\n  getDefaultData(): OriginSchema {\n    return Schema.createDefault<OriginSchema>(OriginSchemaDecoration);\n  }\n\n  get x(): number {\n    return this.data.x;\n  }\n\n  get y(): number {\n    return this.data.y;\n  }\n\n  set x(x: number) {\n    this.update('x', x);\n  }\n\n  set y(y: number) {\n    this.update('y', y);\n  }\n}\n","import { Compare, DisposableImpl, Emitter } from '@flowgram.ai/utils';\n\nimport { Entity } from './entity';\n\n/**\n * 实体的数据块\n */\nexport abstract class EntityData<\n  DATA = any | number | string,\n  OPTS extends {} = {},\n> extends DisposableImpl {\n  static type = 'EntityData';\n\n  protected onDataChangeEmitter = new Emitter<EntityData<DATA, OPTS>>();\n\n  protected onWillChangeEmitter = new Emitter<EntityData<DATA, OPTS>>();\n\n  protected _data: DATA;\n\n  private _changeLocked = false;\n\n  protected _version = 0;\n\n  declare entity: Entity;\n\n  /**\n   * 修改后触发\n   */\n  readonly onDataChange = this.onDataChangeEmitter.event;\n\n  /**\n   * 修改前触发\n   */\n  readonly onWillChange = this.onWillChangeEmitter.event;\n\n  /**\n   * 初始化数据\n   */\n  abstract getDefaultData(): DATA;\n\n  constructor(entity: Entity, readonly opts?: OPTS) {\n    super();\n    this.entity = entity;\n    this._data = this.getDefaultData();\n    this.toDispose.push(this.onDataChangeEmitter);\n    this.toDispose.push(this.onWillChangeEmitter);\n  }\n\n  /**\n   * data 类型\n   */\n  get type(): string {\n    if (!(this.constructor as any).type) {\n      throw new Error(`Entity Data Registry need a type: ${this.constructor.name}`);\n    }\n    return (this.constructor as any).type;\n  }\n\n  /**\n   * 当前数据\n   */\n  get data(): DATA {\n    return this._data;\n  }\n\n  /**\n   * 更新单个数据\n   */\n  update(props: Partial<DATA> | keyof DATA | DATA, value?: any): void {\n    if (arguments.length === 2) {\n      if (this._data[props as keyof DATA] !== value) {\n        this.fireWillChange();\n        this._data[props as keyof DATA] = value;\n        this.fireChange();\n      }\n    } else if (this.checkChanged(props as Partial<DATA>)) {\n      this.fireWillChange();\n      if (typeof props !== 'object') {\n        this._data = props as any;\n      } else {\n        this._data = { ...this._data, ...(props as Partial<DATA>) };\n      }\n      this.fireChange();\n    }\n  }\n\n  /**\n   * 更新全量数据\n   * @param props\n   */\n  fullyUpdate(props: DATA): void {\n    // 仅做一层的全量比较\n    if (Compare.isChanged(this._data, props, 1, false)) {\n      this.fireWillChange();\n      this._data = props;\n      this.fireChange();\n    }\n  }\n\n  /**\n   * @deprecated\n   * 检测属性是否更改，默认采用浅比较\n   */\n  checkChanged(newProps: Partial<DATA> | DATA): boolean {\n    return Entity.checkDataChanged(this._data, newProps);\n  }\n\n  /**\n   * 存储数据，一般在关闭浏览器后需要暂时存到 localStorage\n   */\n  toJSON(): any {\n    return this.data as any;\n  }\n\n  /**\n   * 还原数据\n   */\n  fromJSON(data: object): void {\n    this.update(data);\n  }\n\n  get changeLocked(): boolean {\n    return this._changeLocked;\n  }\n\n  set changeLocked(p) {\n    this._changeLocked = p;\n  }\n\n  fireWillChange(): void {\n    this.onWillChangeEmitter.fire(this as EntityData<DATA, OPTS>);\n  }\n\n  fireChange(): void {\n    if (this._changeLocked) return;\n    this._version++;\n    /* istanbul ignore next */\n    if (this._version >= Number.MAX_SAFE_INTEGER) {\n      this._version = 0;\n    }\n    this.onDataChangeEmitter.fire(this as EntityData<DATA, OPTS>);\n  }\n\n  protected bindChange(data: EntityData, fn?: () => void): void {\n    this.toDispose.push(\n      data.onDataChange(() => {\n        if (fn) fn();\n        this.fireChange();\n      }),\n    );\n  }\n\n  get version() {\n    return this._version;\n  }\n}\n\nexport type EntityDataProps<E extends EntityData> = E['data'];\n\nexport interface EntityDataRegistry<E extends EntityData = EntityData> {\n  new (...args: any[]): E;\n\n  type: E['type'];\n}\n\nexport type EntityDataInjector = <OPTS extends {} = {}>() => OPTS;\n","import { nanoid } from 'nanoid';\nimport { interfaces } from 'inversify';\nimport { Compare, Disposable, DisposableCollection, Emitter, type Event } from '@flowgram.ai/utils';\n\nimport { type PlaygroundContext } from './playground-context';\nimport type { EntityManager } from './entity-manager';\nimport type { EntityData, EntityDataProps, EntityDataRegistry } from './entity-data';\n// import type { AbleChangedEvent, EntityAbles } from './entity-ables';\n// import type { AbleManager } from './able-manager';\n// import type { Able, AbleRegistry } from './able';\n\n/**\n * 注册类\n */\nexport interface EntityRegistry<E extends Entity = Entity> {\n  new (opts: any): E;\n\n  readonly type: E['type'];\n}\n\n/**\n * 持久化数据\n */\nexport interface EntityJSON {\n  type: string;\n  id: string;\n  // ableList?: string[];\n  dataList: object[];\n}\n\n// eslint-disable-next-line no-proto\nconst ObjectProto = (Object as any).__proto__;\n\nexport interface EntityDataChangedEvent<T extends Entity = Entity> {\n  type: 'add' | 'delete' | 'update';\n  data: EntityData;\n  entity: T;\n}\n\nexport interface EntityOpts {\n  entityManager: EntityManager;\n  id?: string;\n  // ables?: AbleRegistry[]; // 添加的 able\n  datas?: { registry: EntityDataRegistry; data?: EntityDataProps<any> }[];\n  savedInManager?: boolean; // 是否存储到 manager 上，默认 true\n}\n\nlet _version = 0;\n\nexport class Entity<OPTS extends EntityOpts = EntityOpts> implements Disposable {\n  static type = 'Entity';\n\n  private readonly onEntityChangeEmitter = new Emitter<Entity>();\n\n  private readonly onDataChangeEmitter = new Emitter<EntityDataChangedEvent>();\n\n  private readonly initializeDataKeys: string[] = []; // 初始化的\n\n  protected readonly dataManager: Map<string, EntityData> = new Map(); // 存储的数据\n\n  // readonly onBeforeAbleDispatchedEmitter = new Emitter<Able>();\n  //\n  // readonly onAfterAbleDispatchedEmitter = new Emitter<Able>();\n\n  /**\n   * 销毁事件管理\n   */\n  readonly toDispose = new DisposableCollection();\n\n  /**\n   * 销毁前事件管理\n   */\n  readonly preDispose = new DisposableCollection();\n\n  // /**\n  //  * able 管理\n  //  */\n  // readonly ables: EntityAbles;\n\n  /**\n   * 修改会触发\n   */\n  readonly onEntityChange = this.onEntityChangeEmitter.event;\n\n  // /**\n  //  * able 触发之前\n  //  */\n  // readonly onBeforeAbleDispatched = this.onBeforeAbleDispatchedEmitter.event;\n\n  // /**\n  //  * able 触发之后\n  //  */\n  // readonly onAfterAbleDispatched = this.onAfterAbleDispatchedEmitter.event;\n\n  /**\n   * 数据更改事件\n   */\n  readonly onDataChange = this.onDataChangeEmitter.event;\n\n  // /**\n  //  * able 数据更改\n  //  */\n  // readonly onAbleChange: Event<AbleChangedEvent>;\n\n  // /**\n  //  * 默认初始化的 Able\n  //  */\n  // getDefaultAbleRegistries(): AbleRegistry[] {\n  //   return [];\n  // }\n\n  /**\n   * 默认初始化的 Data\n   */\n  getDefaultDataRegistries(): EntityDataRegistry[] {\n    return [];\n  }\n\n  private _changeLockedTimes = 0;\n\n  protected isInitialized = true;\n\n  private _id: string;\n\n  private _version: number = _version++; // 每次创建都有一个新 version，避免 id 相同的 entity 频繁创建销毁导致碰撞\n\n  private _savedInManager = true;\n\n  // readonly ableManager: AbleManager;\n\n  /**\n   * 暂停更新开关\n   * @protected\n   */\n  protected get changeLocked(): boolean {\n    return this._changeLockedTimes > 0;\n  }\n\n  protected set changeLocked(changeLocked) {\n    this._changeLockedTimes = changeLocked\n      ? this._changeLockedTimes + 1\n      : this._changeLockedTimes - 1;\n\n    /* istanbul ignore next */\n    if (this._changeLockedTimes < 0) this._changeLockedTimes = 0;\n  }\n\n  /**\n   * 实体类型\n   */\n  get type(): string {\n    if (!(this.constructor as any).type) {\n      throw new Error(`Entity Registry need a type: ${this.constructor.name}`);\n    }\n    return (this.constructor as any).type;\n  }\n\n  /**\n   * 全局的entity管理器\n   */\n  readonly entityManager: EntityManager;\n\n  get context(): PlaygroundContext {\n    return this.entityManager.context;\n  }\n\n  constructor(opts: OPTS) {\n    this.entityManager = opts.entityManager;\n    this._id = opts.id || nanoid();\n    this._savedInManager = opts.savedInManager === undefined ? true : opts.savedInManager;\n    // this.ableManager = this.entityManager.ableManager;\n    // this.context = this.entityManager.context;\n    this.isInitialized = true;\n    // this.ables = this.entityManager.ableManager.createAbleMap(this);\n    // this.ables.onAbleChange(event => {\n    //   // 只需要监听删除，add 和 update 都由 entityData 去监听\n    //   if (event.type === 'delete') {\n    //     this.fireChange();\n    //   }\n    // });\n    this.toDispose.push(this.onEntityChangeEmitter);\n    // this.toDispose.push(this.onBeforeAbleDispatchedEmitter);\n    // this.toDispose.push(this.onAfterAbleDispatchedEmitter);\n    this.toDispose.push(this.onDataChangeEmitter);\n    // this.toDispose.push(this.ables);\n    // this.onAbleChange = this.ables.onAbleChange;\n    this.register();\n    // if (opts.ables) {\n    //   opts.ables.forEach(able => this.ables.add(able));\n    // }\n    if (opts.datas) {\n      opts.datas.forEach((data) => this.addData(data.registry, data.data));\n    }\n    this.isInitialized = false;\n  }\n\n  addInitializeData(datas: EntityDataRegistry[], dataConfig?: any) {\n    this.isInitialized = true;\n    datas.forEach((data) => this.addData(data, dataConfig));\n    this.isInitialized = false;\n  }\n\n  /**\n   * 实体的版本\n   */\n  get version(): number {\n    return this._version;\n  }\n\n  /**\n   * 存储数据，用于持久化存储\n   */\n  toJSON(): EntityJSON | any {\n    const dataList: object[] = [];\n    for (const data of this.dataManager.values()) {\n      dataList.push({\n        type: data.type,\n        data: data.toJSON(),\n      });\n    }\n    return {\n      type: this.type,\n      id: this.id,\n      // ableList: this.ables.toJSON(),\n      dataList,\n    };\n  }\n\n  /**\n   * 还原数据\n   */\n  fromJSON(data?: EntityJSON | any): void {\n    if (!data || !data.id || !data.type) return;\n    this.changeLocked = true;\n    this.reset();\n    if (data.dataList) {\n      data.dataList.forEach((d: any) => {\n        const registry = this.entityManager.getDataRegistryByType(d.type);\n        if (registry) {\n          const dataEntity = this.addData(registry);\n          dataEntity.update(d.data);\n        }\n      });\n    }\n    this.changeLocked = false;\n    this.fireChange();\n  }\n\n  /**\n   * 实体 id\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * 销毁实体\n   */\n  dispose(): void {\n    this.preDispose.dispose();\n    this.toDispose.dispose();\n  }\n\n  get disposed(): boolean {\n    return this.toDispose.disposed;\n  }\n\n  /**\n   * 重制为初始化状态\n   */\n  reset(): void {\n    this.changeLocked = true;\n    for (const data of this.dataManager.values()) {\n      if (!this.initializeDataKeys.includes(data.type)) {\n        data.dispose();\n      }\n    }\n    // this.ables.reset();\n    this.register();\n    this.changeLocked = false;\n    this.fireChange();\n  }\n\n  /**\n   * 销毁事件\n   */\n  get onDispose(): Event<void> {\n    return this.toDispose.onDispose;\n  }\n\n  /**\n   * 触发实体更新\n   * @protected\n   */\n  protected fireChange(): void {\n    if (this.changeLocked || this.isInitialized || this.disposed) return;\n    this._version++;\n    /* istanbul ignore next */\n    if (this._version >= Number.MAX_SAFE_INTEGER) {\n      this._version = 0;\n    }\n    this.onEntityChangeEmitter.fire(this);\n  }\n\n  /**\n   * 添加数据\n   */\n  addData<D extends EntityData>(\n    Registry: EntityDataRegistry,\n    defaultProps?: EntityDataProps<D>\n  ): D {\n    this.entityManager.registerEntityData(Registry);\n    let entityData = this.dataManager.get(Registry.type) as D;\n\n    if (entityData) {\n      if (defaultProps) this.updateData(Registry, defaultProps);\n      return entityData;\n    }\n\n    // 是否存在EntityData依赖注入器\n    const injector = this.entityManager.getDataInjector(Registry);\n    entityData = new Registry(this, injector?.()) as D;\n\n    if (this.isInitialized) this.initializeDataKeys.push(entityData.type);\n    this.dataManager.set(Registry.type, entityData);\n    this.toDispose.push(entityData);\n    entityData.onDataChange(() => {\n      const event: EntityDataChangedEvent = {\n        type: 'update',\n        data: entityData,\n        entity: this,\n      };\n      this.onDataChangeEmitter.fire(event);\n      this.fireChange();\n    });\n    entityData.toDispose.push(\n      Disposable.create(() => {\n        // 初始化的 data 数据无法被删除\n        if (!this.initializeDataKeys.includes(Registry.type)) {\n          this.dataManager.delete(Registry.type);\n        }\n        const event: EntityDataChangedEvent = {\n          type: 'delete',\n          data: entityData,\n          entity: this,\n        };\n        this.onDataChangeEmitter.fire(event);\n        this.fireChange();\n      })\n    );\n    entityData.changeLocked = true;\n    this.updateData(Registry, defaultProps || entityData.getDefaultData());\n    entityData.changeLocked = false;\n    const event: EntityDataChangedEvent = {\n      type: 'add',\n      data: entityData,\n      entity: this,\n    };\n    this.onDataChangeEmitter.fire(event);\n    return entityData;\n  }\n\n  /**\n   * 是否存到全局 manager，默认 true\n   */\n  get savedInManager(): boolean {\n    return this._savedInManager;\n  }\n\n  /**\n   * 更新实体的数据\n   */\n  updateData<D extends EntityData>(\n    Registry: EntityDataRegistry<D>,\n    props: EntityDataProps<D>\n  ): void {\n    const entityData = this.dataManager.get(Registry.type);\n    if (entityData) {\n      entityData.update(props);\n    }\n  }\n\n  /**\n   * 获取 data 数据\n   */\n  getData<D extends EntityData>(Registry: EntityDataRegistry<D>): D {\n    return this.dataManager.get(Registry.type) as D;\n  }\n\n  /**\n   * 是否有指定数据\n   */\n  hasData(Registry: EntityDataRegistry): boolean {\n    return this.dataManager.has(Registry.type);\n  }\n\n  /**\n   * 删除数据，初始化状态注入的数据无法被删除\n   */\n  removeData<D extends EntityData>(Registry: EntityDataRegistry<D>): void {\n    // 初始化的数据无法被删除\n    if (this.initializeDataKeys.includes(Registry.type)) return;\n    const entityData = this.dataManager.get(Registry.type);\n    if (entityData) {\n      entityData.dispose();\n    }\n  }\n\n  /**\n   * 获取 IOC 服务\n   * @param identifier\n   */\n  getService<T>(identifier: interfaces.ServiceIdentifier<T>): T {\n    return this.entityManager.getService<T>(identifier);\n  }\n  // /**\n  //  * 添加 able\n  //  */\n  // addAbles(...ables: AbleRegistry[]): void {\n  //   ables.forEach(able => this.ables.add(able));\n  // }\n  //\n  // /**\n  //  * 删除 able\n  //  */\n  // removeAbles(...ables: AbleRegistry[]): void {\n  //   ables.forEach(able => this.ables.remove(able));\n  // }\n  //\n  // /**\n  //  * 是否有 able\n  //  */\n  // hasAble(able: AbleRegistry): boolean {\n  //   return this.ables.has(able);\n  // }\n  //\n  // hasAbles(...ables: AbleRegistry[]): boolean {\n  //   for (const able of ables) {\n  //     if (!this.ables.has(able)) return false;\n  //   }\n  //   return true;\n  // }\n\n  protected register(): void {\n    // 注册默认 able\n    // this.getDefaultAbleRegistries().forEach(Registry => this.ables.add(Registry));\n    // 注册默认 data\n    this.getDefaultDataRegistries().forEach((Registry) => this.addData(Registry));\n  }\n\n  declare __opts_type__: OPTS;\n}\n\nexport namespace Entity {\n  export function getType(registry: EntityRegistry): string {\n    return registry.type;\n  }\n\n  /**\n   * 默认数据比较，采用浅比较\n   */\n  export function checkDataChanged(oldProps: any, newProps: any): boolean {\n    return Compare.isChanged(oldProps, newProps);\n  }\n\n  export function isRegistryOf(target: any, Registry: any): boolean {\n    if (target === Registry) return true;\n    // eslint-disable-next-line no-proto\n    let proto = target.__proto__;\n    while (proto && proto !== ObjectProto) {\n      if (proto.prototype === Registry.prototype) return true;\n      // eslint-disable-next-line no-proto\n      proto = proto.__proto__;\n    }\n    return false;\n  }\n}\n","import { OpacitySchemaDecoration, Schema } from '@flowgram.ai/utils';\nimport type { OpacitySchema } from '@flowgram.ai/utils';\n\nimport { EntityData } from '../entity-data';\n\nexport { OpacitySchema, OpacitySchemaDecoration };\n\nexport class OpacityData extends EntityData<OpacitySchema> {\n  static type = 'OpacityData';\n\n  getDefaultData(): OpacitySchema {\n    return Schema.createDefault<OpacitySchema>(OpacitySchemaDecoration);\n  }\n}\n","import { PositionSchemaDecoration, Schema } from '@flowgram.ai/utils';\nimport type { PositionSchema } from '@flowgram.ai/utils';\n\nimport { EntityData } from '../entity-data';\n\nexport { PositionSchema, PositionSchemaDecoration };\n\nexport class PositionData extends EntityData<PositionSchema> implements PositionSchema {\n  static type = 'PositionData';\n\n  getDefaultData(): PositionSchema {\n    return Schema.createDefault<PositionSchema>(PositionSchemaDecoration);\n  }\n\n  get x(): number {\n    return this.data.x;\n  }\n\n  get y(): number {\n    return this.data.y;\n  }\n\n  set x(x: number) {\n    this.update('x', x);\n  }\n\n  set y(y: number) {\n    this.update('y', y);\n  }\n}\n","import { RotationSchemaDecoration, Schema } from '@flowgram.ai/utils';\nimport type { RotationSchema } from '@flowgram.ai/utils';\n\nimport { EntityData } from '../entity-data';\n\nexport { RotationSchema, RotationSchemaDecoration };\n\nexport class RotationData extends EntityData<RotationSchema> {\n  static type = 'RotationData';\n\n  getDefaultData(): RotationSchema {\n    return Schema.createDefault<RotationSchema>(RotationSchemaDecoration);\n  }\n}\n","import { ScaleSchemaDecoration, Schema } from '@flowgram.ai/utils';\nimport type { ScaleSchema } from '@flowgram.ai/utils';\n\nimport { EntityData } from '../entity-data';\n\nexport { ScaleSchema, ScaleSchemaDecoration };\n\nexport class ScaleData extends EntityData<ScaleSchema> implements ScaleSchema {\n  static type = 'ScaleData';\n\n  getDefaultData(): ScaleSchema {\n    return Schema.createDefault(ScaleSchemaDecoration);\n  }\n\n  get x(): number {\n    return this.data.x;\n  }\n\n  get y(): number {\n    return this.data.y;\n  }\n\n  set x(x: number) {\n    this.update('x', x);\n  }\n\n  set y(y: number) {\n    this.update('y', y);\n  }\n}\n","import { SizeSchema, SizeSchemaDecoration, Schema } from '@flowgram.ai/utils';\n\nimport { EntityData } from '../entity-data';\n\nexport { SizeSchema, SizeSchemaDecoration };\n\nexport class SizeData extends EntityData<SizeSchema> implements SizeSchema {\n  static type = 'SizeData';\n\n  getDefaultData(): SizeSchema {\n    return Schema.createDefault<SizeSchema>(SizeSchemaDecoration);\n  }\n\n  get width(): number {\n    return this.data.width;\n  }\n\n  get height(): number {\n    return this.data.height;\n  }\n\n  set width(width: number) {\n    this.update('width', width);\n  }\n\n  set height(height: number) {\n    this.update('height', height);\n  }\n\n  get locked(): boolean {\n    return !!this.data.locked;\n  }\n\n  set locked(locked: boolean) {\n    this.update('locked', locked);\n  }\n}\n","import { SkewSchemaDecoration, Schema } from '@flowgram.ai/utils';\nimport type { SkewSchema } from '@flowgram.ai/utils';\n\nimport { EntityData } from '../entity-data';\n\nexport { SkewSchema, SkewSchemaDecoration };\n\nexport class SkewData extends EntityData<SkewSchema> implements SkewSchema {\n  static type = 'SkewData';\n\n  getDefaultData(): SkewSchema {\n    return Schema.createDefault<SkewSchema>(SkewSchemaDecoration);\n  }\n\n  get x(): number {\n    return this.data.x;\n  }\n\n  get y(): number {\n    return this.data.y;\n  }\n\n  set x(x: number) {\n    this.update('x', x);\n  }\n\n  set y(y: number) {\n    this.update('y', y);\n  }\n}\n","import {\n  Angle,\n  Circle,\n  Disposable,\n  DisposableCollection,\n  Matrix,\n  PI_2,\n  RAD_TO_DEG,\n  Rectangle,\n  Schema,\n  TransformSchema,\n  TransformSchemaDecoration,\n} from '@flowgram.ai/utils';\n\nimport { Bounds } from '../utils/bounds';\nimport { EntityData } from '../entity-data';\nimport type { Entity } from '../entity';\nimport { SkewData, type SkewSchema } from './skew-schema';\nimport { SizeData, type SizeSchema } from './size-schema';\nimport { ScaleData, type ScaleSchema } from './scale-schema';\nimport { RotationData } from './rotation-schema';\nimport { PositionData, type PositionSchema } from './position-schema';\nimport { OriginData, type OriginSchema } from './origin-schema';\n\nexport { TransformSchemaDecoration, TransformSchema };\n\nexport class TransformData extends EntityData<TransformSchema> implements TransformSchema {\n  static type = 'TransformData';\n\n  protected _worldTransform: Matrix = new Matrix();\n\n  protected _localTransform: Matrix = new Matrix();\n\n  protected _children: TransformData[] | undefined;\n\n  protected mutationCache: Map<string, any> = new Map();\n\n  public sizeToScale = false; // 标记 size 转成 scale\n\n  get children(): TransformData[] {\n    return this._children || [];\n  }\n\n  clearChildren(): void {\n    if (this._children) {\n      this._children.slice().forEach(child => {\n        child.setParent(undefined);\n      });\n    }\n  }\n\n  /**\n   * 容器选择框会动态计算子节点大小\n   */\n  get isContainer(): boolean {\n    return !!this._children && this._children.length > 0;\n  }\n\n  /**\n   * The X-coordinate value of the normalized local X axis,\n   * the first column of the local transformation matrix without a scale.\n   */\n  protected _cx = 1;\n\n  /**\n   * The Y-coordinate value of the normalized local X axis,\n   * the first column of the local transformation matrix without a scale.\n   */\n  protected _sx = 0;\n\n  /**\n   * The X-coordinate value of the normalized local Y axis,\n   * the second column of the local transformation matrix without a scale.\n   */\n  protected _cy = 0;\n\n  /**\n   * The Y-coordinate value of the normalized local Y axis,\n   * the second column of the local transformation matrix without a scale.\n   */\n  protected _sy = 1;\n\n  /**\n   * The locally unique ID of the local transform.\n   */\n  protected _localID = 0;\n\n  /**\n   * The locally unique ID of the local transform\n   * used to calculate the current local transformation matrix.\n   */\n  protected _currentLocalID = 0;\n\n  /**\n   * The locally unique ID of the world transform.\n   */\n  protected _worldID = 0;\n\n  /**\n   * The locally unique ID of the parent's world transform\n   * used to calculate the current world transformation matrix.\n   */\n  protected _parentID = 0;\n\n  /**\n   * The parent transform\n   */\n  protected _parent?: TransformData;\n\n  constructor(entity: Entity) {\n    super(entity);\n    // 默认添加\n    this.bindChange(this.entity.addData(PositionData));\n    this.bindChange(this.entity.addData(SizeData));\n    this.bindChange(this.entity.addData(OriginData));\n    this.bindChange(this.entity.addData(ScaleData));\n    this.bindChange(this.entity.addData(SkewData), () => this.updateSkew());\n    this.bindChange(this.entity.addData(RotationData), () => this.updateSkew());\n  }\n\n  fireChange(): void {\n    if (this.changeLocked) return;\n    this._localID++;\n    this.mutationCache.clear();\n    super.fireChange();\n  }\n\n  get localTransform(): Matrix {\n    this.updateLocalTransformMatrix();\n    return this._localTransform;\n  }\n\n  get worldTransform(): Matrix {\n    this.updateTransformMatrix();\n    return this._worldTransform;\n  }\n\n  getDefaultData(): TransformSchema {\n    return Schema.createDefault<TransformSchema>(TransformSchemaDecoration);\n  }\n\n  update(data: Partial<TransformSchema>): void {\n    if (data.position) {\n      this.entity.updateData(PositionData, data.position);\n    }\n    if (data.size) {\n      this.entity.updateData(SizeData, data.size);\n    }\n    if (data.origin) {\n      this.entity.updateData(OriginData, data.origin);\n    }\n    if (data.scale) {\n      this.entity.updateData(ScaleData, data.scale);\n    }\n    if (data.skew) {\n      this.entity.updateData(SkewData, data.skew);\n    }\n    if (data.rotation !== undefined) {\n      this.entity.updateData(RotationData, data.rotation);\n    }\n  }\n\n  get position(): PositionSchema {\n    return this.entity.getData<PositionData>(PositionData)!;\n  }\n\n  set position(position: PositionSchema) {\n    this.entity.updateData<PositionData>(PositionData, position);\n  }\n\n  get size(): SizeSchema {\n    return this.entity.getData<SizeData>(SizeData)!;\n  }\n\n  set size(size: SizeSchema) {\n    this.entity.updateData<SizeData>(SizeData, size);\n  }\n\n  get origin(): OriginSchema {\n    return this.entity.getData<OriginData>(OriginData)!;\n  }\n\n  set origin(origin: OriginSchema) {\n    this.entity.updateData<OriginData>(OriginData, origin);\n  }\n\n  get scale(): ScaleSchema {\n    return this.entity.getData<ScaleData>(ScaleData)!;\n  }\n\n  set scale(scale: ScaleSchema) {\n    this.entity.updateData<ScaleData>(ScaleData, scale);\n  }\n\n  get skew(): SkewSchema {\n    return this.entity.getData<SkewData>(SkewData)!;\n  }\n\n  set skew(skew: SkewSchema) {\n    this.entity.updateData<SkewData>(SkewData, skew);\n  }\n\n  get rotation(): number {\n    return this.entity.getData<RotationData>(RotationData)!.data;\n  }\n\n  set rotation(rotation: number) {\n    this.entity.updateData<RotationData>(RotationData, rotation);\n  }\n\n  get data(): TransformSchema {\n    return TransformSchema.toJSON(this);\n  }\n\n  /**\n   * Called when the skew or the rotation changes.\n   *\n   * @protected\n   */\n  protected updateSkew(): void {\n    const { rotation } = this;\n    this._cx = Math.cos(rotation + this.skew.y);\n    this._sx = Math.sin(rotation + this.skew.y);\n    this._cy = -Math.sin(rotation - this.skew.x); // cos, added PI/2\n    this._sy = Math.cos(rotation - this.skew.x); // sin, added PI/2\n\n    this._localID++;\n  }\n\n  /**\n   * Updates the local transformation matrix.\n   */\n  protected updateLocalTransformMatrix(): void {\n    const lt = this._localTransform;\n\n    if (this._localID !== this._currentLocalID) {\n      // get the matrix values of the displayobject based on its transform properties..\n      lt.a = this._cx * this.scale.x;\n      lt.b = this._sx * this.scale.x;\n      lt.c = this._cy * this.scale.y;\n      lt.d = this._sy * this.scale.y;\n\n      // TODO 删除这个 origin 偏移，不然会有一像素的偏差\n      lt.tx = this.position.x; //  - (this.origin.x * lt.a + this.origin.y * lt.c)\n      lt.ty = this.position.y; // - (this.origin.x * lt.b + this.origin.y * lt.d)\n      this._currentLocalID = this._localID;\n\n      // force an update..\n      this._parentID = -1;\n    }\n  }\n\n  get localID() {\n    return this._localID;\n  }\n\n  get worldID() {\n    return this._worldID;\n  }\n\n  /**\n   * Updates the local and the world transformation matrices.\n   *\n   */\n  protected updateTransformMatrix(): void {\n    const lt = this._localTransform;\n    this.updateLocalTransformMatrix();\n    let parentTransform: Matrix = Matrix.TEMP_MATRIX;\n    let worldId = 0;\n    if (this.parent) {\n      parentTransform = this.parent.worldTransform;\n      worldId = this.parent._worldID;\n    }\n    if (this._parentID !== worldId) {\n      // concat the parent matrix with the objects transform.\n      const pt = parentTransform;\n      const wt = this._worldTransform;\n\n      wt.a = lt.a * pt.a + lt.b * pt.c;\n      wt.b = lt.a * pt.b + lt.b * pt.d;\n      wt.c = lt.c * pt.a + lt.d * pt.c;\n      wt.d = lt.c * pt.b + lt.d * pt.d;\n      wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n      wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n      this._parentID = worldId;\n\n      // update the id of the transform..\n      this._worldID++;\n    }\n  }\n\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   *\n   * matrix - The matrix to decompose\n   */\n  setFromMatrix(matrix: Matrix): void {\n    // sort out rotation / skew..\n    const { a, b, c, d } = matrix;\n\n    const skewX = -Math.atan2(-c, d);\n    const skewY = Math.atan2(b, a);\n\n    const delta = Math.abs(skewX + skewY);\n\n    if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001) {\n      this.rotation = skewY;\n      this.skew.x = this.skew.y = 0;\n    } else {\n      this.rotation = 0;\n      this.skew.x = skewX;\n      this.skew.y = skewY;\n    }\n\n    // next set scale\n    this.scale.x = Math.sqrt(a * a + b * b);\n    this.scale.y = Math.sqrt(c * c + d * d);\n\n    // next set position\n    this.position.x = matrix.tx;\n    this.position.y = matrix.ty;\n    this.fireChange();\n  }\n\n  /**\n   * 缓存计算, 缓存只能针对 local, world 加缓存会出问题\n   */\n  getMutationCache<T>(key: string, fn: () => T): T {\n    // 缓存设计有问题，先去掉\n    if (this.mutationCache.has(key)) return this.mutationCache.get(key) as T;\n    const item = fn();\n    this.mutationCache.set(key, item);\n    return item;\n  }\n\n  get bounds(): Rectangle {\n    if (this.isContainer) {\n      const children = this._children!;\n      return Rectangle.enlarge(children.map(c => c.bounds));\n    }\n    return Bounds.getBounds(this, this.worldTransform);\n  }\n\n  /**\n   * 不旋转的 bounds\n   */\n  get boundsWithoutRotation(): Rectangle {\n    const { center } = this.bounds;\n    const { worldScale } = this;\n    // TODO 目前 container 计算有误差，需要解决\n    const size = this.localSize;\n    const width = worldScale.x * size.width;\n    const height = worldScale.y * size.height;\n    const leftTop = {\n      x: center.x - width / 2,\n      y: center.y - height / 2,\n    };\n    return new Rectangle(leftTop.x, leftTop.y, width, height);\n  }\n\n  /**\n   * 本身的大小\n   */\n  get localSize(): SizeSchema {\n    let { size } = this;\n    if (this.isContainer) {\n      const childrenBounds = Rectangle.enlarge(this.children.map(c => c.localBounds));\n      size = {\n        width: childrenBounds.width,\n        height: childrenBounds.height,\n      };\n    }\n    return {\n      width: size.width,\n      height: size.height,\n    };\n  }\n\n  get worldSize(): SizeSchema {\n    const { localSize } = this;\n    const { worldScale } = this;\n    return {\n      width: localSize.width * worldScale.x,\n      height: localSize.height * worldScale.y,\n    };\n  }\n\n  /**\n   * 本地 bounds\n   */\n  get localBounds(): Rectangle {\n    if (this.isContainer) {\n      const children = this._children!;\n      const childrenBounds = Rectangle.enlarge(children.map(c => c.localBounds));\n      // 投射 local\n      return Bounds.applyMatrix(childrenBounds, this.localTransform);\n    }\n    return this.getMutationCache<Rectangle>('localBounds', () =>\n      Bounds.getBounds(this, this.localTransform),\n    );\n  }\n\n  /**\n   * 判断是否包含点\n   * @param x\n   * @param y\n   * @param asCircle - 以圆形来算，TODO 目前不支持椭圆形\n   */\n  contains(x: number, y: number, asCircle?: boolean): boolean {\n    // Container 情况不支持 circle\n    if (this.isContainer) {\n      return this.bounds.contains(x, y);\n    }\n    const tempPoint = this.worldTransform.applyInverse({ x, y });\n    const { width, height } = this.size;\n    // 不包含空大小 TODO\n    if (width === 0 || height === 0) return false;\n    const x1 = -width * this.origin.x;\n    const y1 = -height * this.origin.y;\n    if (asCircle) {\n      const circle = new Circle(x1 + width / 2, y1 + height / 2, Math.min(width / 2, height / 2));\n      return circle.contains(tempPoint.x, tempPoint.y);\n    }\n    if (tempPoint.x >= x1 && tempPoint.x < x1 + width) {\n      if (tempPoint.y >= y1 && tempPoint.y < y1 + height) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  get parent(): TransformData | undefined {\n    return this._parent;\n  }\n\n  isParent(parent: TransformData): boolean {\n    let currentParent = this.parent;\n    while (currentParent) {\n      if (currentParent === parent) return true;\n      currentParent = currentParent.parent;\n    }\n    return false;\n  }\n\n  isParentTransform(parent?: TransformData): boolean {\n    let currentParent = this.parent;\n    while (currentParent) {\n      if (currentParent === parent) return true;\n      currentParent = currentParent.parent;\n    }\n    return false;\n  }\n\n  private _parentChangedDispose?: DisposableCollection;\n\n  setParent(parent: TransformData | undefined, listenParentData = true): void {\n    if (this._parent !== parent) {\n      if (this._parentChangedDispose) {\n        this._parentChangedDispose.dispose();\n        this._parentChangedDispose = undefined;\n      }\n      this._parentID = -1;\n      if (parent && listenParentData) {\n        if (!parent._children) parent._children = [];\n        parent._children.push(this);\n        this._parentChangedDispose = new DisposableCollection();\n        this.toDispose.push(this._parentChangedDispose);\n        this._parentChangedDispose.pushAll([\n          parent.onDispose(() => {\n            this.setParent(undefined);\n          }),\n          Disposable.create(() => {\n            const index = parent._children!.indexOf(this);\n            if (index !== -1) {\n              parent._children!.splice(index, 1);\n            }\n          }),\n        ]);\n      }\n      this._parent = parent;\n      this.fireChange();\n    }\n  }\n\n  /**\n   * 判断矩形碰撞\n   */\n  intersects(rect: Rectangle): boolean {\n    if (!this.isContainer && (this.size.width === 0 || this.size.height === 0)) return false;\n    return Rectangle.intersectsWithRotation(\n      this.boundsWithoutRotation,\n      this.worldRotation,\n      rect,\n      0,\n    );\n  }\n\n  /**\n   * 全局的 scale\n   */\n  get worldScale(): ScaleSchema {\n    const { parent } = this;\n    const parentScale = parent ? parent.worldScale : { x: 1, y: 1 };\n    return {\n      x: this.scale.x * parentScale.x,\n      y: this.scale.y * parentScale.y,\n    };\n  }\n\n  /**\n   * 全局的 rotation\n   */\n  get worldRotation(): number {\n    const { parent } = this;\n    if (parent) {\n      return Angle.wrap(this.rotation + parent.worldRotation);\n    }\n    return Angle.wrap(this.rotation);\n  }\n\n  /**\n   * 全局的角度\n   */\n  get worldDegree(): number {\n    return Math.round(this.worldRotation * RAD_TO_DEG);\n  }\n\n  get localOrigin(): PositionSchema {\n    const matrix = this.localTransform;\n    const bounds = this.localBounds;\n    return matrix.apply({\n      x: this.origin.x * bounds.width,\n      y: this.origin.y * bounds.height,\n    });\n  }\n\n  /**\n   * 全局的原点位置\n   */\n  get worldOrigin(): PositionSchema {\n    const matrix = this.worldTransform;\n    const { bounds } = this;\n    return matrix.apply({\n      x: this.origin.x * bounds.width,\n      y: this.origin.y * bounds.height,\n    });\n  }\n\n  /**\n   * 宽转换成 scale，用于图片等无法修改大小的场景\n   * @param isWorldSize 是否为绝对大小\n   */\n  widthToScaleX(width: number, isWorldSize?: boolean): number {\n    const parentScaleX = isWorldSize && this.parent ? this.parent.worldScale.x : 1;\n    return width / parentScaleX / this.localSize.width;\n  }\n\n  /**\n   * 绝对高转换成 scale，用于图片等无法修改大小的场景\n   * @param isWorldSize 是否为绝对大小\n   */\n  heightToScaleY(height: number, isWorldSize?: boolean): number {\n    const parentScaleY = isWorldSize && this.parent ? this.parent.worldScale.y : 1;\n    return height / parentScaleY / this.localSize.height;\n  }\n\n  sizeToScaleValue(\n    size: { width: number; height: number },\n    isWorldSize?: boolean,\n  ): { x: number; y: number } {\n    return {\n      x: this.widthToScaleX(size.width, isWorldSize),\n      y: this.heightToScaleY(size.height, isWorldSize),\n    };\n  }\n}\n\nexport namespace TransformData {\n  /**\n   * @param dragableEntities\n   * @param target\n   */\n  export function isParentOrChildrenTransform(dragableEntities: Entity[], target: Entity): boolean {\n    const targetTransform = target.getData<TransformData>(TransformData);\n    if (!targetTransform) return false;\n    for (const dragger of dragableEntities.values()) {\n      const draggerTransform = dragger.getData<TransformData>(TransformData);\n      // eslint-disable-next-line no-continue\n      if (!draggerTransform) continue;\n      if (\n        draggerTransform.isParent(targetTransform) ||\n        targetTransform.isParent(draggerTransform)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { type Matrix, Point, Rectangle } from '@flowgram.ai/utils';\n\nimport type { PositionSchema, TransformSchema } from '../schema';\n\ntype TransformOriginAndSize = Pick<TransformSchema, 'origin'> & Pick<TransformSchema, 'size'>;\n\nconst { fixZero } = Point;\n\nexport namespace Bounds {\n  /**\n   * 位置做矩阵偏移\n   */\n  export function getPointWithMatrix(output: PositionSchema, matrix?: Matrix): PositionSchema {\n    // if (target.rotation !== 0) {\n    // rotateAround(output, target.position.x, target.position.y, target.rotation);\n    // }\n    if (matrix) {\n      matrix.apply(output, output);\n    }\n    // fix: -0\n    fixZero(output);\n    return output;\n  }\n  /**\n   * 获取外围边界矩形\n   */\n  export function getBounds(target: TransformOriginAndSize, matrix?: Matrix): Rectangle {\n    const output = new Rectangle();\n    if (!matrix || matrix.isSimple()) {\n      const { size, origin } = target;\n      output.x = -(size.width * origin.x) + (matrix?.tx || 0);\n      output.y = -(size.height * origin.y) + (matrix?.ty || 0);\n      output.width = size.width;\n      output.height = size.height;\n      // fix: -0\n      fixZero(output);\n    } else {\n      const topLeft = getTopLeft(target, matrix);\n      const topRight = getTopRight(target, matrix);\n      const bottomLeft = getBottomLeft(target, matrix);\n      const bottomRight = getBottomRight(target, matrix);\n      output.x = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n      output.y = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n      output.width = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x) - output.x;\n      output.height = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y) - output.y;\n    }\n    return output;\n  }\n  export function applyMatrix(bounds: Rectangle, matrix: Matrix): Rectangle {\n    const output = new Rectangle();\n    if (matrix.isSimple()) {\n      output.x = bounds.x + matrix.tx;\n      output.y = bounds.y + matrix.ty;\n      output.width = bounds.width;\n      output.height = bounds.height;\n      // fix: -0\n      fixZero(output);\n    } else {\n      const topLeft = getPointWithMatrix(bounds.leftTop, matrix);\n      const topRight = getPointWithMatrix(bounds.rightTop, matrix);\n      const bottomLeft = getPointWithMatrix(bounds.leftBottom, matrix);\n      const bottomRight = getPointWithMatrix(bounds.rightBottom, matrix);\n      output.x = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n      output.y = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n      output.width = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x) - output.x;\n      output.height = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y) - output.y;\n    }\n    return output;\n  }\n\n  /**\n   * 找到边框中最左边的点\n   */\n  export function getLeftPointFromBounds(\n    target: TransformOriginAndSize,\n    matrix?: Matrix,\n  ): PositionSchema {\n    const topLeft = getTopLeft(target, matrix);\n    const topRight = getTopRight(target, matrix);\n    const bottomLeft = getBottomLeft(target, matrix);\n    const bottomRight = getBottomRight(target, matrix);\n    const items = [topLeft, topRight, bottomLeft, bottomRight].sort((p1, p2) => p1.x - p2.x);\n    return items[0];\n  }\n  /**\n   * 找到边框中最上边的点\n   */\n  export function getTopPointFromBounds(\n    target: TransformOriginAndSize,\n    matrix?: Matrix,\n  ): PositionSchema {\n    const topLeft = getTopLeft(target, matrix);\n    const topRight = getTopRight(target, matrix);\n    const bottomLeft = getBottomLeft(target, matrix);\n    const bottomRight = getBottomRight(target, matrix);\n    const items = [topLeft, topRight, bottomLeft, bottomRight].sort((p1, p2) => p1.y - p2.y);\n    return items[0];\n  }\n  export function getCenter(target: TransformSchema, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x) + size.width / 2,\n      y: -(size.height * origin.y) + size.height / 2,\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getTopLeft(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x),\n      y: -(size.height * origin.y),\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getTopCenter(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x) + size.width / 2,\n      y: -(size.height * origin.y),\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getTopRight(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x) + size.width,\n      y: -(size.height * origin.y),\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getLeftCenter(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x),\n      y: -(size.height * origin.y) + size.height / 2,\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getRightCenter(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x) + size.width,\n      y: -(size.height * origin.y) + size.height / 2,\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getBottomLeft(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x),\n      y: -(size.height * origin.y) + size.height,\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getBottomCenter(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x) + size.width / 2,\n      y: -(size.height * origin.y) + size.height,\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n  export function getBottomRight(target: TransformOriginAndSize, matrix?: Matrix): PositionSchema {\n    const { size, origin } = target;\n    const output = {\n      x: -(size.width * origin.x) + size.width,\n      y: -(size.height * origin.y) + size.height,\n    };\n    return getPointWithMatrix(output, matrix);\n  }\n}\n","import { inject, injectable, interfaces, multiInject, optional, postConstruct } from 'inversify';\nimport { Disposable, DisposableCollection, Emitter } from '@flowgram.ai/utils';\n\nimport { PlaygroundSchedule } from './playground-schedule';\nimport {\n  injectPlaygroundContext,\n  PlaygroundContainerFactory,\n  PlaygroundContext,\n} from './playground-context';\nimport { EntityManagerContribution } from './entity-manager-contribution';\nimport { ConfigEntity } from './config-entity';\n// import { AbleManager } from './able-manager';\nimport type {\n  Entity,\n  EntityData,\n  EntityDataInjector,\n  EntityDataRegistry,\n  EntityJSON,\n  EntityOpts,\n  EntityRegistry,\n} from '.';\n\n/**\n * 让 entity 可以注入到类中\n *\n * @example\n * ```\n *    class SomeClass {\n *      @inject(PlaygroundConfigEntity) playgroundConfig: PlaygroundConfigEntity\n *    }\n * ```\n * @param bind\n * @param entityRegistry\n */\nexport function bindConfigEntity(bind: interfaces.Bind, entityRegistry: EntityRegistry): void {\n  bind(entityRegistry)\n    .toDynamicValue(\n      ctx =>\n        ctx.container.get<EntityManager>(EntityManager)!.createEntity(entityRegistry)! as never,\n    )\n    .inSingletonScope();\n}\n\n/**\n * TODO registry 改成 decorator\n * Entity 管理器，全局唯一\n */\n@injectable()\nexport class EntityManager implements Disposable {\n  readonly toDispose = new DisposableCollection();\n\n  protected onEntityChangeEmitter = new Emitter<string>();\n\n  protected onEntityLifeCycleEmitter = new Emitter<{\n    type: 'add' | 'update' | 'delete';\n    entity: Entity;\n  }>();\n\n  protected onEntityDataChangeEmitter = new Emitter<{\n    entityType: string;\n    entityDataType: string;\n  }>();\n\n  /**\n   *  Entity 的类缓存，便于在 fromJSON 时候查询对应的类\n   */\n  protected registryMap: Map<string, EntityRegistry> = new Map();\n\n  /**\n   * Entity 数据类缓存，便于 fromJSON 使用\n   */\n  protected dataRegistryMap: Map<string, EntityDataRegistry> = new Map();\n\n  /**\n   * Entity 数据类依赖注入器，可用于在EntityData构造器中注入第三方模块\n   */\n  protected dataInjectorMap: Map<string, EntityDataInjector> = new Map();\n\n  /**\n   * Entity 的所有实例缓存\n   */\n  protected entityInstanceMap: Map<string, Entity> = new Map(); // By entity id\n\n  /**\n   * entity 全局版本更新\n   * @protected\n   */\n  protected entityVersionMap: Map<string, number> = new Map();\n\n  /**\n   * data 全局版本更新\n   * @protected\n   */\n  protected entityDataVersionMap: Map<string, number> = new Map();\n\n  /**\n   * Entity 的实例按类型缓存，便于查询优化\n   */\n  protected entityInstanceMapByType: Map<string, Entity[]> = new Map(); // By entity type\n\n  /**\n   * 所有配置实体的缓存\n   */\n  protected configEntities: Map<string, ConfigEntity> = new Map();\n\n  /**\n   * 当对应的实体类型变化后触发\n   */\n  readonly onEntityChange = this.onEntityChangeEmitter.event;\n\n  /**\n   * entity data 数据变化\n   */\n  readonly onEntityDataChange = this.onEntityDataChangeEmitter.event;\n\n  /**\n   * Entity 生命周期变化\n   */\n  readonly onEntityLifeCycleChange = this.onEntityLifeCycleEmitter.event;\n\n  @multiInject(EntityManagerContribution)\n  @optional()\n  contributions: EntityManagerContribution[];\n\n  @injectPlaygroundContext() context: PlaygroundContext;\n\n  @inject(PlaygroundContainerFactory) @optional() protected containerFactory:\n    | PlaygroundContainerFactory\n    | undefined;\n\n  /**\n   * 暂停触发实体类型变化\n   */\n  changeEntityLocked = false;\n\n  constructor() {\n    this.toDispose.pushAll([this.onEntityChangeEmitter, this.schedule]);\n  }\n\n  @postConstruct()\n  init() {\n    this.contributions.forEach(contrib => contrib.registerEntityManager?.(this));\n  }\n\n  /**\n   * 创建实体\n   */\n  createEntity<T extends Entity>(\n    Registry: EntityRegistry,\n    opts?: Omit<T['__opts_type__'], 'entityManager'>,\n  ): T {\n    if (!Registry.type) {\n      throw new Error(`[EntityManager] createEntity need a type: ${Registry}`);\n    }\n    // this.registerEntity(Registry);\n    // ConfigEntity 默认为单例\n    if (this.configEntities.has(Registry.type)) {\n      return this.configEntities.get(Registry.type) as any;\n    }\n    const entityOpts: EntityOpts = {\n      entityManager: this,\n      savedInManager: true,\n      ...opts,\n    };\n    const entity = new Registry(entityOpts) as T;\n    if (entityOpts.savedInManager) {\n      this.saveEntity(entity);\n    }\n    return entity;\n  }\n\n  isConfigEntity(type: string): boolean {\n    return this.configEntities.has(type);\n  }\n\n  /**\n   * 批量删除实体\n   */\n  removeEntities(Registry: EntityRegistry): void {\n    for (const e of this.getEntities(Registry).values()) {\n      e.dispose();\n    }\n  }\n\n  removeEntityById(id: string): boolean {\n    const entity = this.getEntityById(id);\n    if (entity) {\n      entity.dispose();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 触发实体 reset\n   * @param registry\n   */\n  resetEntities(registry: EntityRegistry): void {\n    const entities = this.getEntities(registry);\n    entities.forEach(entity => {\n      entity.reset();\n    });\n  }\n\n  resetEntity(registry: EntityRegistry, autoCreate?: boolean): void {\n    const entity = this.getEntity(registry, autoCreate);\n    entity?.reset();\n  }\n\n  updateConfigEntity<E extends ConfigEntity>(\n    registry: EntityRegistry,\n    config: Partial<E['config']>,\n  ): void {\n    const entity = this.configEntities.get(registry.type);\n    if (entity) {\n      entity.updateConfig(config);\n    }\n  }\n\n  /**\n   * @param type\n   */\n  getRegistryByType(type: string): EntityRegistry | undefined {\n    return this.registryMap.get(type);\n  }\n\n  registerEntity(Registry: EntityRegistry): void {\n    if (!Registry.type) throw new Error(`Registry entity need a type: ${Registry.name}`);\n    const oldRegistry = this.registryMap.get(Registry.type);\n    if (oldRegistry) {\n      if (oldRegistry !== Registry) {\n        throw new Error(`Entity registry ${Registry.type} need a new type`);\n      }\n      return;\n    }\n    this.registryMap.set(Registry.type, Registry);\n  }\n\n  registerEntityData(Registry: EntityDataRegistry, injector?: EntityDataInjector): void {\n    if (!Registry.type) throw new Error(`Registry entity data need a type: ${Registry.name}`);\n    const oldRegistry = this.dataRegistryMap.get(Registry.type);\n    if (!oldRegistry) {\n      this.dataRegistryMap.set(Registry.type, Registry);\n      // if (oldRegistry !== Registry) {\n      //   throw new Error(`Entity data registry ${Registry.type} need a new type`)\n      // }\n      // return\n    }\n\n    const oldInjector = this.dataInjectorMap.get(Registry.type);\n    if (!oldInjector && injector) {\n      this.dataInjectorMap.set(Registry.type, injector);\n    }\n  }\n\n  getDataRegistryByType(type: string): EntityDataRegistry | undefined {\n    return this.dataRegistryMap.get(type);\n  }\n\n  getEntityById<T extends Entity>(id: string): T | undefined {\n    return this.entityInstanceMap.get(id) as T;\n  }\n\n  /**\n   * @param autoCreate 是否要自动创建，默认 false\n   */\n  getEntity<T extends Entity>(registry: EntityRegistry, autoCreate?: boolean): T | undefined {\n    const entity = this.getEntities<T>(registry)[0];\n    if (!entity && autoCreate) {\n      return this.createEntity<T>(registry);\n    }\n    return entity;\n  }\n\n  getEntities<T extends Entity>(registry: EntityRegistry): T[] {\n    // 获取当前 entities 的快照\n    return (this.entityInstanceMapByType.get(registry.type) as T[]) || [];\n  }\n\n  // getEntitiesByAble<T extends Entity>(registry: AbleRegistry): T[] {\n  //   return this.ableManager.getEntitiesByAble<T>(registry);\n  // }\n  //\n  // getEntitiesByAbles<T extends Entity>(...registries: AbleRegistry[]): T[] {\n  //   return this.ableManager.getEntitiesByAbles<T>(...registries);\n  // }\n  //\n  // getEntityByAble<T extends Entity>(registry: AbleRegistry): T | undefined {\n  //   return this.ableManager.getEntityByAble<T>(registry);\n  // }\n\n  getEntityDatas<T extends EntityData>(\n    entityRegistry: EntityRegistry,\n    dataRegistry: EntityDataRegistry<T>,\n  ): T[] {\n    return this.getEntities<any>(entityRegistry)\n      .map((e: Entity) => e.getData<T>(dataRegistry))\n      .filter(d => !!d) as T[];\n  }\n\n  hasEntity(registry: EntityRegistry): boolean {\n    return !!this.getEntity(registry);\n  }\n\n  /**\n   * 只存储 config 数据，忽略动态数据\n   */\n  storeState({ configOnly = true }: { configOnly?: boolean } = {}): EntityJSON[] {\n    const data: EntityJSON[] = [];\n    for (const e of this.entityInstanceMap.values()) {\n      if ((!configOnly || e instanceof ConfigEntity) && e.toJSON) {\n        if (e.toJSON) {\n          const d = e.toJSON();\n          if (d) {\n            data.push(d);\n          }\n        }\n      }\n    }\n    return data;\n  }\n\n  restoreState(data: EntityJSON[]): void {\n    if (!data || !Array.isArray(data)) return;\n    data.forEach((s: EntityJSON) => {\n      if (!s || !s.type || !s.id) return;\n      const register = this.getRegistryByType(s.type);\n      // 如果没有注册，则忽略掉\n      if (!register) {\n        console.warn(`Playground entity registry lost: ${s.type}`);\n        return;\n      }\n      const entity = this.createEntity(register, {\n        id: s.id,\n      });\n      if (entity.fromJSON) {\n        entity.fromJSON(s);\n      }\n    });\n  }\n\n  protected saveEntity(entity: Entity): void {\n    const { id } = entity;\n    // 无法重复创建\n    if (id && this.entityInstanceMap.has(id)) {\n      console.error(`Entity ${entity.type} ${id} is created before`);\n      return;\n    }\n\n    this.entityInstanceMap.set(entity.id, entity);\n    let entities = this.entityInstanceMapByType.get(entity.type);\n    if (!entities) {\n      entities = [];\n      this.entityInstanceMapByType.set(entity.type, entities);\n    }\n    if (entity instanceof ConfigEntity) {\n      this.configEntities.set(entity.type, entity);\n    }\n    entities.push(entity);\n    entity.onEntityChange(entity => {\n      this.fireEntityChanged(entity);\n      this.fireEntityLifeCycleChanged({ type: 'update', entity });\n    });\n    entity.onDataChange(e => {\n      this.fireEntityDataChanged(entity.type, e.data.type);\n    });\n    entity.toDispose.push(\n      Disposable.create(() => {\n        this.removeEntity(entity);\n        this.fireEntityLifeCycleChanged({ type: 'delete', entity });\n      }),\n    );\n    entity\n      .getDefaultDataRegistries()\n      .forEach(registry => this.fireEntityDataChanged(entity.type, registry.type));\n    this.fireEntityChanged(entity);\n    this.fireEntityLifeCycleChanged({ type: 'add', entity });\n  }\n\n  protected removeEntity(entity: Entity): void {\n    if (this.entityInstanceMap.has(entity.id) && this.entityInstanceMapByType.has(entity.type)) {\n      const entities = this.entityInstanceMapByType.get(entity.type)!;\n      const index = entities.indexOf(entity);\n      if (index !== -1) {\n        this.entityInstanceMapByType.set(\n          entity.type,\n          entities.filter(e => e !== entity),\n        );\n        this.entityInstanceMap.delete(entity.id);\n\n        if (this.configEntities.has(entity.type)) {\n          this.configEntities.delete(entity.type);\n        }\n\n        this.fireEntityChanged(entity);\n      }\n    }\n  }\n\n  /**\n   * 重制所有 entity 为初始化状态\n   */\n  reset(): void {\n    for (const entity of this.entityInstanceMap.values()) {\n      entity.reset();\n    }\n  }\n\n  private schedule = new PlaygroundSchedule();\n\n  fireEntityChanged = (entity: Entity | string) => {\n    const entityType = typeof entity === 'string' ? entity : entity.type;\n    let version = this.entityVersionMap.get(entityType) || 0;\n    /* istanbul ignore next */\n    if (version === Number.MAX_SAFE_INTEGER) {\n      version = 0;\n    }\n    this.entityVersionMap.set(entityType, version + 1);\n    if (this.changeEntityLocked) return;\n    this.schedule.push(entityType, () => {\n      this.onEntityChangeEmitter.fire(entityType);\n    });\n  };\n\n  fireEntityDataChanged = (entityType: string, entityDataType: string) => {\n    let version = this.entityDataVersionMap.get(entityDataType) || 0;\n    /* istanbul ignore next */\n    if (version === Number.MAX_SAFE_INTEGER) {\n      version = 0;\n    }\n    this.entityDataVersionMap.set(entityDataType, version + 1);\n    this.schedule.push(`${entityType}/${entityDataType}`, () => {\n      this.onEntityDataChangeEmitter.fire({ entityType, entityDataType });\n    });\n  };\n\n  fireEntityLifeCycleChanged = ({\n    type,\n    entity,\n  }: {\n    type: 'add' | 'update' | 'delete';\n    entity: Entity;\n  }) => {\n    this.schedule.push(`${type}/${entity.id}`, () => {\n      this.onEntityLifeCycleEmitter.fire({ type, entity });\n    });\n  };\n\n  getEntityVersion(registry: EntityRegistry | string): number {\n    return this.entityVersionMap.get(typeof registry === 'string' ? registry : registry.type) || 0;\n  }\n\n  getEntityDataVersion(registry: EntityDataRegistry | string): number {\n    return (\n      this.entityDataVersionMap.get(typeof registry === 'string' ? registry : registry.type) || 0\n    );\n  }\n\n  dispose(): void {\n    this.toDispose.dispose();\n  }\n\n  getDataInjector(registry: EntityDataRegistry | string) {\n    return this.dataInjectorMap.get(typeof registry === 'string' ? registry : registry.type);\n  }\n\n  getService<T>(identifier: interfaces.ServiceIdentifier<T>): T {\n    return this.containerFactory?.get<T>(identifier) as T;\n  }\n}\n","import { throttle } from 'lodash';\nimport { type Disposable } from '@flowgram.ai/utils';\n\n// TODO 先用 throttle 替代\nexport class PlaygroundSchedule implements Disposable {\n  protected execMap: Map<any, () => void> = new Map();\n\n  push(key: any, fn: () => void): void {\n    const { execMap } = this;\n    if (process.env.NODE_ENV === 'test') {\n      fn();\n      return;\n    }\n    let schedule = execMap.get(key);\n    if (!schedule) {\n      schedule = throttle(fn, 0) as () => void;\n      execMap.set(key, schedule);\n    }\n    schedule();\n  }\n\n  dispose(): void {\n    this.execMap.clear();\n  }\n}\n","import {\n  Disposable,\n  Emitter,\n  generateLocalId,\n  type LocalId,\n  type Rectangle,\n} from '@flowgram.ai/utils';\n\nimport type { PlaygroundConfigEntity } from '../layer/config';\n// import { Dragable, DragablePayload } from '../able';\nimport type { PositionSchema } from '../../common/schema/position-schema';\n// import { type Entity } from '../../common/entity';\n// import { type Adsorber } from './adsorber';\n\n/* istanbul ignore next */\nconst SCROLL_DELTA = 4;\n/* istanbul ignore next */\nconst SCROLL_AUTO_DISTANCE = 20; // 自动滚动到边缘距离\n/* istanbul ignore next */\nconst SCROLL_INTERVAL = 20;\n\n/* istanbul ignore next */\nfunction createMouseEvent(type: string, clientX: number, clientY: number): MouseEvent {\n  const event = document.createEvent('MouseEvent');\n  event.initMouseEvent(\n    type,\n    true,\n    true,\n    // @ts-ignore\n    undefined,\n    0,\n    0,\n    0,\n    clientX,\n    clientY,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n  );\n  return event;\n}\n\nexport interface PlaygroundDragEvent extends MouseEvent {\n  id: LocalId;\n  startPos: PositionSchema;\n  endPos: PositionSchema;\n  movingDelta: PositionSchema; // 移动的偏移量\n  scale: number;\n  isMoving: boolean;\n  isStart: boolean;\n}\n\nexport interface PlaygroundDragOptions<T> {\n  onDragStart?: (e: PlaygroundDragEvent, context?: T) => void;\n  onDrag?: (e: PlaygroundDragEvent, context?: T) => void;\n  onDragEnd?: (e: PlaygroundDragEvent, context?: T) => void;\n  stopGlobalEventNames?: string[];\n}\n\n/* istanbul ignore next */\nexport class PlaygroundDrag<T = undefined> implements Disposable {\n  private onDragStartEmitter = new Emitter<PlaygroundDragEvent>();\n\n  private onDragEndEmitter = new Emitter<PlaygroundDragEvent>();\n\n  private onDragEmitter = new Emitter<PlaygroundDragEvent>();\n\n  private readonly _stopGlobalEventNames = [\n    'mouseenter',\n    'mouseleave',\n    'mouseover',\n    'mouseout',\n    'contextmenu',\n  ];\n\n  private localId: LocalId;\n\n  protected context?: T;\n\n  readonly onDrag = this.onDragEmitter.event;\n\n  readonly onDragStart = this.onDragStartEmitter.event;\n\n  readonly onDragEnd = this.onDragEndEmitter.event;\n\n  constructor(options: PlaygroundDragOptions<T> = {}) {\n    if (options.onDragStart) this.onDragStart(e => options.onDragStart!(e, this.context));\n    if (options.onDrag) this.onDrag(e => options.onDrag!(e, this.context));\n    if (options.onDragEnd) this.onDragEnd(e => options.onDragEnd!(e, this.context));\n    if (options.stopGlobalEventNames) this._stopGlobalEventNames = options.stopGlobalEventNames;\n  }\n\n  get isStarted(): boolean {\n    return !!this._promise;\n  }\n\n  start(\n    clientX: number,\n    clientY: number,\n    entity?: PlaygroundConfigEntity,\n    context?: T,\n  ): Promise<void> {\n    if (this._disposed) {\n      return Promise.resolve();\n    }\n    if (this._promise) {\n      return this._promise;\n    }\n    this.context = context;\n    this.localId = generateLocalId();\n    this._addListeners();\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n    });\n    this._playgroundConfigEntity = entity;\n    const mousedown = createMouseEvent('mousedown', clientX, clientY);\n    this._startPos = this.getRelativePos(mousedown);\n    this.onDragStartEmitter.fire(this.getDragEvent(mousedown));\n    return this._promise;\n  }\n\n  stop(clientX: number, clientY: number): void {\n    if (this._disposed || !this._promise) {\n      return;\n    }\n    const mouseup = createMouseEvent('mouseup', clientX, clientY);\n    this.handleEvent(mouseup);\n  }\n\n  dispose(): void {\n    if (this._disposed) return;\n    this._stopScrollX();\n    this._stopScrollY();\n    this._disposed = true;\n    this.onDragEmitter.dispose();\n    this.onDragStartEmitter.dispose();\n    this.onDragEndEmitter.dispose();\n    this._finalize();\n  }\n\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'mousemove':\n        this._evtMouseMove(event as MouseEvent);\n        break;\n      case 'mouseup':\n        this._stopScrollX();\n        this._stopScrollY();\n        this._evtMouseUp(event as MouseEvent);\n        break;\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      // TODO 暂时屏蔽右键菜单\n      case 'contextmenu':\n        const mouseup = createMouseEvent(\n          'mouseup',\n          (event as MouseEvent).clientX,\n          (event as MouseEvent).clientY,\n        );\n        this._evtMouseUp(mouseup);\n        break;\n      default:\n        // Stop all other events during drag-drop.\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  get scale(): number {\n    return this._playgroundConfigEntity ? this._playgroundConfigEntity.finalScale : 1;\n  }\n\n  protected getRelativePos(event: MouseEvent): PositionSchema {\n    if (this._playgroundConfigEntity) {\n      return this._playgroundConfigEntity.getPosFromMouseEvent(event, false);\n    }\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  private _lastPos: PositionSchema = { x: 0, y: 0 };\n\n  protected getDragEvent(event: MouseEvent): PlaygroundDragEvent {\n    const startPos = this._startPos!;\n    const { scale } = this;\n    switch (event.type) {\n      case 'mousedown':\n        this._lastPos = startPos;\n        return Object.assign(event, {\n          id: this.localId,\n          startPos,\n          endPos: startPos,\n          scale,\n          movingDelta: { x: 0, y: 0 },\n          isStart: true,\n          isMoving: false,\n        });\n      case 'mousemove':\n        const endPos = this.getRelativePos(event);\n        const movingDelta = {\n          x: endPos.x - this._lastPos.x,\n          y: endPos.y - this._lastPos.y,\n        };\n        this._lastPos = endPos;\n        return Object.assign(event, {\n          id: this.localId,\n          startPos,\n          endPos,\n          scale,\n          isStart: true,\n          movingDelta,\n          isMoving: true,\n        });\n      case 'mouseup':\n        this._lastPos = { x: 0, y: 0 };\n        return Object.assign(event, {\n          id: this.localId,\n          startPos,\n          endPos: this.getRelativePos(event),\n          movingDelta: { x: 0, y: 0 },\n          scale,\n          isStart: false,\n          isMoving: false,\n        });\n      default:\n        throw new Error('unknown event');\n    }\n  }\n\n  private _finalize(): void {\n    const resolve = this._resolve;\n    this._removeListeners();\n    this._startPos = undefined;\n    this._promise = undefined;\n    this._resolve = undefined;\n    if (resolve) {\n      resolve();\n    }\n  }\n\n  // 这个用于自动滚动时候使用\n  private _lastMouseMoveEvent?: MouseEvent;\n\n  /**\n   * Handle the `'mousemove'` event for the drag object.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Stop all input events during drag-drop.\n    event.preventDefault();\n    event.stopPropagation();\n    this._lastMouseMoveEvent = event;\n    const dragEvent = this.getDragEvent(event);\n    // Update the playground scroller.\n    this._updateDragScroll(dragEvent);\n    this.onDragEmitter.fire(dragEvent);\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the drag object.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    this._lastMouseMoveEvent = undefined;\n    // Stop all input events during drag-drop.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Do nothing if the left or center button is not released.\n    if (event.button !== 0 && event.button !== 1) {\n      return;\n    }\n    this.onDragEndEmitter.fire(this.getDragEvent(event));\n    this._finalize();\n  }\n\n  /**\n   * Handle the `'keydown'` event for the drag object.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop all input events during drag-drop.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Cancel the drag if `Escape` is pressed.\n    if (event.keyCode === 27) {\n      this.stop(NaN, NaN);\n    }\n  }\n\n  /**\n   * Add the document event listeners for the drag object.\n   */\n  private _addListeners(): void {\n    document.addEventListener('mousedown', this, true);\n    document.addEventListener('mousemove', this, true);\n    document.addEventListener('mouseup', this, true);\n\n    this._stopGlobalEventNames.forEach(_event => {\n      document.addEventListener(_event, this, true);\n    });\n  }\n\n  /**\n   * Remove the document event listeners for the drag object.\n   */\n  private _removeListeners(): void {\n    document.removeEventListener('mousedown', this, true);\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n\n    this._stopGlobalEventNames.forEach(_event => {\n      document.removeEventListener(_event, this, true);\n    });\n  }\n\n  /**\n   * 自动滚动画布\n   */\n  private _updateDragScroll = (event: PlaygroundDragEvent): void => {\n    if (!this._playgroundConfigEntity) return;\n    const playgroundConfig = this._playgroundConfigEntity.config;\n    const dragPos = event.endPos;\n    const { scrollX, width, height, scrollY } = playgroundConfig;\n    if (dragPos.x > width + scrollX - SCROLL_AUTO_DISTANCE) {\n      this._startScrollX(scrollX, true);\n    } else if (dragPos.x < scrollX + SCROLL_AUTO_DISTANCE) {\n      this._startScrollX(scrollX, false);\n    } else {\n      this._stopScrollX();\n    }\n    if (dragPos.y > height + scrollY - SCROLL_AUTO_DISTANCE) {\n      this._startScrollY(scrollY, true);\n    } else if (dragPos.y < scrollY + SCROLL_AUTO_DISTANCE) {\n      this._startScrollY(scrollY, false);\n    } else {\n      this._stopScrollY();\n    }\n  };\n\n  private _scrollXInterval: { interval: number; origin: number } | undefined;\n\n  private _scrollYInterval: { interval: number; origin: number } | undefined;\n\n  private _startScrollX(origin: number, added: boolean): void {\n    if (this._scrollXInterval) {\n      return;\n    }\n    const interval = window.setInterval(() => {\n      const current = this._scrollXInterval!;\n      if (!current) return;\n      this.fireScroll('scrollX', added);\n    }, SCROLL_INTERVAL);\n    this._scrollXInterval = { interval, origin };\n  }\n\n  private _stopScrollX(): void {\n    if (this._scrollXInterval) {\n      clearInterval(this._scrollXInterval.interval);\n      this._scrollXInterval = undefined;\n    }\n  }\n\n  private _startScrollY(origin: number, added: boolean): void {\n    if (this._scrollYInterval) {\n      return;\n    }\n    const interval = window.setInterval(() => {\n      this.fireScroll('scrollY', added);\n    }, SCROLL_INTERVAL);\n    this._scrollYInterval = { interval, origin };\n  }\n\n  private _stopScrollY(): void {\n    if (this._scrollYInterval) {\n      clearInterval(this._scrollYInterval.interval);\n      this._scrollYInterval = undefined;\n    }\n  }\n\n  /**\n   * 触发滚动\n   * @param scrollKey\n   * @param added\n   */\n  fireScroll(scrollKey: 'scrollY' | 'scrollX', added: boolean): void {\n    const current = scrollKey === 'scrollY' ? this._scrollYInterval : this._scrollXInterval;\n    if (!current) return;\n    const value = (current.origin = added\n      ? current.origin + SCROLL_DELTA\n      : current.origin - SCROLL_DELTA);\n    const oldScroll = this._playgroundConfigEntity!.config[scrollKey];\n    this._playgroundConfigEntity!.updateConfig({\n      [scrollKey]: value,\n    });\n    const newScroll = this._playgroundConfigEntity!.config[scrollKey];\n    if (newScroll !== oldScroll) {\n      const lastMouseMoveEvent = this._lastMouseMoveEvent!;\n      const delta = {\n        x: scrollKey === 'scrollX' ? newScroll - current.origin : 0,\n        y: scrollKey === 'scrollY' ? newScroll - current.origin : 0,\n      };\n      const mouseMove = createMouseEvent(\n        'mousemove',\n        lastMouseMoveEvent.clientX + delta.x,\n        lastMouseMoveEvent.clientY + delta.y,\n      );\n      const dragEvent = this.getDragEvent(mouseMove);\n      this.onDragEmitter.fire(dragEvent);\n    }\n  }\n\n  private _disposed = false;\n\n  private _promise?: Promise<void>;\n\n  private _resolve?: () => void;\n\n  private _startPos?: PositionSchema;\n\n  private _playgroundConfigEntity?: PlaygroundConfigEntity;\n}\n\nlet dragCache: PlaygroundDrag<any> | undefined;\n\nexport interface PlaygroundDragEntitiesOpts<T> extends PlaygroundDragOptions<T> {\n  // entities?: Entity[]; // 需要拖动的实体，会自动修改 position\n  context?: T; // 上下文\n  config?: PlaygroundConfigEntity;\n  adsorbRefs?: Rectangle[]; // 需要吸附的矩形\n  // adsorbLines?: Adsorber.Line[]; // 需要吸附的线\n}\n\n/* istanbul ignore next */\nexport namespace PlaygroundDrag {\n  /**\n   * 拖拽实体\n   */\n  export function startDrag<T>(\n    clientX: number,\n    clientY: number,\n    opts: PlaygroundDragEntitiesOpts<T> = {},\n  ): Disposable {\n    if (dragCache) {\n      dragCache.stop(NaN, NaN);\n    }\n    // const { entities } = opts;\n    // const ableManager = entities && entities.length >= 1 ? entities[0].ableManager : undefined;\n    const dragger = (dragCache = new PlaygroundDrag<T>({\n      onDragStart(e, ctx): void {\n        // if (ableManager) {\n        //   // 添加拖拽能力\n        //   entities!.forEach(n => n.addAbles(Dragable));\n        //   ableManager.dispatch<DragablePayload>(DragablePayload, e);\n        // }\n        if (opts.onDragStart) opts.onDragStart(e, ctx);\n      },\n      onDrag(e, ctx): void {\n        // if (ableManager) {\n        //   ableManager.dispatch<DragablePayload>(DragablePayload, {\n        //     ...e,\n        //     adsorbRefs: opts.adsorbRefs,\n        //     adsorbLines: opts.adsorbLines,\n        //   });\n        // }\n        if (opts.onDrag) opts.onDrag(e, ctx);\n      },\n      onDragEnd(e, ctx): void {\n        // if (ableManager) {\n        //   ableManager.dispatch<DragablePayload>(DragablePayload, e);\n        //   // 去除拖拽能力\n        //   entities!.forEach(n => n.removeAbles(Dragable));\n        // }\n        if (opts.onDragEnd) opts.onDragEnd(e, ctx);\n        dragger.dispose();\n        if (dragCache === dragger) dragCache = undefined;\n      },\n    }));\n    dragger.start(clientX, clientY, opts.config, opts.context);\n    return Disposable.create(() => {\n      dragger.stop(0, 0);\n      dragger.dispose();\n      if (dragCache === dragger) {\n        dragCache = undefined;\n      }\n    });\n  }\n}\n","import TWEEN from '@tweenjs/tween.js';\nimport { Disposable } from '@flowgram.ai/utils';\n\nlet started = 0;\n\n// Setup the animation loop.\nfunction startTweenLoop(): void {\n  started++;\n  function animate(time: number): void {\n    if (started <= 0) return;\n    requestAnimationFrame(animate);\n    TWEEN.update(time);\n  }\n  requestAnimationFrame(animate);\n}\n\nfunction stopTweenLoop(): void {\n  started--;\n}\n\ninterface TweenValues {\n  [key: string]: number;\n}\n\nexport interface TweenOpts<V> {\n  from: V;\n  to: V;\n  onUpdate?: (v: V) => void;\n  onComplete?: (v: V) => void;\n  onDispose?: (v: V) => void;\n  easing?: (num: number) => number;\n  duration: number;\n}\n\nexport function startTween<V extends TweenValues = TweenValues>(opts: TweenOpts<V>): Disposable {\n  startTweenLoop();\n  let stopped = false;\n  const tween = new TWEEN.Tween(opts.from)\n    .to(opts.to, opts.duration)\n    .easing(opts.easing || TWEEN.Easing.Quadratic.Out)\n    .onUpdate(() => {\n      if (stopped) return;\n      if (opts.onUpdate) opts.onUpdate(opts.from);\n    })\n    .onComplete(() => {\n      if (stopped) return;\n      stopped = true;\n      stopTweenLoop();\n      if (opts.onComplete) opts.onComplete(opts.from);\n    })\n    .start();\n  return Disposable.create(() => {\n    if (stopped) return;\n    stopped = true;\n    stopTweenLoop();\n    tween.stop();\n    if (opts.onDispose) opts.onDispose(opts.from);\n  });\n}\n\nexport interface ScrollIntoViewOpts {\n  getScrollParent(): HTMLElement | undefined;\n\n  getTargetNode(): HTMLElement | undefined;\n\n  duration?: number;\n  scrollY?: boolean; // 默认 true\n  scrollX?: boolean; // 默认 true\n}\n\nconst defaultScrollIntoViewOpts = {\n  duration: 300,\n  scrollY: true,\n  scrollX: true,\n};\n\nconst preTweenMap = new WeakMap<HTMLElement, Disposable>();\n\n/**\n * 滚动到可视区域\n * @param opts\n */\nexport function scrollIntoViewWithTween(opts: ScrollIntoViewOpts): Disposable {\n  opts = { ...defaultScrollIntoViewOpts, ...opts };\n  const parentNode = opts.getScrollParent();\n  const targetNode = opts.getTargetNode();\n  if (!parentNode || !targetNode) return Disposable.NULL;\n  // 销毁上一次的\n  if (preTweenMap.has(parentNode)) {\n    preTweenMap.get(parentNode)!.dispose();\n  }\n  const startScrollTop = parentNode.scrollTop;\n  const startScrollLeft = parentNode.scrollLeft;\n  let endScrollTop = startScrollTop;\n  let endScrollLeft = startScrollLeft;\n  const parentBound = parentNode.getBoundingClientRect();\n  const targetBound = targetNode.getBoundingClientRect();\n  const top = targetBound.top - parentBound.top + startScrollTop;\n  const left = targetBound.left - parentBound.left + startScrollLeft;\n  if (startScrollTop > top) {\n    endScrollTop = top;\n  } else {\n    const bottom = top + targetNode.clientHeight - parentNode.clientHeight;\n    if (startScrollTop < bottom && targetNode.clientHeight < parentNode.clientHeight) {\n      endScrollTop = bottom;\n    }\n  }\n  if (startScrollLeft > left) {\n    endScrollLeft = left;\n  } else {\n    const right = left + targetNode.clientWidth - parentNode.clientWidth;\n    if (startScrollLeft < right && targetNode.clientWidth < parentNode.clientWidth) {\n      endScrollLeft = right;\n    }\n  }\n  if (startScrollTop !== endScrollTop || startScrollLeft !== endScrollLeft) {\n    const from: { scrollTop?: number; scrollLeft?: number } = {};\n    const to: { scrollTop?: number; scrollLeft?: number } = {};\n    if (opts.scrollY) {\n      from.scrollTop = startScrollTop;\n      to.scrollTop = endScrollTop;\n    }\n    if (opts.scrollX) {\n      from.scrollLeft = startScrollLeft;\n      to.scrollLeft = endScrollLeft;\n    }\n    const scrollTween = startTween<{ scrollTop?: number; scrollLeft?: number }>({\n      from,\n      to,\n      onUpdate: v => {\n        if (v.scrollTop !== undefined) {\n          parentNode.scrollTop = v.scrollTop;\n        }\n        if (v.scrollLeft !== undefined) {\n          parentNode.scrollLeft = v.scrollLeft;\n        }\n      },\n      onComplete: () => {\n        toDispose.dispose();\n      },\n      duration: opts.duration!,\n    });\n    const toDispose = Disposable.create(() => {\n      scrollTween.dispose();\n      preTweenMap.delete(parentNode);\n    });\n    preTweenMap.set(parentNode, toDispose);\n    return toDispose;\n  }\n  return Disposable.NULL;\n}\n","import { Disposable, DisposableImpl } from '@flowgram.ai/utils';\n\nimport { type PlaygroundConfigEntity } from '../layer/config/playground-config-entity';\nimport { Gesture } from './use-gesture';\n\n/* istanbul ignore next */\nexport class PlaygroundGesture extends DisposableImpl {\n  private _pinching = false;\n\n  constructor(\n    public readonly target: HTMLElement,\n    protected readonly config: PlaygroundConfigEntity\n  ) {\n    super();\n    this.preventDefault();\n    const gesture = new Gesture(\n      target,\n      {\n        // onDrag: ({pinching, cancel, offset: [x, y], ...rest}) => {\n        //   if (pinching) return cancel();\n        //   onChange({ ...style, x, y })\n        //   api.start({ x, y })\n        // },\n        onPinch: ({\n          origin: [originX, originY],\n          first,\n          last,\n          movement: [ms],\n          offset: [newScale, a],\n        }) => {\n          this.handlePinch({ first, last, originX, originY, newScale });\n        },\n      },\n      {\n        // drag: { from: () => [startState.x, startState.y] },\n        pinch: {\n          scaleBounds: () => this.getScaleBounds(),\n          from: () => [this.config.finalScale, 0],\n          /**\n           * 支持 command 和 ctrl\n           */\n          modifierKey: ['metaKey', 'ctrlKey'],\n          // rubberband: true\n        },\n      }\n    );\n    this.toDispose.push(\n      Disposable.create(() => {\n        gesture.destroy();\n      })\n    );\n  }\n\n  handlePinch(params: {\n    first: boolean;\n    last: boolean;\n    originX: number;\n    originY: number;\n    newScale: number;\n  }) {\n    const { first, last, originX, originY, newScale } = params;\n    if (Number.isNaN(params.newScale)) {\n      // 防止画布无法缩放\n      return;\n    }\n    if (first) {\n      this._pinching = true;\n    }\n    if (last) {\n      this._pinching = false;\n    }\n    const oldScale = this.config.finalScale;\n    const origin = this.config.getPosFromMouseEvent({ clientX: originX, clientY: originY }, false);\n    // 放大后的位置\n    const finalPos = {\n      x: (origin.x / oldScale) * newScale,\n      y: (origin.y / oldScale) * newScale,\n    };\n    this.config.updateConfig({\n      scrollX: this.config.config.scrollX + finalPos.x - origin.x,\n      scrollY: this.config.config.scrollY + finalPos.y - origin.y,\n      zoom: newScale,\n    });\n  }\n\n  getScaleBounds(): { min: number; max: number } {\n    return {\n      min: this.config.config.minZoom,\n      max: this.config.config.maxZoom,\n    };\n  }\n\n  protected preventDefault(): void {\n    // 阻止默认手势\n    const handler = (e: MouseEvent) => e.preventDefault();\n    // @ts-ignore\n    document.addEventListener('gesturestart', handler);\n    // @ts-ignore\n    document.addEventListener('gesturechange', handler);\n    this.toDispose.push(\n      Disposable.create(() => {\n        // @ts-ignore\n        document.removeEventListener('gesturestart', handler);\n        // @ts-ignore\n        document.removeEventListener('gesturechange', handler);\n      })\n    );\n  }\n\n  get pinching(): boolean {\n    return this._pinching;\n  }\n}\n","import { CommonGestureState } from '../types';\n\n// _movement rolls back to when it passed the bounds.\n/**\n * @note code is currently used in WheelEngine and PinchEngine.\n */\nexport function clampStateInternalMovementToBounds(state: CommonGestureState) {\n  const [ox, oy] = state.overflow;\n  const [dx, dy] = state._delta;\n  const [dirx, diry] = state._direction;\n\n  if ((ox < 0 && dx > 0 && dirx < 0) || (ox > 0 && dx < 0 && dirx > 0)) {\n    state._movement[0] = state._movementBound[0] as number;\n  }\n\n  if ((oy < 0 && dy > 0 && diry < 0) || (oy > 0 && dy < 0 && diry > 0)) {\n    state._movement[1] = state._movementBound[1] as number;\n  }\n}\n","import { Vector2 } from '../types';\n\nexport function clamp(v: number, min: number, max: number) {\n  return Math.max(min, Math.min(v, max));\n}\n\nexport const V = {\n  toVector<T>(v: T | [T, T] | undefined, fallback?: T | [T, T]): [T, T] {\n    if (v === undefined) v = fallback as T | [T, T];\n    return Array.isArray(v) ? v : [v, v];\n  },\n  add(v1: Vector2, v2: Vector2): Vector2 {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n  },\n  sub(v1: Vector2, v2: Vector2): Vector2 {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n  },\n  addTo(v1: Vector2, v2: Vector2) {\n    v1[0] += v2[0];\n    v1[1] += v2[1];\n  },\n  subTo(v1: Vector2, v2: Vector2) {\n    v1[0] -= v2[0];\n    v1[1] -= v2[1];\n  },\n};\n\n// Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\n\nfunction rubberband(distance: number, dimension: number, constant: number) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return Math.pow(distance, constant * 5);\n  return (distance * dimension * constant) / (dimension + constant * distance);\n}\n\nexport function rubberbandIfOutOfBounds(\n  position: number,\n  min: number,\n  max: number,\n  constant = 0.15,\n) {\n  if (constant === 0) return clamp(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\n\nexport function computeRubberband(\n  bounds: [Vector2, Vector2],\n  [Vx, Vy]: Vector2,\n  [Rx, Ry]: Vector2,\n): Vector2 {\n  const [[X0, X1], [Y0, Y1]] = bounds;\n  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];\n}\n","import { PointerType } from '../types';\nimport { Vector2 } from '../types';\n\nconst EVENT_TYPE_MAP: any = {\n  pointer: { start: 'down', change: 'move', end: 'up' },\n  mouse: { start: 'down', change: 'move', end: 'up' },\n  touch: { start: 'start', change: 'move', end: 'end' },\n  gesture: { start: 'start', change: 'change', end: 'end' },\n};\n\nfunction capitalize(string: string) {\n  if (!string) return '';\n  return string[0].toUpperCase() + string.slice(1);\n}\n\nconst actionsWithoutCaptureSupported = ['enter', 'leave'];\n\nfunction hasCapture(capture = false, actionKey: string) {\n  return capture && !actionsWithoutCaptureSupported.includes(actionKey);\n}\n\nexport function toHandlerProp(device: string, action = '', capture: boolean = false) {\n  const deviceProps = EVENT_TYPE_MAP[device];\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\n  return (\n    'on' +\n    capitalize(device) +\n    capitalize(actionKey) +\n    (hasCapture(capture, actionKey) ? 'Capture' : '')\n  );\n}\n\nconst pointerCaptureEvents = ['gotpointercapture', 'lostpointercapture'];\n\nexport function parseProp(prop: string) {\n  let eventKey = prop.substring(2).toLowerCase();\n  const passive = !!~eventKey.indexOf('passive');\n  if (passive) eventKey = eventKey.replace('passive', '');\n\n  const captureKey = pointerCaptureEvents.includes(eventKey) ? 'capturecapture' : 'capture';\n  // capture = true\n  const capture = !!~eventKey.indexOf(captureKey);\n  // pointermovecapture => pointermove\n  if (capture) eventKey = eventKey.replace('capture', '');\n  return { device: eventKey, capture, passive };\n}\n\nexport function toDomEventType(device: string, action = '') {\n  const deviceProps = EVENT_TYPE_MAP[device];\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\n  return device + actionKey;\n}\n\nexport function isTouch(event: UIEvent) {\n  return 'touches' in event;\n}\n\nexport function getPointerType(event: UIEvent): PointerType {\n  if (isTouch(event)) return 'touch';\n  if ('pointerType' in event) return (event as PointerEvent).pointerType as PointerType;\n  return 'mouse';\n}\n\nfunction getCurrentTargetTouchList(event: TouchEvent) {\n  return Array.from(event.touches).filter(\n    e =>\n      e.target === event.currentTarget ||\n      (event.currentTarget as Node)?.contains?.(e.target as Node),\n  );\n}\n\nfunction getTouchList(event: TouchEvent) {\n  return event.type === 'touchend' || event.type === 'touchcancel'\n    ? event.changedTouches\n    : event.targetTouches;\n}\n\nfunction getValueEvent<EventType extends TouchEvent | PointerEvent>(\n  event: EventType,\n): EventType extends TouchEvent ? Touch : PointerEvent {\n  return (isTouch(event) ? getTouchList(event as TouchEvent)[0] : event) as any;\n}\n\nexport function distanceAngle(P1: Touch | PointerEvent, P2: Touch | PointerEvent) {\n  // add a try catch\n  // attempt to fix https://github.com/pmndrs/use-gesture/issues/551\n  try {\n    const dx = P2.clientX - P1.clientX;\n    const dy = P2.clientY - P1.clientY;\n    const cx = (P2.clientX + P1.clientX) / 2;\n    const cy = (P2.clientY + P1.clientY) / 2;\n\n    const distance = Math.hypot(dx, dy);\n    const angle = -(Math.atan2(dx, dy) * 180) / Math.PI;\n    const origin = [cx, cy] as Vector2;\n    return { angle, distance, origin };\n  } catch {}\n  return null;\n}\n\nexport function touchIds(event: TouchEvent) {\n  return getCurrentTargetTouchList(event).map(touch => touch.identifier);\n}\n\nexport function touchDistanceAngle(event: TouchEvent, ids: number[]) {\n  const [P1, P2] = Array.from(event.touches).filter(touch => ids.includes(touch.identifier));\n  return distanceAngle(P1, P2);\n}\n\nexport function pointerId(event: PointerEvent | TouchEvent) {\n  const valueEvent = getValueEvent(event);\n  return isTouch(event) ? (valueEvent as Touch).identifier : (valueEvent as PointerEvent).pointerId;\n}\n\nexport function pointerValues(event: PointerEvent | TouchEvent): Vector2 {\n  // if ('spaceX' in event) return [event.spaceX, event.spaceY]\n  const valueEvent = getValueEvent(event);\n  return [valueEvent.clientX, valueEvent.clientY];\n}\n\n// wheel delta defaults from https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\nexport function wheelValues(event: WheelEvent): Vector2 {\n  let { deltaX, deltaY, deltaMode } = event;\n  // normalize wheel values, especially for Firefox\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT;\n    deltaY *= LINE_HEIGHT;\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT;\n    deltaY *= PAGE_HEIGHT;\n  }\n  return [deltaX, deltaY];\n}\n\nexport function scrollValues(event: UIEvent): Vector2 {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  const { scrollX, scrollY, scrollLeft, scrollTop } = event.currentTarget as Element & Window;\n  return [scrollX ?? scrollLeft ?? 0, scrollY ?? scrollTop ?? 0];\n}\n\nexport function getEventDetails(event: any) {\n  const payload: any = {};\n  if ('buttons' in event) payload.buttons = event.buttons;\n  if ('shiftKey' in event) {\n    const { shiftKey, altKey, metaKey, ctrlKey } = event;\n    Object.assign(payload, { shiftKey, altKey, metaKey, ctrlKey });\n  }\n  return payload;\n}\n","export function call<T>(v: T | ((...args: any[]) => T), ...args: any[]): T {\n  if (typeof v === 'function') {\n    // @ts-ignore\n    return v(...args);\n  } else {\n    return v;\n  }\n}\n\nexport function noop() {}\n\nexport function chain(...fns: Function[]): Function {\n  if (fns.length === 0) return noop;\n  if (fns.length === 1) return fns[0];\n\n  return function (this: any) {\n    let result;\n    for (const fn of fns) {\n      result = fn.apply(this, arguments) || result;\n    }\n    return result;\n  };\n}\n\nexport function assignDefault<T extends Object>(value: Partial<T> | undefined, fallback: T): T {\n  return Object.assign({}, fallback, value || {});\n}\n","import { V, computeRubberband } from '../utils/maths';\nimport { call } from '../utils/fn';\nimport { getEventDetails } from '../utils/events';\nimport { GestureKey, IngKey, State, Vector2 } from '../types';\nimport { NonUndefined } from '../types';\nimport { Controller } from '../Controller';\n\n/**\n * The lib doesn't compute the kinematics on the last event of the gesture\n * (i.e. for a drag gesture, the `pointerup` coordinates will generally match the\n * last `pointermove` coordinates which would result in all drags ending with a\n * `[0,0]` velocity). However, when the timestamp difference between the last\n * event (ie pointerup) and the before last event (ie pointermove) is greater\n * than BEFORE_LAST_KINEMATICS_DELAY, the kinematics are computed (which would\n * mean that if you release your drag after stopping for more than\n * BEFORE_LAST_KINEMATICS_DELAY, the velocity will be indeed 0).\n *\n * See https://github.com/pmndrs/use-gesture/issues/332 for more details.\n */\n\nconst BEFORE_LAST_KINEMATICS_DELAY = 32;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface Engine<Key extends GestureKey> {\n  /**\n   * Function that some gestures can use to add initilization\n   * properties to the state when it is created.\n   */\n  init?(): void;\n  /**\n   * Setup function that some gestures can use to set additional properties of\n   * the state when the gesture starts.\n   */\n  setup?(): void;\n  /**\n   * Function used by some gestures to determine the intentionality of a\n   * a movement depending on thresholds. The intent function can change the\n   * `state._active` or `state._blocked` flags if the gesture isn't intentional.\n   * @param event\n   */\n  axisIntent?(event?: UIEvent): void;\n\n  restrictToAxis?(movement: Vector2): void;\n}\n\nexport abstract class Engine<Key extends GestureKey> {\n  /**\n   * The Controller handling state.\n   */\n  ctrl: Controller;\n\n  /**\n   * The gesture key ('drag' | 'pinch' | 'wheel' | 'scroll' | 'move' | 'hover')\n   */\n  readonly key: Key;\n\n  /**\n   * The key representing the active state of the gesture in the shared state.\n   * ('dragging' | 'pinching' | 'wheeling' | 'scrolling' | 'moving' | 'hovering')\n   */\n  abstract readonly ingKey: IngKey;\n  /**\n   * The arguments passed to the `bind` function.\n   */\n\n  /**\n   * State prop that aliases state values (`xy` or `da`).\n   */\n  abstract readonly aliasKey: string;\n\n  args: any[];\n\n  constructor(ctrl: Controller, args: any[], key: Key) {\n    this.ctrl = ctrl;\n    this.args = args;\n    this.key = key;\n\n    if (!this.state) {\n      this.state = {} as any;\n      this.computeValues([0, 0]);\n      this.computeInitial();\n\n      if (this.init) this.init();\n      this.reset();\n    }\n  }\n\n  /**\n   * Function implemented by gestures that compute the offset from the state\n   * movement.\n   */\n  abstract computeOffset(): void;\n\n  /**\n   * Function implemented by the gestures that compute the movement from the\n   * corrected offset (after bounds and potential rubberbanding).\n   */\n  abstract computeMovement(): void;\n\n  /**\n   * Executes the bind function so that listeners are properly set by the\n   * Controller.\n   * @param bindFunction\n   */\n  abstract bind(\n    bindFunction: (\n      device: string,\n      action: string,\n      handler: (event: any) => void,\n      options?: AddEventListenerOptions,\n    ) => void,\n  ): void;\n\n  /**\n   * Shortcut to the gesture state read from the Controller.\n   */\n  get state() {\n    return this.ctrl.state[this.key]!;\n  }\n\n  set state(state) {\n    this.ctrl.state[this.key] = state;\n  }\n\n  /**\n   * Shortcut to the shared state read from the Controller\n   */\n  get shared() {\n    return this.ctrl.state.shared;\n  }\n\n  /**\n   * Shortcut to the gesture event store read from the Controller.\n   */\n  get eventStore() {\n    return this.ctrl.gestureEventStores[this.key]!;\n  }\n\n  /**\n   * Shortcut to the gesture timeout store read from the Controller.\n   */\n  get timeoutStore() {\n    return this.ctrl.gestureTimeoutStores[this.key]!;\n  }\n\n  /**\n   * Shortcut to the gesture config read from the Controller.\n   */\n  get config() {\n    return this.ctrl.config[this.key]!;\n  }\n\n  /**\n   * Shortcut to the shared config read from the Controller.\n   */\n  get sharedConfig() {\n    return this.ctrl.config.shared;\n  }\n\n  /**\n   * Shortcut to the gesture handler read from the Controller.\n   */\n  get handler() {\n    return this.ctrl.handlers[this.key]!;\n  }\n\n  reset() {\n    const { state, shared, ingKey, args } = this;\n    shared[ingKey] = state._active = state.active = state._blocked = state._force = false;\n    state._step = [false, false];\n    state.intentional = false;\n    state._movement = [0, 0];\n    state._distance = [0, 0];\n    state._direction = [0, 0];\n    state._delta = [0, 0];\n    // prettier-ignore\n    state._bounds = [[-Infinity, Infinity], [-Infinity, Infinity]]\n    state.args = args;\n    state.axis = undefined;\n    state.memo = undefined;\n    state.elapsedTime = state.timeDelta = 0;\n    state.direction = [0, 0];\n    state.distance = [0, 0];\n    state.overflow = [0, 0];\n    state._movementBound = [false, false];\n    state.velocity = [0, 0];\n    state.movement = [0, 0];\n    state.delta = [0, 0];\n    state.timeStamp = 0;\n  }\n\n  /**\n   * Function ran at the start of the gesture.\n   * @param event\n   */\n  start(event: NonUndefined<State[Key]>['event']) {\n    const state = this.state;\n    const config = this.config;\n    if (!state._active) {\n      this.reset();\n      this.computeInitial();\n\n      state._active = true;\n      state.target = event.target!;\n      state.currentTarget = event.currentTarget!;\n      state.lastOffset = config.from ? call(config.from, state) : state.offset;\n      state.offset = state.lastOffset;\n      state.startTime = state.timeStamp = event.timeStamp;\n    }\n  }\n\n  /**\n   * Assign raw values to `state._values` and transformed values to\n   * `state.values`.\n   * @param values\n   */\n  computeValues(values: Vector2) {\n    const state = this.state;\n    state._values = values;\n    // transforming values into user-defined coordinates (#402)\n    state.values = this.config.transform(values);\n  }\n\n  /**\n   * Assign `state._values` to `state._initial` and transformed `state.values` to\n   * `state.initial`.\n   * @param values\n   */\n  computeInitial() {\n    const state = this.state;\n    state._initial = state._values;\n    state.initial = state.values;\n  }\n\n  /**\n   * Computes all sorts of state attributes, including kinematics.\n   * @param event\n   */\n  compute(event?: NonUndefined<State[Key]>['event']) {\n    const { state, config, shared } = this;\n    state.args = this.args;\n\n    let dt = 0;\n\n    if (event) {\n      // sets the shared state with event properties\n      state.event = event;\n      // if config.preventDefault is true, then preventDefault\n      if (config.preventDefault && event.cancelable) state.event.preventDefault();\n      state.type = event.type;\n      shared.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size;\n      shared.locked = !!document.pointerLockElement;\n      Object.assign(shared, getEventDetails(event));\n      shared.down = shared.pressed = shared.buttons % 2 === 1 || shared.touches > 0;\n\n      // sets time stamps\n      dt = event.timeStamp - state.timeStamp;\n      state.timeStamp = event.timeStamp;\n      state.elapsedTime = state.timeStamp - state.startTime;\n    }\n\n    // only compute _distance if the state is active otherwise we might compute it\n    // twice when the gesture ends because state._delta wouldn't have changed on\n    // the last frame.\n    if (state._active) {\n      const _absoluteDelta = state._delta.map(Math.abs) as Vector2;\n      V.addTo(state._distance, _absoluteDelta);\n    }\n\n    // let's run intentionality check.\n    if (this.axisIntent) this.axisIntent(event);\n\n    // _movement is calculated by each gesture engine\n    const [_m0, _m1] = state._movement;\n    const [t0, t1] = config.threshold;\n\n    const { _step, values } = state;\n\n    if (config.hasCustomTransform) {\n      // When the user is using a custom transform, we're using `_step` to store\n      // the first value passing the threshold.\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && values[0];\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && values[1];\n    } else {\n      // `_step` will hold the threshold at which point the gesture was triggered.\n      // The threshold is signed depending on which direction triggered it.\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && Math.sign(_m0) * t0;\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && Math.sign(_m1) * t1;\n    }\n\n    state.intentional = _step[0] !== false || _step[1] !== false;\n\n    if (!state.intentional) return;\n\n    const movement: Vector2 = [0, 0];\n\n    if (config.hasCustomTransform) {\n      const [v0, v1] = values;\n      movement[0] = _step[0] !== false ? v0 - _step[0] : 0;\n      movement[1] = _step[1] !== false ? v1 - _step[1] : 0;\n    } else {\n      movement[0] = _step[0] !== false ? _m0 - _step[0] : 0;\n      movement[1] = _step[1] !== false ? _m1 - _step[1] : 0;\n    }\n\n    if (this.restrictToAxis && !state._blocked) this.restrictToAxis(movement);\n\n    const previousOffset = state.offset;\n\n    const gestureIsActive = (state._active && !state._blocked) || state.active;\n\n    if (gestureIsActive) {\n      state.first = state._active && !state.active;\n      state.last = !state._active && state.active;\n      state.active = shared[this.ingKey] = state._active;\n\n      if (event) {\n        if (state.first) {\n          if ('bounds' in config) state._bounds = call(config.bounds, state);\n          if (this.setup) this.setup();\n        }\n\n        state.movement = movement;\n        this.computeOffset();\n      }\n    }\n\n    const [ox, oy] = state.offset;\n    const [[x0, x1], [y0, y1]] = state._bounds;\n    state.overflow = [ox < x0 ? -1 : ox > x1 ? 1 : 0, oy < y0 ? -1 : oy > y1 ? 1 : 0];\n\n    // _movementBound will store the latest _movement value\n    // before it went off bounds.\n    state._movementBound[0] = state.overflow[0]\n      ? state._movementBound[0] === false\n        ? state._movement[0]\n        : state._movementBound[0]\n      : false;\n\n    state._movementBound[1] = state.overflow[1]\n      ? state._movementBound[1] === false\n        ? state._movement[1]\n        : state._movementBound[1]\n      : false;\n\n    // @ts-ignore\n    const rubberband: Vector2 = state._active ? config.rubberband || [0, 0] : [0, 0];\n    state.offset = computeRubberband(state._bounds, state.offset, rubberband);\n    state.delta = V.sub(state.offset, previousOffset);\n\n    this.computeMovement();\n\n    if (gestureIsActive && (!state.last || dt > BEFORE_LAST_KINEMATICS_DELAY)) {\n      state.delta = V.sub(state.offset, previousOffset);\n      const absoluteDelta = state.delta.map(Math.abs) as Vector2;\n\n      V.addTo(state.distance, absoluteDelta);\n      state.direction = state.delta.map(Math.sign) as Vector2;\n      state._direction = state._delta.map(Math.sign) as Vector2;\n\n      // calculates kinematics unless the gesture starts or ends or if the\n      // dt === 0 (which can happen on high frame rate monitors, see issue #581)\n      // because of privacy protection:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp#reduced_time_precision\n      if (!state.first && dt > 0) {\n        state.velocity = [absoluteDelta[0] / dt, absoluteDelta[1] / dt];\n        state.timeDelta = dt;\n      }\n    }\n  }\n\n  /**\n   * Fires the gesture handler.\n   */\n  emit() {\n    const state = this.state;\n    const shared = this.shared;\n    const config = this.config;\n\n    if (!state._active) this.clean();\n\n    // we don't trigger the handler if the gesture is blocked or non intentional,\n    // unless the `_force` flag was set or the `triggerAllEvents` option was set\n    // to true in the config.\n    if ((state._blocked || !state.intentional) && !state._force && !config.triggerAllEvents) return;\n\n    // @ts-ignore\n    const memo = this.handler({ ...shared, ...state, [this.aliasKey]: state.values });\n\n    // Sets memo to the returned value of the handler (unless it's  undefined)\n    if (memo !== undefined) state.memo = memo;\n  }\n\n  /**\n   * Cleans the gesture timeouts and event listeners.\n   */\n  clean() {\n    this.eventStore.clean();\n    this.timeoutStore.clean();\n  }\n}\n","import { V } from '../utils/maths';\nimport { getPointerType } from '../utils/events';\nimport { CoordinatesKey, Vector2 } from '../types';\nimport { Engine } from './Engine';\n\nfunction selectAxis([dx, dy]: Vector2, threshold: number) {\n  const absDx = Math.abs(dx);\n  const absDy = Math.abs(dy);\n\n  if (absDx > absDy && absDx > threshold) {\n    return 'x';\n  }\n  if (absDy > absDx && absDy > threshold) {\n    return 'y';\n  }\n  return undefined;\n}\n\nexport abstract class CoordinatesEngine<Key extends CoordinatesKey> extends Engine<Key> {\n  aliasKey = 'xy';\n\n  reset() {\n    super.reset();\n    this.state.axis = undefined;\n  }\n\n  init() {\n    this.state.offset = [0, 0];\n    this.state.lastOffset = [0, 0];\n  }\n\n  computeOffset() {\n    this.state.offset = V.add(this.state.lastOffset, this.state.movement);\n  }\n\n  computeMovement() {\n    this.state.movement = V.sub(this.state.offset, this.state.lastOffset);\n  }\n\n  axisIntent(event?: UIEvent) {\n    const state = this.state;\n    const config = this.config;\n\n    if (!state.axis && event) {\n      const threshold =\n        typeof config.axisThreshold === 'object'\n          ? config.axisThreshold[getPointerType(event)]\n          : config.axisThreshold;\n\n      state.axis = selectAxis(state._movement, threshold);\n    }\n\n    // We block the movement if either:\n    // - config.lockDirection or config.axis was set but axis isn't detected yet\n    // - config.axis was set but is different than detected axis\n    state._blocked =\n      ((config.lockDirection || !!config.axis) && !state.axis) ||\n      (!!config.axis && config.axis !== state.axis);\n  }\n\n  restrictToAxis(v: Vector2) {\n    if (this.config.axis || this.config.lockDirection) {\n      switch (this.state.axis) {\n        case 'x':\n          v[1] = 0;\n          break; // [ x, 0 ]\n        case 'y':\n          v[0] = 0;\n          break; // [ 0, y ]\n      }\n    }\n  }\n}\n","import { clampStateInternalMovementToBounds } from '../utils/state';\nimport { V } from '../utils/maths';\nimport { wheelValues } from '../utils/events';\nimport { CoordinatesEngine } from './CoordinatesEngine';\n\nexport interface WheelEngine extends CoordinatesEngine<'wheel'> {\n  wheel(this: WheelEngine, event: WheelEvent): void;\n  wheelChange(this: WheelEngine, event: WheelEvent): void;\n  wheelEnd(this: WheelEngine): void;\n}\n\nexport class WheelEngine extends CoordinatesEngine<'wheel'> {\n  ingKey = 'wheeling' as const;\n\n  wheel(event: WheelEvent) {\n    if (!this.state._active) this.start(event);\n    this.wheelChange(event);\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\n  }\n\n  wheelChange(event: WheelEvent) {\n    const state = this.state;\n    state._delta = wheelValues(event);\n    V.addTo(state._movement, state._delta);\n\n    // _movement rolls back to when it passed the bounds.\n    clampStateInternalMovementToBounds(state);\n\n    this.compute(event);\n    this.emit();\n  }\n\n  wheelEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n\n  bind(bindFunction: any) {\n    bindFunction('wheel', '', this.wheel.bind(this));\n  }\n}\n","import { V } from '../utils/maths';\nimport { scrollValues } from '../utils/events';\nimport { CoordinatesEngine } from './CoordinatesEngine';\n\nexport class ScrollEngine extends CoordinatesEngine<'scroll'> {\n  ingKey = 'scrolling' as const;\n\n  scroll(event: UIEvent) {\n    if (!this.state._active) this.start(event);\n    this.scrollChange(event);\n    this.timeoutStore.add('scrollEnd', this.scrollEnd.bind(this));\n  }\n\n  scrollChange(event: UIEvent) {\n    if (event.cancelable) event.preventDefault();\n    const state = this.state;\n    const values = scrollValues(event);\n    state._delta = V.sub(values, state._values);\n    V.addTo(state._movement, state._delta);\n\n    this.computeValues(values);\n    this.compute(event);\n\n    this.emit();\n  }\n\n  scrollEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n\n  bind(bindFunction: any) {\n    bindFunction('scroll', '', this.scroll.bind(this));\n  }\n}\n","import { clampStateInternalMovementToBounds } from '../utils/state';\nimport { V } from '../utils/maths';\nimport { touchDistanceAngle, distanceAngle, wheelValues } from '../utils/events';\nimport { Vector2, WebKitGestureEvent } from '../types';\nimport { Engine } from './Engine';\n\nconst SCALE_ANGLE_RATIO_INTENT_DEG = 30;\nconst PINCH_WHEEL_RATIO = 100;\n\nexport class PinchEngine extends Engine<'pinch'> {\n  ingKey = 'pinching' as const;\n\n  aliasKey = 'da';\n\n  init() {\n    this.state.offset = [1, 0];\n    this.state.lastOffset = [1, 0];\n    this.state._pointerEvents = new Map();\n  }\n\n  // superseeds generic Engine reset call\n  reset() {\n    super.reset();\n    const state = this.state;\n    state._touchIds = [];\n    state.canceled = false;\n    state.cancel = this.cancel.bind(this);\n    state.turns = 0;\n  }\n\n  computeOffset() {\n    const { type, movement, lastOffset } = this.state;\n    if (type === 'wheel') {\n      this.state.offset = V.add(movement, lastOffset);\n    } else {\n      this.state.offset = [(1 + movement[0]) * lastOffset[0], movement[1] + lastOffset[1]];\n    }\n  }\n\n  computeMovement() {\n    const { offset, lastOffset } = this.state;\n    this.state.movement = [offset[0] / lastOffset[0], offset[1] - lastOffset[1]];\n  }\n\n  axisIntent() {\n    const state = this.state;\n    const [_m0, _m1] = state._movement;\n    if (!state.axis) {\n      const axisMovementDifference = Math.abs(_m0) * SCALE_ANGLE_RATIO_INTENT_DEG - Math.abs(_m1);\n      if (axisMovementDifference < 0) state.axis = 'angle';\n      else if (axisMovementDifference > 0) state.axis = 'scale';\n    }\n  }\n\n  restrictToAxis(v: Vector2) {\n    if (this.config.lockDirection) {\n      if (this.state.axis === 'scale') v[1] = 0;\n      else if (this.state.axis === 'angle') v[0] = 0;\n    }\n  }\n\n  cancel() {\n    const state = this.state;\n    if (state.canceled) return;\n    setTimeout(() => {\n      state.canceled = true;\n      state._active = false;\n      // we run compute with no event so that kinematics won't be computed\n      this.compute();\n      this.emit();\n    }, 0);\n  }\n\n  touchStart(event: TouchEvent) {\n    this.ctrl.setEventIds(event);\n    const state = this.state;\n    const ctrlTouchIds = this.ctrl.touchIds;\n\n    if (state._active) {\n      // check that the touchIds that initiated the gesture are still enabled\n      // This is useful for when the page loses track of the pointers (minifying\n      // gesture on iPad).\n      if (state._touchIds.every(id => ctrlTouchIds.has(id))) return;\n      // The gesture is still active, but probably didn't have the opportunity to\n      // end properly, so we restart the pinch.\n    }\n\n    if (ctrlTouchIds.size < 2) return;\n\n    this.start(event);\n    state._touchIds = Array.from(ctrlTouchIds).slice(0, 2) as [number, number];\n\n    const payload = touchDistanceAngle(event, state._touchIds);\n\n    if (!payload) return;\n    this.pinchStart(event, payload);\n  }\n\n  pointerStart(event: PointerEvent) {\n    if (event.buttons != null && event.buttons % 2 !== 1) return;\n    this.ctrl.setEventIds(event);\n    (event.target as HTMLElement).setPointerCapture(event.pointerId);\n    const state = this.state;\n    const _pointerEvents = state._pointerEvents;\n    const ctrlPointerIds = this.ctrl.pointerIds;\n\n    if (state._active) {\n      // see touchStart comment\n      if (Array.from(_pointerEvents.keys()).every(id => ctrlPointerIds.has(id))) return;\n    }\n\n    if (_pointerEvents.size < 2) {\n      _pointerEvents.set(event.pointerId, event);\n    }\n\n    if (state._pointerEvents.size < 2) return;\n\n    this.start(event);\n\n    // @ts-ignore\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\n\n    if (!payload) return;\n    this.pinchStart(event, payload);\n  }\n\n  pinchStart(\n    event: PointerEvent | TouchEvent,\n    payload: { distance: number; angle: number; origin: Vector2 },\n  ) {\n    const state = this.state;\n    state.origin = payload.origin;\n    this.computeValues([payload.distance, payload.angle]);\n    this.computeInitial();\n\n    this.compute(event);\n    this.emit();\n  }\n\n  touchMove(event: TouchEvent) {\n    if (!this.state._active) return;\n    const payload = touchDistanceAngle(event, this.state._touchIds);\n\n    if (!payload) return;\n    this.pinchMove(event, payload);\n  }\n\n  pointerMove(event: PointerEvent) {\n    const _pointerEvents = this.state._pointerEvents;\n    if (_pointerEvents.has(event.pointerId)) {\n      _pointerEvents.set(event.pointerId, event);\n    }\n    if (!this.state._active) return;\n    // @ts-ignore\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\n\n    if (!payload) return;\n    this.pinchMove(event, payload);\n  }\n\n  pinchMove(\n    event: PointerEvent | TouchEvent,\n    payload: { distance: number; angle: number; origin: Vector2 },\n  ) {\n    const state = this.state;\n    const prev_a = state._values[1];\n    const delta_a = payload.angle - prev_a;\n\n    let delta_turns = 0;\n    if (Math.abs(delta_a) > 270) delta_turns += Math.sign(delta_a);\n\n    this.computeValues([payload.distance, payload.angle - 360 * delta_turns]);\n\n    state.origin = payload.origin;\n    state.turns = delta_turns;\n    state._movement = [\n      state._values[0] / state._initial[0] - 1,\n      state._values[1] - state._initial[1],\n    ];\n\n    this.compute(event);\n    this.emit();\n  }\n\n  touchEnd(event: TouchEvent) {\n    this.ctrl.setEventIds(event);\n    if (!this.state._active) return;\n\n    if (this.state._touchIds.some(id => !this.ctrl.touchIds.has(id))) {\n      this.state._active = false;\n\n      this.compute(event);\n      this.emit();\n    }\n  }\n\n  pointerEnd(event: PointerEvent) {\n    const state = this.state;\n    this.ctrl.setEventIds(event);\n    try {\n      // @ts-ignore r3f\n      event.target.releasePointerCapture(event.pointerId);\n    } catch {}\n\n    if (state._pointerEvents.has(event.pointerId)) {\n      state._pointerEvents.delete(event.pointerId);\n    }\n\n    if (!state._active) return;\n\n    if (state._pointerEvents.size < 2) {\n      state._active = false;\n      this.compute(event);\n      this.emit();\n    }\n  }\n\n  gestureStart(event: WebKitGestureEvent) {\n    if (event.cancelable) event.preventDefault();\n    const state = this.state;\n\n    if (state._active) return;\n\n    this.start(event);\n    this.computeValues([event.scale, event.rotation]);\n    state.origin = [event.clientX, event.clientY];\n    this.compute(event);\n\n    this.emit();\n  }\n\n  gestureMove(event: WebKitGestureEvent) {\n    if (event.cancelable) event.preventDefault();\n\n    if (!this.state._active) return;\n\n    const state = this.state;\n\n    this.computeValues([event.scale, event.rotation]);\n    state.origin = [event.clientX, event.clientY];\n    const _previousMovement = state._movement;\n    state._movement = [event.scale - 1, event.rotation];\n    state._delta = V.sub(state._movement, _previousMovement);\n    this.compute(event);\n    this.emit();\n  }\n\n  gestureEnd(event: WebKitGestureEvent) {\n    if (!this.state._active) return;\n\n    this.state._active = false;\n\n    this.compute(event);\n    this.emit();\n  }\n\n  wheel(event: WheelEvent) {\n    const modifierKey = this.config.modifierKey;\n    if (\n      modifierKey &&\n      (Array.isArray(modifierKey) ? !modifierKey.find(k => event[k]) : !event[modifierKey])\n    )\n      return;\n    if (!this.state._active) this.wheelStart(event);\n    else this.wheelChange(event);\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\n  }\n\n  wheelStart(event: WheelEvent) {\n    this.start(event);\n    this.wheelChange(event);\n  }\n\n  wheelChange(event: WheelEvent) {\n    const isR3f = 'uv' in event;\n    if (!isR3f) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      if (process.env.NODE_ENV === 'development' && !event.defaultPrevented) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[@use-gesture]: To properly support zoom on trackpads, try using the \\`target\\` option.\\n\\nThis message will only appear in development mode.`,\n        );\n      }\n    }\n    const state = this.state;\n    /**\n     * 原版的计算对鼠标滚轮不友好\n     * 1. 基数问题。鼠标滚轮的 delta 像素级在 0 - 300+ 浮动不等。相对的触摸板在 0 - 10+ 左右，所以相对会觉得触摸板缩放比较稳定\n     * 2. 步进问题。一次缩放的增量 = 基数 * 上一次缩放。本身是为了营造平滑加速的感觉，但对于基数较大的滚轮加速曲线会特别快\n     * 3. 所以最终步进值限制在 0.1（触摸板在 0.01 - 0.08 左右，无影响），用来约束太快的滚轮连续滚动。该值先写死（受限于 maxOffset）\n     * 4. 计算公式 offset = lastOffset + movement - delta * offset\n     */\n    // state._delta = [(-wheelValues(event)[1] / PINCH_WHEEL_RATIO) * state.offset[0], 0]\n    let stepValue = (-wheelValues(event)[1] / PINCH_WHEEL_RATIO) * state.offset[0];\n    if (Math.abs(stepValue) > 0.1) {\n      stepValue = 0.1 * Math.sign(stepValue);\n    }\n\n    state._delta = [stepValue, 0];\n    V.addTo(state._movement, state._delta);\n\n    // _movement rolls back to when it passed the bounds.\n    clampStateInternalMovementToBounds(state);\n\n    this.state.origin = [event.clientX, event.clientY];\n\n    this.compute(event);\n    this.emit();\n  }\n\n  wheelEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n\n  bind(bindFunction: any) {\n    const device = this.config.device;\n    if (!!device) {\n      // @ts-ignore\n      bindFunction(device, 'start', this[device + 'Start'].bind(this));\n      // @ts-ignore\n      bindFunction(device, 'change', this[device + 'Move'].bind(this));\n      // @ts-ignore\n      bindFunction(device, 'end', this[device + 'End'].bind(this));\n      // @ts-ignore\n      bindFunction(device, 'cancel', this[device + 'End'].bind(this));\n      // @ts-ignore\n      bindFunction('lostPointerCapture', '', this[device + 'End'].bind(this));\n    }\n    // we try to set a passive listener, knowing that in any case React will\n    // ignore it.\n    if (this.config.pinchOnWheel) {\n      bindFunction('wheel', '', this.wheel.bind(this), { passive: false });\n    }\n  }\n}\n","import { V } from '../utils/maths';\nimport { pointerValues } from '../utils/events';\nimport { CoordinatesEngine } from './CoordinatesEngine';\n\nexport class MoveEngine extends CoordinatesEngine<'move'> {\n  ingKey = 'moving' as const;\n\n  move(event: PointerEvent) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    if (!this.state._active) this.moveStart(event);\n    else this.moveChange(event);\n    this.timeoutStore.add('moveEnd', this.moveEnd.bind(this));\n  }\n\n  moveStart(event: PointerEvent) {\n    this.start(event);\n    this.computeValues(pointerValues(event));\n    this.compute(event);\n    this.computeInitial();\n    this.emit();\n  }\n\n  moveChange(event: PointerEvent) {\n    if (!this.state._active) return;\n    const values = pointerValues(event);\n    const state = this.state;\n    state._delta = V.sub(values, state._values);\n    V.addTo(state._movement, state._delta);\n\n    this.computeValues(values);\n\n    this.compute(event);\n    this.emit();\n  }\n\n  moveEnd(event?: PointerEvent) {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute(event);\n    this.emit();\n  }\n\n  bind(bindFunction: any) {\n    bindFunction('pointer', 'change', this.move.bind(this));\n    bindFunction('pointer', 'leave', this.moveEnd.bind(this));\n  }\n}\n","import { V } from '../utils/maths';\nimport { pointerValues } from '../utils/events';\nimport { CoordinatesEngine } from './CoordinatesEngine';\n\nexport class HoverEngine extends CoordinatesEngine<'hover'> {\n  ingKey = 'hovering' as const;\n\n  enter(event: PointerEvent) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    this.start(event);\n    this.computeValues(pointerValues(event));\n\n    this.compute(event);\n    this.emit();\n  }\n\n  leave(event: PointerEvent) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n\n    const state = this.state;\n    if (!state._active) return;\n\n    state._active = false;\n    const values = pointerValues(event);\n    state._movement = state._delta = V.sub(values, state._values);\n\n    this.computeValues(values);\n    this.compute(event);\n\n    state.delta = state.movement;\n    this.emit();\n  }\n\n  bind(bindFunction: any) {\n    bindFunction('pointer', 'enter', this.enter.bind(this));\n    bindFunction('pointer', 'leave', this.leave.bind(this));\n  }\n}\n","import { InternalGestureOptions } from '../types'\nimport { Vector2, State, GenericOptions } from '../types'\nimport { V } from '../utils/maths'\n\nexport const identity = (v: Vector2) => v\nexport const DEFAULT_RUBBERBAND = 0.15\n\nexport const commonConfigResolver = {\n  enabled(value = true) {\n    return value\n  },\n  eventOptions(value: AddEventListenerOptions | undefined, _k: string, config: { shared: GenericOptions }) {\n    return { ...config.shared.eventOptions, ...value }\n  },\n  preventDefault(value = false) {\n    return value\n  },\n  triggerAllEvents(value = false) {\n    return value\n  },\n  rubberband(value: number | boolean | Vector2 = 0): Vector2 {\n    switch (value) {\n      case true:\n        return [DEFAULT_RUBBERBAND, DEFAULT_RUBBERBAND]\n      case false:\n        return [0, 0]\n      default:\n        return V.toVector(value)\n    }\n  },\n  from(value: number | Vector2 | ((s: State) => Vector2)) {\n    if (typeof value === 'function') return value\n    // eslint-disable-next-line eqeqeq\n    if (value != null) return V.toVector(value)\n  },\n  transform(this: InternalGestureOptions, value: any, _k: string, config: { shared: GenericOptions }) {\n    const transform = value || config.shared.transform\n    this.hasCustomTransform = !!transform\n\n    if (process.env.NODE_ENV === 'development') {\n      const originalTransform = transform || identity\n      return (v: Vector2) => {\n        const r = originalTransform(v)\n        if (!isFinite(r[0]) || !isFinite(r[1])) {\n          // eslint-disable-next-line no-console\n          console.warn(`[@use-gesture]: config.transform() must produce a valid result, but it was: [${r[0]},${[1]}]`)\n        }\n        return r\n      }\n    }\n    return transform || identity\n  },\n  threshold(value: any) {\n    return V.toVector(value, 0)\n  }\n}\n\nif (process.env.NODE_ENV === 'development') {\n  Object.assign(commonConfigResolver, {\n    domTarget(value: any) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`)\n      }\n      return NaN\n    },\n    lockDirection(value: any) {\n      if (value !== undefined) {\n        throw Error(\n          `[@use-gesture]: \\`lockDirection\\` option has been merged with \\`axis\\`. Use it as in \\`{ axis: 'lock' }\\``\n        )\n      }\n      return NaN\n    },\n    initial(value: any) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`initial\\` option has been renamed to \\`from\\`.`)\n      }\n      return NaN\n    }\n  })\n}\n","import { commonConfigResolver } from './commonConfigResolver'\nimport { InternalCoordinatesOptions, CoordinatesConfig, Bounds, DragBounds, State, Vector2 } from '../types'\n\nconst DEFAULT_AXIS_THRESHOLD = 0\n\nexport const coordinatesConfigResolver = {\n  ...commonConfigResolver,\n  axis(\n    this: InternalCoordinatesOptions,\n    _v: any,\n    _k: string,\n    { axis }: CoordinatesConfig\n  ): InternalCoordinatesOptions['axis'] {\n    this.lockDirection = axis === 'lock'\n    if (!this.lockDirection) return axis as any\n  },\n  axisThreshold(value = DEFAULT_AXIS_THRESHOLD) {\n    return value\n  },\n  bounds(\n    value: DragBounds | ((state: State) => DragBounds) = {}\n  ): (() => EventTarget | null) | HTMLElement | [Vector2, Vector2] {\n    if (typeof value === 'function') {\n      // @ts-ignore\n      return (state: State) => coordinatesConfigResolver.bounds(value(state))\n    }\n\n    if ('current' in value) {\n      return () => value.current\n    }\n\n    if (typeof HTMLElement === 'function' && value instanceof HTMLElement) {\n      return value\n    }\n\n    const { left = -Infinity, right = Infinity, top = -Infinity, bottom = Infinity } = value as Bounds\n\n    return [\n      [left, right],\n      [top, bottom]\n    ]\n  }\n}\n","import { V } from '../utils/maths';\nimport { pointerId, getPointerType, pointerValues } from '../utils/events';\nimport { Vector2 } from '../types';\nimport { coordinatesConfigResolver } from '../config/coordinatesConfigResolver';\nimport { CoordinatesEngine } from './CoordinatesEngine';\n\nconst KEYS_DELTA_MAP = {\n  ArrowRight: (displacement: number, factor: number = 1) => [displacement * factor, 0],\n  ArrowLeft: (displacement: number, factor: number = 1) => [-1 * displacement * factor, 0],\n  ArrowUp: (displacement: number, factor: number = 1) => [0, -1 * displacement * factor],\n  ArrowDown: (displacement: number, factor: number = 1) => [0, displacement * factor],\n};\n\nexport class DragEngine extends CoordinatesEngine<'drag'> {\n  ingKey = 'dragging' as const;\n\n  // superseeds generic Engine reset call\n  reset(this: DragEngine) {\n    super.reset();\n    const state = this.state;\n    state._pointerId = undefined;\n    state._pointerActive = false;\n    state._keyboardActive = false;\n    state._preventScroll = false;\n    state._delayed = false;\n    state.swipe = [0, 0];\n    state.tap = false;\n    state.canceled = false;\n    state.cancel = this.cancel.bind(this);\n  }\n\n  setup() {\n    const state = this.state;\n\n    if (state._bounds instanceof HTMLElement) {\n      const boundRect = state._bounds.getBoundingClientRect();\n      const targetRect = (state.currentTarget as HTMLElement).getBoundingClientRect();\n      const _bounds = {\n        left: boundRect.left - targetRect.left + state.offset[0],\n        right: boundRect.right - targetRect.right + state.offset[0],\n        top: boundRect.top - targetRect.top + state.offset[1],\n        bottom: boundRect.bottom - targetRect.bottom + state.offset[1],\n      };\n      state._bounds = coordinatesConfigResolver.bounds(_bounds) as [Vector2, Vector2];\n    }\n  }\n\n  cancel() {\n    const state = this.state;\n    if (state.canceled) return;\n    state.canceled = true;\n    state._active = false;\n    setTimeout(() => {\n      // we run compute with no event so that kinematics won't be computed\n      this.compute();\n      this.emit();\n    }, 0);\n  }\n\n  setActive() {\n    this.state._active = this.state._pointerActive || this.state._keyboardActive;\n  }\n\n  // superseeds Engine clean function\n  clean() {\n    this.pointerClean();\n    this.state._pointerActive = false;\n    this.state._keyboardActive = false;\n    super.clean();\n  }\n\n  pointerDown(event: PointerEvent) {\n    const config = this.config;\n    const state = this.state;\n\n    if (\n      event.buttons != null &&\n      // If the user submits an array as pointer.buttons, don't start the drag\n      // if event.buttons isn't included inside that array.\n      (Array.isArray(config.pointerButtons)\n        ? !config.pointerButtons.includes(event.buttons)\n        : // If the user submits a number as pointer.buttons, refuse the drag if\n          // config.pointerButtons is different than `-1` and if event.buttons\n          // doesn't match the combination.\n          config.pointerButtons !== -1 && config.pointerButtons !== event.buttons)\n    )\n      return;\n\n    const ctrlIds = this.ctrl.setEventIds(event);\n    // We need to capture all pointer ids so that we can keep track of them when\n    // they're released off the target\n    if (config.pointerCapture) {\n      (event.target as HTMLElement).setPointerCapture(event.pointerId);\n    }\n\n    if (\n      // in some situations (https://github.com/pmndrs/use-gesture/issues/494#issuecomment-1127584116)\n      // like when a new browser tab is opened during a drag gesture, the drag\n      // can be interrupted mid-way, and can stall. This happens because the\n      // pointerId that initiated the gesture is lost, and since the drag\n      // persists until that pointerId is lifted with pointerup, it never ends.\n      //\n      // Therefore, when we detect that only one pointer is pressing the screen,\n      // we consider that the gesture can proceed.\n      ctrlIds &&\n      ctrlIds.size > 1 &&\n      state._pointerActive\n    )\n      return;\n\n    this.start(event);\n    this.setupPointer(event);\n\n    state._pointerId = pointerId(event);\n    state._pointerActive = true;\n\n    this.computeValues(pointerValues(event));\n    this.computeInitial();\n\n    if (config.preventScrollAxis && getPointerType(event) !== 'mouse') {\n      // when preventScrollAxis is set we don't consider the gesture active\n      // until it's deliberate\n      state._active = false;\n      this.setupScrollPrevention(event);\n    } else if (config.delay > 0) {\n      this.setupDelayTrigger(event);\n      // makes sure we emit all events when `triggerAllEvents` flag is `true`\n      if (config.triggerAllEvents) {\n        this.compute(event);\n        this.emit();\n      }\n    } else {\n      this.startPointerDrag(event);\n    }\n  }\n\n  startPointerDrag(event: PointerEvent) {\n    const state = this.state;\n    state._active = true;\n    state._preventScroll = true;\n    state._delayed = false;\n\n    this.compute(event);\n    this.emit();\n  }\n\n  pointerMove(event: PointerEvent) {\n    const state = this.state;\n    const config = this.config;\n\n    if (!state._pointerActive) return;\n\n    const id = pointerId(event);\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\n    const _values = pointerValues(event);\n\n    if (document.pointerLockElement === event.target) {\n      state._delta = [event.movementX, event.movementY];\n    } else {\n      state._delta = V.sub(_values, state._values);\n      this.computeValues(_values);\n    }\n\n    V.addTo(state._movement, state._delta);\n    this.compute(event);\n\n    // if the gesture is delayed but deliberate, then we can start it\n    // immediately.\n    if (state._delayed && state.intentional) {\n      this.timeoutStore.remove('dragDelay');\n      // makes sure `first` is still true when moving for the first time after a\n      // delay.\n      state.active = false;\n      this.startPointerDrag(event);\n      return;\n    }\n\n    if (config.preventScrollAxis && !state._preventScroll) {\n      if (state.axis) {\n        if (state.axis === config.preventScrollAxis || config.preventScrollAxis === 'xy') {\n          state._active = false;\n          this.clean();\n          return;\n        } else {\n          this.timeoutStore.remove('startPointerDrag');\n          this.startPointerDrag(event);\n          return;\n        }\n      } else {\n        return;\n      }\n    }\n\n    this.emit();\n  }\n\n  pointerUp(event: PointerEvent) {\n    this.ctrl.setEventIds(event);\n    // We release the pointer id if it has pointer capture\n    try {\n      if (\n        this.config.pointerCapture &&\n        (event.target as HTMLElement).hasPointerCapture(event.pointerId)\n      ) {\n        // this shouldn't be necessary as it should be automatic when releasing the pointer\n        (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n      }\n    } catch {\n      if (process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[@use-gesture]: If you see this message, it's likely that you're using an outdated version of \\`@react-three/fiber\\`. \\n\\nPlease upgrade to the latest version.`,\n        );\n      }\n    }\n\n    const state = this.state;\n    const config = this.config;\n\n    if (!state._active || !state._pointerActive) return;\n\n    const id = pointerId(event);\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\n\n    this.state._pointerActive = false;\n    this.setActive();\n    this.compute(event);\n\n    const [dx, dy] = state._distance;\n    state.tap = dx <= config.tapsThreshold && dy <= config.tapsThreshold;\n\n    if (state.tap && config.filterTaps) {\n      state._force = true;\n    } else {\n      const [_dx, _dy] = state._delta;\n      const [_mx, _my] = state._movement;\n      const [svx, svy] = config.swipe.velocity;\n      const [sx, sy] = config.swipe.distance;\n      const sdt = config.swipe.duration;\n\n      if (state.elapsedTime < sdt) {\n        const _vx = Math.abs(_dx / state.timeDelta);\n        const _vy = Math.abs(_dy / state.timeDelta);\n\n        if (_vx > svx && Math.abs(_mx) > sx) state.swipe[0] = Math.sign(_dx);\n        if (_vy > svy && Math.abs(_my) > sy) state.swipe[1] = Math.sign(_dy);\n      }\n    }\n\n    this.emit();\n  }\n\n  pointerClick(event: MouseEvent) {\n    // event.detail indicates the number of buttons being pressed. When it's\n    // null, it's likely to be a keyboard event from the Enter Key that could\n    // be used for accessibility, and therefore shouldn't be prevented.\n    // See https://github.com/pmndrs/use-gesture/issues/530\n    if (!this.state.tap && event.detail > 0) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  setupPointer(event: PointerEvent) {\n    const config = this.config;\n    const device = config.device;\n\n    if (process.env.NODE_ENV === 'development') {\n      try {\n        if (device === 'pointer' && config.preventScrollDelay === undefined) {\n          const currentTarget =\n            // @ts-ignore (warning for r3f)\n            'uv' in event ? event.sourceEvent.currentTarget : event.currentTarget;\n          const style = window.getComputedStyle(currentTarget);\n          if (style.touchAction === 'auto') {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `[@use-gesture]: The drag target has its \\`touch-action\\` style property set to \\`auto\\`. It is recommended to add \\`touch-action: 'none'\\` so that the drag gesture behaves correctly on touch-enabled devices. For more information read this: https://use-gesture.netlify.app/docs/extras/#touch-action.\\n\\nThis message will only show in development mode. It won't appear in production. If this is intended, you can ignore it.`,\n              currentTarget,\n            );\n          }\n        }\n      } catch {}\n    }\n\n    if (config.pointerLock) {\n      (event.currentTarget as HTMLElement).requestPointerLock();\n    }\n\n    if (!config.pointerCapture) {\n      this.eventStore.add(this.sharedConfig.window, device, 'change', this.pointerMove.bind(this));\n      this.eventStore.add(this.sharedConfig.window, device, 'end', this.pointerUp.bind(this));\n      this.eventStore.add(this.sharedConfig.window, device, 'cancel', this.pointerUp.bind(this));\n    }\n  }\n\n  pointerClean() {\n    if (this.config.pointerLock && document.pointerLockElement === this.state.currentTarget) {\n      document.exitPointerLock();\n    }\n  }\n\n  preventScroll(event: PointerEvent) {\n    if (this.state._preventScroll && event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  setupScrollPrevention(event: PointerEvent) {\n    // fixes https://github.com/pmndrs/use-gesture/issues/497\n    this.state._preventScroll = false;\n    persistEvent(event);\n    // we add window listeners that will prevent the scroll when the user has started dragging\n    const remove = this.eventStore.add(\n      this.sharedConfig.window,\n      'touch',\n      'change',\n      this.preventScroll.bind(this),\n      {\n        passive: false,\n      },\n    );\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'end', remove);\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'cancel', remove);\n    this.timeoutStore.add(\n      'startPointerDrag',\n      this.startPointerDrag.bind(this),\n      this.config.preventScrollDelay!,\n      event,\n    );\n  }\n\n  setupDelayTrigger(event: PointerEvent) {\n    this.state._delayed = true;\n    this.timeoutStore.add(\n      'dragDelay',\n      () => {\n        // forces drag to start no matter the threshold when delay is reached\n        this.state._step = [0, 0];\n        this.startPointerDrag(event);\n      },\n      this.config.delay,\n    );\n  }\n\n  keyDown(event: KeyboardEvent) {\n    // @ts-ignore\n    const deltaFn = KEYS_DELTA_MAP[event.key];\n    if (deltaFn) {\n      const state = this.state;\n      const factor = event.shiftKey ? 10 : event.altKey ? 0.1 : 1;\n\n      this.start(event);\n\n      state._delta = deltaFn(this.config.keyboardDisplacement, factor);\n      state._keyboardActive = true;\n      V.addTo(state._movement, state._delta);\n\n      this.compute(event);\n      this.emit();\n    }\n  }\n\n  keyUp(event: KeyboardEvent) {\n    if (!(event.key in KEYS_DELTA_MAP)) return;\n\n    this.state._keyboardActive = false;\n    this.setActive();\n    this.compute(event);\n    this.emit();\n  }\n\n  bind(bindFunction: any) {\n    const device = this.config.device;\n\n    bindFunction(device, 'start', this.pointerDown.bind(this));\n\n    if (this.config.pointerCapture) {\n      bindFunction(device, 'change', this.pointerMove.bind(this));\n      bindFunction(device, 'end', this.pointerUp.bind(this));\n      bindFunction(device, 'cancel', this.pointerUp.bind(this));\n      bindFunction('lostPointerCapture', '', this.pointerUp.bind(this));\n    }\n\n    if (this.config.keys) {\n      bindFunction('key', 'down', this.keyDown.bind(this));\n      bindFunction('key', 'up', this.keyUp.bind(this));\n    }\n    if (this.config.filterTaps) {\n      bindFunction('click', '', this.pointerClick.bind(this), { capture: true, passive: false });\n    }\n  }\n}\n\nfunction persistEvent(event: PointerEvent) {\n  // @ts-ignore\n  'persist' in event && typeof event.persist === 'function' && event.persist();\n}\n","import { coordinatesConfigResolver } from './coordinatesConfigResolver'\n\nexport const wheelConfigResolver = coordinatesConfigResolver\n","import { coordinatesConfigResolver } from './coordinatesConfigResolver'\n\nexport const scrollConfigResolver = coordinatesConfigResolver\n","const isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement\n\nfunction supportsTouchEvents(): boolean {\n  return isBrowser && 'ontouchstart' in window\n}\n\nfunction isTouchScreen(): boolean {\n  return supportsTouchEvents() || (isBrowser && window.navigator.maxTouchPoints > 1)\n}\n\nfunction supportsPointerEvents(): boolean {\n  return isBrowser && 'onpointerdown' in window\n}\n\nfunction supportsPointerLock(): boolean {\n  return isBrowser && 'exitPointerLock' in window.document\n}\n\nfunction supportsGestureEvents(): boolean {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent\n  } catch (e) {\n    return false\n  }\n}\n\nexport const SUPPORT = {\n  isBrowser,\n  gesture: supportsGestureEvents(),\n  /**\n   * It looks from https://github.com/pmndrs/use-gesture/discussions/421 that\n   * some touchscreens using webkits don't have 'ontouchstart' in window. So\n   * we're considering that browsers support TouchEvent if they have\n   * `maxTouchPoints > 1`\n   *\n   * Update 16/09/2023: This generates failure on other Windows systems, so reverting\n   * back to detecting TouchEvent support only.\n   * https://github.com/pmndrs/use-gesture/issues/626\n   */\n  touch: supportsTouchEvents(),\n  // touch: isTouchScreen(),\n  touchscreen: isTouchScreen(),\n  pointer: supportsPointerEvents(),\n  pointerLock: supportsPointerLock()\n}\n","import { ModifierKey } from '../types'\nimport { PinchConfig, GenericOptions, InternalPinchOptions, State, Vector2 } from '../types'\nimport { call, assignDefault } from '../utils/fn'\nimport { V } from '../utils/maths'\nimport { commonConfigResolver } from './commonConfigResolver'\nimport { SUPPORT } from './support'\n\nexport const pinchConfigResolver = {\n  ...commonConfigResolver,\n  device(\n    this: InternalPinchOptions,\n    _v: any,\n    _k: string,\n    { shared, pointer: { touch = false } = {} }: { shared: GenericOptions } & PinchConfig\n  ) {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    const sharedConfig = shared\n    if (sharedConfig.target && !SUPPORT.touch && SUPPORT.gesture) return 'gesture'\n    if (SUPPORT.touch && touch) return 'touch'\n    if (SUPPORT.touchscreen) {\n      if (SUPPORT.pointer) return 'pointer'\n      if (SUPPORT.touch) return 'touch'\n    }\n    // device is undefined and that's ok, we're going to use wheel to zoom.\n  },\n  bounds(_v: any, _k: string, { scaleBounds = {}, angleBounds = {} }: PinchConfig) {\n    const _scaleBounds = (state?: State) => {\n      const D = assignDefault(call(scaleBounds, state), { min: -Infinity, max: Infinity })\n      return [D.min, D.max]\n    }\n\n    const _angleBounds = (state?: State) => {\n      const A = assignDefault(call(angleBounds, state), { min: -Infinity, max: Infinity })\n      return [A.min, A.max]\n    }\n\n    if (typeof scaleBounds !== 'function' && typeof angleBounds !== 'function') return [_scaleBounds(), _angleBounds()]\n\n    return (state: State) => [_scaleBounds(state), _angleBounds(state)]\n  },\n  threshold(this: InternalPinchOptions, value: number | Vector2, _k: string, config: PinchConfig) {\n    this.lockDirection = config.axis === 'lock'\n    const threshold = V.toVector(value, this.lockDirection ? [0.1, 3] : 0)\n    return threshold\n  },\n  modifierKey(value: ModifierKey | ModifierKey[]) {\n    if (value === undefined) return 'ctrlKey'\n    return value\n  },\n  pinchOnWheel(value = true) {\n    return value\n  }\n}\n","import { coordinatesConfigResolver } from './coordinatesConfigResolver'\n\nexport const moveConfigResolver = {\n  ...coordinatesConfigResolver,\n  mouseOnly: (value = true) => value\n}\n","import { coordinatesConfigResolver } from './coordinatesConfigResolver'\n\nexport const hoverConfigResolver = {\n  ...coordinatesConfigResolver,\n  mouseOnly: (value = true) => value\n}\n","import { PointerType } from '../types'\nimport { DragConfig, InternalDragOptions, Vector2 } from '../types'\nimport { V } from '../utils/maths'\nimport { coordinatesConfigResolver } from './coordinatesConfigResolver'\nimport { SUPPORT } from './support'\n\nexport const DEFAULT_PREVENT_SCROLL_DELAY = 250\nexport const DEFAULT_DRAG_DELAY = 180\nexport const DEFAULT_SWIPE_VELOCITY = 0.5\nexport const DEFAULT_SWIPE_DISTANCE = 50\nexport const DEFAULT_SWIPE_DURATION = 250\nexport const DEFAULT_KEYBOARD_DISPLACEMENT = 10\n\nconst DEFAULT_DRAG_AXIS_THRESHOLD: Record<PointerType, number> = { mouse: 0, touch: 0, pen: 8 }\n\nexport const dragConfigResolver = {\n  ...coordinatesConfigResolver,\n  device(\n    this: InternalDragOptions,\n    _v: any,\n    _k: string,\n    { pointer: { touch = false, lock = false, mouse = false } = {} }: DragConfig\n  ) {\n    this.pointerLock = lock && SUPPORT.pointerLock\n    if (SUPPORT.touch && touch) return 'touch'\n    if (this.pointerLock) return 'mouse'\n    if (SUPPORT.pointer && !mouse) return 'pointer'\n    if (SUPPORT.touch) return 'touch'\n    return 'mouse'\n  },\n  preventScrollAxis(this: InternalDragOptions, value: 'x' | 'y' | 'xy', _k: string, { preventScroll }: DragConfig) {\n    this.preventScrollDelay =\n      typeof preventScroll === 'number'\n        ? preventScroll\n        : preventScroll || (preventScroll === undefined && value)\n        ? DEFAULT_PREVENT_SCROLL_DELAY\n        : undefined\n    if (!SUPPORT.touchscreen || preventScroll === false) return undefined\n    return value ? value : preventScroll !== undefined ? 'y' : undefined\n  },\n  pointerCapture(\n    this: InternalDragOptions,\n    _v: any,\n    _k: string,\n    { pointer: { capture = true, buttons = 1, keys = true } = {} }\n  ) {\n    this.pointerButtons = buttons\n    this.keys = keys\n    return !this.pointerLock && this.device === 'pointer' && capture\n  },\n  threshold(\n    this: InternalDragOptions,\n    value: number | Vector2,\n    _k: string,\n    { filterTaps = false, tapsThreshold = 3, axis = undefined }\n  ) {\n    // TODO add warning when value is 0 and filterTaps or axis is set\n    const threshold = V.toVector(value, filterTaps ? tapsThreshold : axis ? 1 : 0)\n    this.filterTaps = filterTaps\n    this.tapsThreshold = tapsThreshold\n    return threshold\n  },\n  swipe(\n    this: InternalDragOptions,\n    { velocity = DEFAULT_SWIPE_VELOCITY, distance = DEFAULT_SWIPE_DISTANCE, duration = DEFAULT_SWIPE_DURATION } = {}\n  ) {\n    return {\n      velocity: this.transform(V.toVector(velocity)),\n      distance: this.transform(V.toVector(distance)),\n      duration\n    }\n  },\n  delay(value: number | boolean = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY\n      case false:\n        return 0\n      default:\n        return value\n    }\n  },\n  axisThreshold(value: Record<PointerType, number>) {\n    if (!value) return DEFAULT_DRAG_AXIS_THRESHOLD\n    return { ...DEFAULT_DRAG_AXIS_THRESHOLD, ...value }\n  },\n  keyboardDisplacement(value: number = DEFAULT_KEYBOARD_DISPLACEMENT) {\n    return value\n  }\n}\n\nif (process.env.NODE_ENV === 'development') {\n  Object.assign(dragConfigResolver, {\n    useTouch(value: any) {\n      if (value !== undefined) {\n        throw Error(\n          `[@use-gesture]: \\`useTouch\\` option has been renamed to \\`pointer.touch\\`. Use it as in \\`{ pointer: { touch: true } }\\`.`\n        )\n      }\n      return NaN\n    },\n    experimental_preventWindowScrollY(value: any) {\n      if (value !== undefined) {\n        throw Error(\n          `[@use-gesture]: \\`experimental_preventWindowScrollY\\` option has been renamed to \\`preventScroll\\`.`\n        )\n      }\n      return NaN\n    },\n    swipeVelocity(value: any) {\n      if (value !== undefined) {\n        throw Error(\n          `[@use-gesture]: \\`swipeVelocity\\` option has been renamed to \\`swipe.velocity\\`. Use it as in \\`{ swipe: { velocity: 0.5 } }\\`.`\n        )\n      }\n      return NaN\n    },\n    swipeDistance(value: any) {\n      if (value !== undefined) {\n        throw Error(\n          `[@use-gesture]: \\`swipeDistance\\` option has been renamed to \\`swipe.distance\\`. Use it as in \\`{ swipe: { distance: 50 } }\\`.`\n        )\n      }\n      return NaN\n    },\n    swipeDuration(value: any) {\n      if (value !== undefined) {\n        throw Error(\n          `[@use-gesture]: \\`swipeDuration\\` option has been renamed to \\`swipe.duration\\`. Use it as in \\`{ swipe: { duration: 250 } }\\`.`\n        )\n      }\n      return NaN\n    }\n  })\n}\n","import { GestureKey, EngineClass, Action } from './types';\nimport { WheelEngine } from './engines/WheelEngine';\nimport { ScrollEngine } from './engines/ScrollEngine';\nimport { PinchEngine } from './engines/PinchEngine';\nimport { MoveEngine } from './engines/MoveEngine';\nimport { HoverEngine } from './engines/HoverEngine';\nimport { DragEngine } from './engines/DragEngine';\nimport { wheelConfigResolver } from './config/wheelConfigResolver';\nimport { scrollConfigResolver } from './config/scrollConfigResolver';\nimport { ResolverMap } from './config/resolver';\nimport { pinchConfigResolver } from './config/pinchConfigResolver';\nimport { moveConfigResolver } from './config/moveConfigResolver';\nimport { hoverConfigResolver } from './config/hoverConfigResolver';\nimport { dragConfigResolver } from './config/dragConfigResolver';\n\nexport const EngineMap = new Map<GestureKey, EngineClass<any>>();\nexport const ConfigResolverMap = new Map<GestureKey, ResolverMap>();\n\nexport function registerAction(action: Action) {\n  EngineMap.set(action.key, action.engine);\n  ConfigResolverMap.set(action.key, action.resolver);\n}\n\nexport const dragAction: Action = {\n  key: 'drag',\n  engine: DragEngine as any,\n  resolver: dragConfigResolver,\n};\n\nexport const hoverAction: Action = {\n  key: 'hover',\n  engine: HoverEngine as any,\n  resolver: hoverConfigResolver,\n};\n\nexport const moveAction: Action = {\n  key: 'move',\n  engine: MoveEngine as any,\n  resolver: moveConfigResolver,\n};\n\nexport const pinchAction: Action = {\n  key: 'pinch',\n  engine: PinchEngine as any,\n  resolver: pinchConfigResolver,\n};\n\nexport const scrollAction: Action = {\n  key: 'scroll',\n  engine: ScrollEngine as any,\n  resolver: scrollConfigResolver,\n};\n\nexport const wheelAction: Action = {\n  key: 'wheel',\n  engine: WheelEngine as any,\n  resolver: wheelConfigResolver,\n};\n","export class TimeoutStore {\n  private _timeouts = new Map<string, number>();\n\n  add<FunctionType extends (...args: any[]) => any>(\n    key: string,\n    callback: FunctionType,\n    ms = 140,\n    ...args: Parameters<FunctionType>\n  ) {\n    this.remove(key);\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n\n  remove(key: string) {\n    const timeout = this._timeouts.get(key);\n    if (timeout) window.clearTimeout(timeout);\n  }\n\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n    this._timeouts.clear();\n  }\n}\n","import { toDomEventType } from './utils/events';\nimport { GestureKey } from './types';\nimport type { Controller } from './Controller';\n\nexport class EventStore {\n  private _listeners = new Set<() => void>();\n\n  private _ctrl: Controller;\n\n  private _gestureKey?: GestureKey;\n\n  constructor(ctrl: Controller, gestureKey?: GestureKey) {\n    this._ctrl = ctrl;\n    this._gestureKey = gestureKey;\n  }\n\n  add(\n    element: EventTarget,\n    device: string,\n    action: string,\n    handler: (event: any) => void,\n    options?: AddEventListenerOptions,\n  ) {\n    const listeners = this._listeners;\n    const type = toDomEventType(device, action);\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey]!.eventOptions : {};\n    const eventOptions = { ..._options, ...options };\n    element.addEventListener(type, handler, eventOptions);\n    const remove = () => {\n      element.removeEventListener(type, handler, eventOptions);\n      listeners.delete(remove);\n    };\n    listeners.add(remove);\n    return remove;\n  }\n\n  clean() {\n    this._listeners.forEach(remove => remove());\n    this._listeners.clear(); // just for safety\n  }\n}\n","import { Target } from '../types'\nimport { SUPPORT } from './support'\n\nexport const sharedConfigResolver = {\n  target(value: Target) {\n    if (value) {\n      return () => ('current' in value ? value.current : value)\n    }\n    return undefined\n  },\n  enabled(value = true) {\n    return value\n  },\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value\n  },\n  eventOptions({ passive = true, capture = false } = {}) {\n    return { passive, capture }\n  },\n  transform(value: any) {\n    return value\n  }\n}\n","import { sharedConfigResolver } from './sharedConfigResolver'\nimport { ConfigResolverMap } from '../actions'\nimport { GestureKey, InternalConfig, UserGestureConfig } from '../types'\n\nexport type Resolver = (x: any, key: string, obj: any) => any\nexport type ResolverMap = { [k: string]: Resolver | ResolverMap | boolean }\n\nexport function resolveWith<T extends { [k: string]: any }, V extends { [k: string]: any }>(\n  config: Partial<T> = {},\n  resolvers: ResolverMap\n): V {\n  const result: any = {}\n\n  for (const [key, resolver] of Object.entries(resolvers)) {\n    switch (typeof resolver) {\n      case 'function':\n        if (process.env.NODE_ENV === 'development') {\n          const r = resolver.call(result, config[key], key, config)\n          // prevents deprecated resolvers from applying in dev mode\n          if (!Number.isNaN(r)) result[key] = r\n        } else {\n          result[key] = resolver.call(result, config[key], key, config)\n        }\n        break\n      case 'object':\n        result[key] = resolveWith(config[key], resolver)\n        break\n      case 'boolean':\n        if (resolver) result[key] = config[key]\n        break\n    }\n  }\n\n  return result\n}\n\nexport function parse(newConfig: UserGestureConfig, gestureKey?: GestureKey, _config: any = {}): InternalConfig {\n  const { target, eventOptions, window, enabled, transform, ...rest } = newConfig as any\n\n  _config.shared = resolveWith({ target, eventOptions, window, enabled, transform }, sharedConfigResolver)\n\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey)!\n    _config[gestureKey] = resolveWith({ shared: _config.shared, ...rest }, resolver)\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key as GestureKey)!\n\n      if (resolver) {\n        _config[key] = resolveWith({ shared: _config.shared, ...rest[key] }, resolver)\n      } else if (process.env.NODE_ENV === 'development') {\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\n          if (key === 'domTarget') {\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`)\n          }\n          // eslint-disable-next-line no-console\n          console.warn(\n            `[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`\n          )\n        }\n      }\n    }\n  }\n  return _config\n}\n","import { chain } from './utils/fn';\nimport { isTouch, parseProp, toHandlerProp, touchIds } from './utils/events';\nimport {\n  GestureKey,\n  InternalConfig,\n  InternalHandlers,\n  NativeHandlers,\n  State,\n  UserGestureConfig,\n} from './types';\nimport { TimeoutStore } from './TimeoutStore';\nimport { EventStore } from './EventStore';\nimport { parse } from './config/resolver';\nimport { EngineMap } from './actions';\n\nexport class Controller {\n  /**\n   * The list of gestures handled by the Controller.\n   */\n  public gestures = new Set<GestureKey>();\n\n  /**\n   * The event store that keeps track of the config.target listeners.\n   */\n  private _targetEventStore = new EventStore(this);\n\n  /**\n   * Object that keeps track of all gesture event listeners.\n   */\n  public gestureEventStores: { [key in GestureKey]?: EventStore } = {};\n\n  public gestureTimeoutStores: { [key in GestureKey]?: TimeoutStore } = {};\n\n  public handlers: InternalHandlers = {};\n\n  private nativeHandlers?: NativeHandlers;\n\n  public config = {} as InternalConfig;\n\n  public pointerIds = new Set<number>();\n\n  public touchIds = new Set<number>();\n\n  public state = {\n    shared: {\n      shiftKey: false,\n      metaKey: false,\n      ctrlKey: false,\n      altKey: false,\n    },\n  } as State;\n\n  constructor(handlers: InternalHandlers) {\n    resolveGestures(this, handlers);\n  }\n\n  /**\n   * Sets pointer or touch ids based on the event.\n   * @param event\n   */\n  setEventIds(event: TouchEvent | PointerEvent) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event as TouchEvent));\n      return this.touchIds;\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup' || event.type === 'pointercancel')\n        this.pointerIds.delete(event.pointerId);\n      else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\n      return this.pointerIds;\n    }\n  }\n\n  /**\n   * Attaches handlers to the controller.\n   * @param handlers\n   * @param nativeHandlers\n   */\n  applyHandlers(handlers: InternalHandlers, nativeHandlers?: NativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n\n  /**\n   * Compute and attaches a config to the controller.\n   * @param config\n   * @param gestureKey\n   */\n  applyConfig(config: UserGestureConfig, gestureKey?: GestureKey) {\n    this.config = parse(config, gestureKey, this.config);\n  }\n\n  /**\n   * Cleans all side effects (listeners, timeouts). When the gesture is\n   * destroyed (in React, when the component is unmounted.)\n   */\n  clean() {\n    this._targetEventStore.clean();\n    for (const key of this.gestures) {\n      this.gestureEventStores[key]!.clean();\n      this.gestureTimeoutStores[key]!.clean();\n    }\n  }\n\n  /**\n   * Executes side effects (attaching listeners to a `config.target`). Ran on\n   * each render.\n   */\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n\n  /**\n   * The bind function that can be returned by the gesture handler (a hook in\n   * React for example.)\n   * @param args\n   */\n  bind(...args: any[]) {\n    const sharedConfig = this.config.shared;\n    const props: any = {};\n\n    let target;\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      // if target is undefined let's stop\n      if (!target) return;\n    }\n\n    if (sharedConfig.enabled) {\n      // Adding gesture handlers\n      for (const gestureKey of this.gestures) {\n        const gestureConfig = this.config[gestureKey]!;\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\n        if (gestureConfig.enabled) {\n          const Engine = EngineMap.get(gestureKey)!;\n          // @ts-ignore\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n\n      // Adding native handlers\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\n      for (const eventKey in this.nativeHandlers) {\n        nativeBindFunction(\n          eventKey,\n          '',\n          // @ts-ignore\n          event => this.nativeHandlers[eventKey]({ ...this.state.shared, event, args }),\n          undefined,\n          true,\n        );\n      }\n    }\n\n    // If target isn't set, we return an object that contains gesture handlers\n    // mapped to props handler event keys.\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n\n    // When target isn't specified then return hanlder props.\n    if (!target) return props;\n\n    // When target is specified, then add listeners to the controller target\n    // store.\n    for (const handlerProp in props) {\n      const { device, capture, passive } = parseProp(handlerProp);\n      this._targetEventStore.add(target, device, '', props[handlerProp], { capture, passive });\n    }\n  }\n}\n\nfunction setupGesture(ctrl: Controller, gestureKey: GestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\n\nfunction resolveGestures(ctrl: Controller, internalHandlers: InternalHandlers) {\n  // make sure hover handlers are added first to prevent bugs such as #322\n  // where the hover pointerLeave handler is removed before the move\n  // pointerLeave, which prevents hovering: false to be fired.\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\n\nconst bindToProps =\n  (props: any, eventOptions: AddEventListenerOptions, withPassiveOption: boolean) =>\n  (\n    device: string,\n    action: string,\n    handler: (event: any) => void,\n    options: AddEventListenerOptions = {},\n    isNative = false,\n  ) => {\n    const capture = options.capture ?? eventOptions.capture;\n    const passive = options.passive ?? eventOptions.passive;\n    // a native handler is already passed as a prop like \"onMouseDown\"\n    let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n    if (withPassiveOption && passive) handlerProp += 'Passive';\n    props[handlerProp] = props[handlerProp] || [];\n    props[handlerProp].push(handler);\n  };\n","import {\n  FullGestureState,\n  GestureHandlers,\n  GestureKey,\n  InternalHandlers,\n  UserGestureConfig,\n} from './types';\nimport { EngineMap } from './actions';\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\n\nfunction sortHandlers(_handlers: GestureHandlers) {\n  const native: any = {};\n  const handlers: InternalHandlers = {};\n  const actions = new Set();\n\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      // @ts-ignore\n      handlers[key] = _handlers[key];\n    } else {\n      // @ts-ignore\n      native[key] = _handlers[key];\n    }\n  }\n\n  return [handlers, native, actions];\n}\n\ntype HandlerKey = 'onDrag' | 'onPinch' | 'onWheel' | 'onMove' | 'onScroll' | 'onHover';\n\nfunction registerGesture(\n  actions: Set<unknown>,\n  handlers: GestureHandlers,\n  handlerKey: HandlerKey,\n  key: GestureKey,\n  internalHandlers: any,\n  config: any,\n) {\n  if (!actions.has(handlerKey)) return;\n\n  if (!EngineMap.has(key)) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`,\n      );\n    }\n    return;\n  }\n\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n\n  const fn = (state: FullGestureState<GestureKey>) => {\n    let memo = undefined;\n    // @ts-ignore\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    // @ts-ignore\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    // @ts-ignore\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\n\nexport function parseMergedHandlers(\n  mergedHandlers: GestureHandlers,\n  mergedConfig: UserGestureConfig,\n) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n\n  const internalHandlers = {};\n\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n\n  return { handlers: internalHandlers, config: mergedConfig, nativeHandlers };\n}\n","import { GestureKey, InternalHandlers, NativeHandlers, UserGestureConfig } from '../core/types';\nimport { Controller } from '../core';\n\nexport class Recognizer<GK extends GestureKey | undefined = undefined> {\n  private _gestureKey?: GK;\n\n  private _ctrl: Controller;\n\n  private _target: EventTarget;\n\n  constructor(\n    target: EventTarget,\n    handlers: InternalHandlers,\n    config: GK extends keyof UserGestureConfig ? UserGestureConfig[GK] : UserGestureConfig,\n    gestureKey?: GK,\n    nativeHandlers?: NativeHandlers,\n  ) {\n    this._target = target;\n    this._gestureKey = gestureKey;\n    this._ctrl = new Controller(handlers);\n    this._ctrl.applyHandlers(handlers, nativeHandlers);\n    this._ctrl.applyConfig({ ...config, target }, gestureKey);\n\n    this._ctrl.effect();\n  }\n\n  destroy() {\n    this._ctrl.clean();\n  }\n\n  setConfig(\n    config: GK extends keyof UserGestureConfig ? UserGestureConfig[GK] : UserGestureConfig,\n  ) {\n    this._ctrl.clean();\n    this._ctrl.applyConfig({ ...config, target: this._target }, this._gestureKey);\n    this._ctrl.effect();\n  }\n}\n","import { Action, GestureHandlers, UserGestureConfig } from '../core/types';\nimport { registerAction } from '../core/actions';\nimport { parseMergedHandlers } from '../core';\nimport { Recognizer } from './Recognizer';\n\nexport function createGesture(actions: Action[]) {\n  actions.forEach(registerAction);\n\n  return function (target: EventTarget, _handlers: GestureHandlers, _config?: UserGestureConfig) {\n    const { handlers, nativeHandlers, config } = parseMergedHandlers(_handlers, _config || {});\n    return new Recognizer(target, handlers, config, undefined, nativeHandlers);\n  };\n}\n","import {\n  AnyHandlerEventTypes,\n  EventTypes,\n  GestureHandlers,\n  UserGestureConfig,\n} from '../core/types';\nimport {\n  dragAction,\n  pinchAction,\n  scrollAction,\n  wheelAction,\n  moveAction,\n  hoverAction,\n} from '../core/actions';\nimport { Recognizer } from './Recognizer';\nimport { createGesture } from './createGesture';\n\ninterface GestureConstructor {\n  new <HandlerTypes extends AnyHandlerEventTypes = EventTypes>(\n    target: EventTarget,\n    handlers: GestureHandlers<HandlerTypes>,\n    config?: UserGestureConfig,\n  ): Gesture;\n}\n\nexport interface Gesture extends Recognizer {}\n\nexport const Gesture: GestureConstructor = function <\n  HandlerTypes extends AnyHandlerEventTypes = EventTypes,\n>(target: EventTarget, handlers: GestureHandlers<HandlerTypes>, config?: UserGestureConfig) {\n  const gestureFunction = createGesture([\n    dragAction,\n    pinchAction,\n    scrollAction,\n    wheelAction,\n    moveAction,\n    hoverAction,\n  ]);\n  return gestureFunction(target, handlers, config || ({} as UserGestureConfig));\n} as any;\n","import { inject, interfaces, optional } from 'inversify';\nimport 'reflect-metadata';\n\nexport const injectByProvider = (provider: interfaces.ServiceIdentifier) =>\n  function (target: any, propertyKey: string) {\n    const providerPropertyKey = `${propertyKey}Provider`;\n\n    inject(provider)(target, providerPropertyKey);\n    optional()(target, providerPropertyKey);\n\n    // decorate 会依赖 reflect-metadata，因此解除其依赖\n    // decorate(inject(provider), target, providerPropertyKey);\n    // decorate(optional(), target, providerPropertyKey);\n\n    return {\n      get() {\n        return this[providerPropertyKey]?.();\n      },\n      configurable: true,\n      enumerable: true,\n    } as any;\n  };\n","import { inject, interfaces } from 'inversify';\n\nexport const LazyInjectContext = Symbol('LazyInjectContext');\nexport const IS_LAZY_INJECT_CONTEXT_INJECTED = Symbol('IS_LAZY_INJECT_CONTEXT_INJECTED');\n\nexport const lazyInject = (serviceIdentifier: interfaces.ServiceIdentifier) =>\n  function (target: any, propertyKey: string) {\n    if (!serviceIdentifier) {\n      throw new Error(\n        `ServiceIdentifier ${serviceIdentifier} in @lazyInject is Empty, it might be caused by file circular dependency, please check it.`,\n      );\n    }\n\n    // 只依赖注入一次\n    if (!Reflect.hasMetadata(IS_LAZY_INJECT_CONTEXT_INJECTED, target)) {\n      inject(LazyInjectContext)(target, LazyInjectContext);\n      Reflect.defineMetadata(IS_LAZY_INJECT_CONTEXT_INJECTED, true, target);\n    }\n\n    const descriptor = {\n      get() {\n        const ctx = this[LazyInjectContext];\n        return ctx.get(serviceIdentifier);\n      },\n      set() {},\n      configurable: true,\n      enumerable: true,\n    } as any;\n\n    // Object.defineProperty(target, propertyKey, descriptor);\n\n    return descriptor;\n  };\n","import { interfaces } from 'inversify';\n\nimport { injectByProvider } from '../core/utils';\n\n/**\n * 会被注入到 layer 层，可以在使用的时候替换它\n */\nexport const PlaygroundContext = Symbol('PlaygroundContext');\n\nexport type PlaygroundContext = any;\n\nexport const PlaygroundContextProvider = Symbol('PlaygroundContextProvider');\nexport type PlaygroundContextProvider = () => any;\nexport const injectPlaygroundContext = () => injectByProvider(PlaygroundContextProvider);\nexport const bindPlaygroundContextProvider = (bind: interfaces.Bind) => {\n  bind(PlaygroundContextProvider).toDynamicValue(ctx => () => {\n    if (ctx.container.isBound(PlaygroundContext)) {\n      return ctx.container.get(PlaygroundContext);\n    }\n    return undefined;\n  });\n};\n\nexport const PlaygroundContainerFactory = Symbol('PlaygroundContainerFactory');\n\nexport interface PlaygroundContainerFactory {\n  createChild: interfaces.Container['createChild'];\n  get: interfaces.Container['get'];\n  getAll: interfaces.Container['getAll'];\n}\n","import { type EntityManager } from './entity-manager';\n\nexport const EntityManagerContribution = Symbol('EntityManagerContribution');\n\nexport interface EntityManagerContribution {\n  registerEntityManager(entityManager: EntityManager): void;\n}\n","import { type Disposable } from '@flowgram.ai/utils';\n\nimport type { EntityDataRegistry } from './entity-data';\nimport { EntityData } from './entity-data';\nimport { Entity, type EntityOpts } from './entity';\n\nexport interface ConfigEntityProps {}\n\n// let version = 0\n\nexport function createConfigDataRegistry<P>(entity: ConfigEntity<any>): EntityDataRegistry {\n  class ConfigData extends EntityData<P> {\n    getDefaultData(): P {\n      return entity.getDefaultConfig();\n    }\n\n    checkChanged(newProps: Partial<P>): boolean {\n      return entity.checkChanged(this.data, newProps);\n    }\n\n    toJSON(): object {\n      return super.toJSON();\n    }\n  }\n\n  Object.defineProperty(ConfigData, 'type', {\n    value: `_${entity.type}DataMixin`,\n    // value: `_${entity.type}DataMixin_${version++}`,\n  });\n\n  return ConfigData as any;\n}\n\n/**\n * 用于专门的数据配置，且是单例\n */\nexport class ConfigEntity<\n  P extends ConfigEntityProps = ConfigEntityProps,\n  O extends EntityOpts = EntityOpts,\n> extends Entity<O> {\n  static type = 'ConfigEntity';\n\n  protected ConfigDataRegistry: EntityDataRegistry;\n\n  constructor(opts: O) {\n    super(opts);\n    this.isInitialized = true;\n    this.ConfigDataRegistry = createConfigDataRegistry<P>(this);\n    this.addData(this.ConfigDataRegistry);\n    this.isInitialized = false;\n  }\n\n  getDefaultConfig(): P {\n    return {} as P;\n  }\n\n  /**\n   * 判断 config 数据是否变化\n   */\n  checkChanged(oldData: P, newData: Partial<P>): boolean {\n    return Entity.checkDataChanged(oldData, newData);\n  }\n\n  get config(): P {\n    return this.getData(this.ConfigDataRegistry)!.data as P;\n  }\n\n  updateConfig(props: Partial<P>): void {\n    this.updateData(this.ConfigDataRegistry, props);\n  }\n\n  onConfigChanged(fn: (data: P) => void): Disposable {\n    return this.getData<EntityData>(this.ConfigDataRegistry)!.onDataChange(d => fn(d.data as P));\n  }\n}\n","// import type { AbleRegistry } from './able';\nimport type { EntityDataRegistry, EntityRegistry } from '.';\n\ndeclare namespace Reflect {\n  export function getMetadata(key: string | symbol, target: any): any;\n  export function defineMetadata(key: string | symbol, value: any, target: any): any;\n}\n\n// export const ABLES_DECO_KEY = Symbol('AblesDecorator');\nexport const ENTITIES_DECO_KEY = Symbol('EntitiesDecorator');\n// export const PAYLOAD_DECO_KEY = Symbol('PayloadDecorator');\n// export const HANDLE_DECO_KEY = Symbol('HandleDecorator');\nexport const ENTITIES_BY_DATA_DECO_KEY = Symbol('EntitiesByDataDecorator');\n\nconst PROPERTEIS_INJECTED = Symbol('PropertiesInjected');\n\nexport interface RegistryValueGetter<T> {\n  (target: any, method: string | symbol): T;\n}\n\nexport interface RegistryInit {\n  (target: any, method: string | symbol): void;\n}\n\nexport function getRegistryMetadata(target: any, key: symbol): any[] {\n  return Reflect.getMetadata(key, target.prototype) || [];\n}\n\nfunction getRegistryInjectedProperties(target: any): string[] {\n  return Reflect.getMetadata(PROPERTEIS_INJECTED, target) || [];\n}\n\nfunction definePropertiesMetadata(target: any, property: string): void {\n  const properties = getRegistryInjectedProperties(target);\n  properties.push(property);\n  Reflect.defineMetadata(PROPERTEIS_INJECTED, properties, target);\n}\n\n/**\n *  在 rspack 场景编译ts文件时候\n *  decorator 注入的 property 会被当成 this 的属性, 导致 Reflect.metadata 失效\n */\nexport function removeInjectedProperties(instance: any): void {\n  if (typeof instance === 'object') {\n    const propertiesInjected = getRegistryInjectedProperties(instance.constructor.prototype);\n    propertiesInjected.forEach(propertyKey => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (instance.hasOwnProperty(propertyKey) && instance[propertyKey] === undefined) {\n        delete instance[propertyKey];\n      }\n    });\n  }\n}\n\nexport function createRegistryDecorator(\n  key: symbol,\n  data: any,\n  getValue?: RegistryValueGetter<any>,\n  init?: RegistryInit,\n): any {\n  return (target: any, property: string): any => {\n    let registries = Reflect.getMetadata(key, target);\n    if (!registries) {\n      registries = [];\n      Reflect.defineMetadata(key, registries, target);\n    }\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n    data.forEach((registry: any) => {\n      if (!registries.includes(registry)) {\n        registries.push(registry);\n      }\n    });\n    if (init) init(target, property);\n    if (property && getValue) {\n      definePropertiesMetadata(target, property);\n      return {\n        enumerable: false,\n        configurable: false,\n        get(): any {\n          return getValue(this, property);\n        },\n      };\n    }\n  };\n}\n\n// export function getAbleMetadata(layer: any): AbleRegistry[] {\n//   return getRegistryMetadata(layer, ABLES_DECO_KEY);\n// }\n\nexport function getEntityMetadata(layer: any): EntityRegistry[] {\n  return getRegistryMetadata(layer, ENTITIES_DECO_KEY);\n}\nexport function getEntityDatasMetadata(\n  layer: any,\n): { entity: EntityRegistry; data: EntityDataRegistry }[] {\n  return getRegistryMetadata(layer, ENTITIES_BY_DATA_DECO_KEY);\n}\n\n// export function getPayloadMetadata(able: AbleRegistry): string | symbol {\n//   return getRegistryMetadata(able, PAYLOAD_DECO_KEY)[0];\n// }\n\n// export function getHandleParams(able: AbleRegistry): EntityDataRegistry[] {\n//   return getRegistryMetadata(able, HANDLE_DECO_KEY);\n// }\n","import {\n  // ABLES_DECO_KEY,\n  ENTITIES_DECO_KEY,\n  // HANDLE_DECO_KEY,\n  // PAYLOAD_DECO_KEY,\n  createRegistryDecorator,\n  ENTITIES_BY_DATA_DECO_KEY,\n  type RegistryValueGetter,\n} from './playground-decorator-helper';\n// import type { AbleRegistry } from './able';\nimport type { Entity, EntityDataRegistry, EntityRegistry } from '.';\n// import type { Layer } from './layer';\n\n// export function observeAble(registry: AbleRegistry): any {\n//   const getValue: RegistryValueGetter<Entity[]> = (target: any) =>\n//     target.observeManager.getEntitiesByAble(registry);\n//   return createRegistryDecorator(ABLES_DECO_KEY, [registry], getValue);\n// }\n\n// /**\n//  * @param andAbles - 多个 able，条件且\n//  * @param orAbles - 多个 able，条件或\n//  */\n// export function observeAbles(andAbles: AbleRegistry[], orAbles: AbleRegistry[] = []): any {\n//   const getValue: RegistryValueGetter<Entity[]> = (target: any) =>\n//     target.observeManager.getEntitiesByAbles(andAbles, orAbles);\n//   return createRegistryDecorator(ABLES_DECO_KEY, andAbles.concat(orAbles), getValue);\n// }\nexport function observeEntity(registry: EntityRegistry): any {\n  const getValue: RegistryValueGetter<Entity> = (target: any) =>\n    target.observeManager.get(registry)!;\n  return createRegistryDecorator(ENTITIES_DECO_KEY, registry, getValue);\n}\n\n/**\n * 监听 entity 变化\n * @param registry\n */\nexport function observeEntities(registry: EntityRegistry): any {\n  const getValue: RegistryValueGetter<Entity[]> = (target: any) =>\n    target.observeManager.getEntities(registry);\n  return createRegistryDecorator(ENTITIES_DECO_KEY, registry, getValue);\n}\n\n// export function payload(payloadKey: string | symbol): any {\n//   const check = (target: any, method: string) => {\n//     if (method !== 'payload')\n//       throw new Error(`@payload() should be used by \"payload\" method but get \"${method}\".`);\n//   };\n//   // @ts-ignore\n//   return createRegistryDecorator(PAYLOAD_DECO_KEY, payloadKey, undefined, check);\n// }\n\n// export function params(...registries: EntityDataRegistry[]): any {\n//   const check = (target: any, method: string) => {\n//     if (method !== 'handle')\n//       throw new Error(`@params() should be used by \"handle\" method but get \"${method}\".`);\n//   };\n//   // @ts-ignore\n//   return createRegistryDecorator(HANDLE_DECO_KEY, registries, undefined, check);\n// }\n\n/**\n * 监听 entity 对应的 data 数据变化\n *\n * @param entityRegistry\n * @param dataRegistry\n */\nexport function observeEntityDatas(\n  entityRegistry: EntityRegistry,\n  dataRegistry: EntityDataRegistry,\n): any {\n  const getValue: RegistryValueGetter<Entity[]> = (target: any) =>\n    target.observeManager.getEntityDatas(entityRegistry, dataRegistry);\n  return createRegistryDecorator(\n    ENTITIES_BY_DATA_DECO_KEY,\n    { entity: entityRegistry, data: dataRegistry },\n    getValue,\n  );\n}\n","/**\n * 保护区域不被画布劫持滚动事件\n */\nexport const ProtectWheelArea = Symbol('ProtectWheelArea');\n\nexport type ProtectWheelArea = (dom: Element) => boolean;\n","export * from './schema';\nexport * from './utils';\n// export * from './able';\n// export * from './able-manager';\nexport * from './entity-manager';\nexport * from './config-entity';\nexport * from './entity';\n// export * from './entity-tree';\n// export * from './entity-ables';\nexport * from './entity-data';\nexport * from './entity-manager-contribution';\nexport * from './playground-context';\nexport * from './playground-decorator-helper';\nexport * from './playground-decorators';\nexport * from './playground-schedule';\nexport * from './protect-wheel-area';\nexport { bindContributions, ContributionProvider, bindContributionProvider } from '@flowgram.ai/utils';\n","import { type Layer, type LayerRegistry } from '../layer';\n\nexport type PipeSupportEvent = MouseEvent | DragEvent | KeyboardEvent | UIEvent | TouchEvent | any;\nexport type PipeEventName = string;\nexport interface PipelineDimension {\n  width: number;\n  height: number;\n  clientX: number;\n  clientY: number;\n}\n\nexport type PipelineEventHandler = (event: PipeSupportEvent) => boolean | undefined;\n\nexport interface PipelineEventRegsiter {\n  handle: PipelineEventHandler;\n  priority: number;\n}\n\nexport enum PipelineLayerPriority {\n  BASE_LAYER = -2, // 优先级最低\n  TOOL_LAYER = -1, // 工具层\n  NORMAL_LAYER, // 使用层\n}\nexport const PipelineLayerFactory = Symbol('PipelineLayerFactory');\nexport type PipelineLayerFactory = (layerRegistry: LayerRegistry, layerOptions?: any) => Layer;\n","import React from 'react';\n\nimport { inject, injectable } from 'inversify';\nimport {\n  ConflatableMessage,\n  type IMessageHandler,\n  type Message,\n  MessageLoop,\n} from '@phosphor/messaging';\nimport { type Disposable, DisposableCollection, domUtils, Emitter } from '@flowgram.ai/utils';\n\nimport { type Layer } from '../layer';\nimport { LoggerService } from '../../services';\nimport { EntityManager } from '../../common';\nimport { createLayerReactAutorun } from './pipline-react-utils';\nimport { PipelineEntitiesSelector } from './pipeline-entities-selector';\nimport { type PipelineEntitiesImpl } from './pipeline-entities';\n\nexport const FLUSH_LAYER_REQUEST = 'flush-layer-request';\n\nlet id = 0;\n\nexport class FlushLayerMessage extends ConflatableMessage {\n  constructor(readonly layer: Layer) {\n    super(`${FLUSH_LAYER_REQUEST}_layer${id++}`);\n  }\n}\n\n/**\n * pipeline 渲染器\n */\n@injectable()\nexport class PipelineRenderer implements Disposable, IMessageHandler {\n  public isReady = false;\n\n  protected onAllLayersRenderedEmitter = new Emitter<void>();\n\n  protected toDispose = new DisposableCollection();\n\n  readonly layers: Layer[] = [];\n\n  protected forceUpdates: Set<Layer> = new Set();\n\n  readonly layerAutorunMap: Map<Layer, () => void> = new Map();\n\n  readonly layerRenderedMap: Map<Layer, boolean> = new Map();\n\n  readonly layerFlushMessages: Map<Layer, FlushLayerMessage> = new Map();\n\n  protected reactPortals: React.FunctionComponent[] = [];\n\n  readonly node = domUtils.createDivWithClass('gedit-playground-pipeline');\n\n  /**\n   * 所有 Layer 第一次渲染完成后触发\n   */\n  readonly onAllLayersRendered = this.onAllLayersRenderedEmitter.event;\n\n  @inject(LoggerService) protected readonly loggerService: LoggerService;\n\n  constructor(\n    @inject(PipelineEntitiesSelector)\n    protected readonly selector: PipelineEntitiesSelector,\n    @inject(EntityManager) entityManager: EntityManager\n    // @inject(AbleManager) ableManager: AbleManager,\n  ) {\n    /**\n     * entity 修改触发 layer 更新\n     */\n    this.toDispose.push(\n      entityManager.onEntityChange((entityType: string) => {\n        const layers = this.selector.entityLayerMap.get(entityType);\n        if (layers) layers.forEach((layer) => this.updateLayer(layer));\n      })\n    );\n    this.toDispose.push(this.onAllLayersRenderedEmitter);\n  }\n\n  reportLayerRendered(layer: Layer): void {\n    this.layerRenderedMap.set(layer, true);\n    const allLayersRendered = Array.from(this.layerRenderedMap.values()).every((v) => v);\n    if (allLayersRendered) {\n      // logger 事件点位上报\n      this.loggerService.onAllLayersRendered();\n      this.onAllLayersRenderedEmitter.fire();\n      // e2e 性能测试时会注入以下全局变量\n      if ((window as any).REPORT_TTI_FOR_E2E) {\n        (window as any).REPORT_TTI_FOR_E2E(\n          // 由于 e2e 环境，performance 耗时即为 tti 的完整耗时。\n          performance.now(),\n          performance.getEntriesByType('resource')\n        );\n      }\n    }\n  }\n\n  addLayer(layer: Layer): void {\n    this.layers.push(layer);\n    this.toDispose.push(layer);\n    this.layerFlushMessages.set(layer, new FlushLayerMessage(layer));\n    layer.pipelineNode = this.node;\n    layer.playgroundNode = this.node.parentElement!;\n    // Auto create node\n    if ((layer.autorun || layer.render) && !layer.node) {\n      layer.node = document.createElement('div');\n    }\n    // 把 layer 加到父亲节点上\n    if (layer.node) {\n      this.node.appendChild(layer.node);\n      layer.node.classList.add('gedit-playground-layer');\n    }\n    if (layer.autorun) {\n      const autorun = layer.autorun.bind(layer);\n      this.layerAutorunMap.set(layer, autorun);\n      // 重载 layer autorun\n      layer.autorun = () => {\n        this.updateLayer(layer, true);\n      };\n    } else if (layer.render) {\n      this.layerRenderedMap.set(layer, false);\n      const render = layer.render.bind(layer);\n      const autorun = createLayerReactAutorun(\n        layer,\n        render,\n        this.reportLayerRendered.bind(this),\n        this\n      );\n      this.reactPortals.push(autorun.portal);\n      this.layerAutorunMap.set(layer, autorun.autorun);\n      if (process.env.NODE_ENV === 'test') {\n        // 不对外暴露_render 字段\n        (layer as any)._render = layer.render;\n      }\n      // 重载 layer autorun\n      layer.render = (() => {\n        this.updateLayer(layer, true);\n      }) as () => JSX.Element;\n    }\n  }\n\n  flush(forceUpdate?: boolean): void {\n    this.layers.forEach((layer) => {\n      this.updateLayer(layer, forceUpdate);\n    });\n  }\n\n  ready(): void {\n    this.layers.forEach((layer) => {\n      // 先加载一次数据，保证 ready 时候能运行\n      this.loadLayerEntities(layer);\n      if (layer.onReady) layer.onReady();\n    });\n    this.isReady = true;\n    // 第一次先渲染一次\n    this.flush(true);\n  }\n\n  dispose(): void {\n    this.toDispose.dispose();\n    this.node.remove();\n  }\n\n  processMessage(msg: Message): void {\n    if (msg instanceof FlushLayerMessage) {\n      this.onFlushRequest(msg.layer);\n    }\n  }\n\n  protected loadLayerEntities(layer: Layer): boolean {\n    const result = this.selector.getLayerData(layer);\n    if (result.changed) {\n      // 这里更新 layer 的 entities\n      (layer.observeManager as PipelineEntitiesImpl).load(\n        result.observeEntities,\n        result.observeDatas\n      );\n    }\n    return result.changed;\n  }\n\n  protected onFlushRequest(layer: Layer): boolean {\n    // 只有 ready 之后才能执行 autorun\n    if (!this.isReady || this.toDispose.disposed) return false;\n    const startRenderTime = performance.now();\n    const trackRenderPerformance = () => {\n      const renderDuration = performance.now() - startRenderTime;\n      // 小于 4ms 的渲染时间不需要记录\n      if (renderDuration < 4) {\n        return;\n      }\n      this.loggerService.onFlushRequest(renderDuration);\n    };\n    const autorun = this.layerAutorunMap.get(layer);\n    const changed = this.loadLayerEntities(layer);\n    // 只有修改或强制刷新才会刷新\n    if (autorun && (changed || this.forceUpdates.has(layer))) {\n      this.forceUpdates.delete(layer);\n      try {\n        // console.time(`layer ${layer.constructor.name}`)\n        autorun();\n        // console.timeEnd(`layer ${layer.constructor.name}`)\n        /* v8 ignore next 3 */\n      } catch (e) {\n        console.error(e);\n      }\n      trackRenderPerformance();\n      return true;\n      /* v8 ignore next 2 */\n    }\n    trackRenderPerformance();\n    return false;\n  }\n\n  /**\n   * 1. PostMessage: 会将消息在 nextTick 执行\n   * 2. ConflatableMessage: 当多个消息进来会在下一个 nextTick 做合并\n   * 3. 图层相互隔离，即时一层挂了也不受影响\n   */\n  updateLayer(layer: Layer, forceUpdate?: boolean): void {\n    if (forceUpdate) {\n      this.forceUpdates.add(layer);\n    }\n    if (process.env.NODE_ENV === 'test') {\n      this.onFlushRequest(layer);\n    } else {\n      MessageLoop.postMessage(this, this.layerFlushMessages.get(layer)!);\n    }\n  }\n\n  private reactComp?: React.FC;\n\n  /**\n   * 转成 react\n   */\n  toReactComponent(): React.FC {\n    if (this.reactComp) return this.reactComp;\n    const portals = this.reactPortals;\n    const comp = () => (\n      <>\n        {/* eslint-disable-next-line react/no-array-index-key */}\n        {portals.map((Portal, key) => (\n          <Portal key={key} />\n        ))}\n      </>\n    );\n    this.reactComp = comp;\n    return comp;\n  }\n}\n","import { injectable } from 'inversify';\nimport { Compare, type Disposable, Emitter, type Event } from '@flowgram.ai/utils';\n\nimport { type Entity } from '../common';\n\n/**\n * 画布全局的选择器，可以放任何东西\n */\n@injectable()\nexport class SelectionService implements Disposable {\n  protected readonly onSelectionChangedEmitter = new Emitter<Entity[]>();\n\n  readonly onSelectionChanged: Event<any> = this.onSelectionChangedEmitter.event;\n\n  private currentSelection: Entity[] = [];\n\n  private disposers: Disposable[] = [];\n\n  get selection(): Entity[] {\n    return this.currentSelection;\n  }\n\n  isEmpty(): boolean {\n    return this.currentSelection.length === 0;\n  }\n\n  set selection(selection: Entity<any>[]) {\n    if (!Compare.isArrayShallowChanged(this.currentSelection, selection)) {\n      return;\n    }\n    this.disposers.forEach((disposer) => disposer.dispose());\n    this.changeSelection(selection);\n    this.disposers = this.currentSelection.map((selection) =>\n      selection.onDispose(() => {\n        const newSelection = this.currentSelection.filter((n) => n !== selection);\n        this.changeSelection(newSelection);\n      })\n    );\n  }\n\n  private changeSelection(selection: Entity<any>[]) {\n    this.currentSelection = selection;\n    this.onSelectionChangedEmitter.fire(this.currentSelection);\n  }\n\n  dispose() {\n    this.onSelectionChangedEmitter.dispose();\n  }\n}\n","import { injectable, postConstruct } from 'inversify';\n\nexport const StorageService = Symbol('StorageService');\n\n/**\n * 存储数据到缓存\n */\nexport interface StorageService {\n  /**\n   * Stores the given data under the given key.\n   */\n  setData<T>(key: string, data: T): void;\n\n  /**\n   * Returns the data stored for the given key or the provided default value if nothing is stored for the given key.\n   */\n  getData<T>(key: string, defaultValue: T): T;\n\n  getData<T>(key: string): T | undefined;\n}\n\ninterface LocalStorage {\n  [key: string]: any;\n}\n\n@injectable()\nexport class LocalStorageService implements StorageService {\n  private storage: LocalStorage;\n\n  private _prefix = '__gedit:';\n\n  setData<T>(key: string, data: T): void {\n    this.storage[this.prefix(key)] = JSON.stringify(data);\n  }\n\n  getData<T>(key: string, defaultValue?: T): T {\n    const result = this.storage[this.prefix(key)];\n    if (result === undefined) {\n      return defaultValue as any;\n    }\n    return JSON.parse(result);\n  }\n\n  prefix(key: string) {\n    return `${this._prefix}${key}`;\n  }\n\n  setPrefix(prefix: string) {\n    this._prefix = prefix;\n  }\n\n  @postConstruct()\n  protected init(): void {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = {};\n    }\n  }\n}\n","import { injectable } from 'inversify';\nimport { Emitter, type Event, type MaybePromise } from '@flowgram.ai/utils';\n\nexport const ClipboardService = Symbol('ClipboardService');\n\nexport interface ClipboardService {\n  onClipboardChanged: Event<string>;\n  readText(): MaybePromise<string>;\n\n  writeText(value: string): MaybePromise<void>;\n}\n\n/**\n * 剪贴板服务，一般用于管理临时的复制黏贴数据\n * TODO: 后续可以支持调用浏览器\n */\n@injectable()\nexport class DefaultClipboardService implements ClipboardService {\n  private _currentData: string;\n\n  protected readonly onClipboardChangedEmitter = new Emitter<string>();\n\n  readonly onClipboardChanged: Event<string> = this.onClipboardChangedEmitter.event;\n\n  readText(): string {\n    return this._currentData;\n  }\n\n  writeText(value: string): void {\n    if (this._currentData !== value) {\n      this._currentData = value;\n      this.onClipboardChangedEmitter.fire(value);\n    }\n  }\n}\n","import { injectable } from 'inversify';\n\n/**\n * 圈选右键菜单相关 service\n */\n@injectable()\nexport class ContextMenuService {\n  /**\n   * 右键面板是否展示，展示的时候为 true\n   */\n  private isRightPanelVisible: boolean;\n\n  get rightPanelVisible(): boolean {\n    return this.isRightPanelVisible;\n  }\n\n  set rightPanelVisible(visible: boolean) {\n    this.isRightPanelVisible = visible;\n  }\n}\n","import { injectable } from 'inversify';\nimport { type Disposable, Emitter, type Event } from '@flowgram.ai/utils';\n\nexport interface LoggerProps {\n  event: LoggerEvent;\n  props?: Record<string, any>;\n}\n\nexport enum LoggerEvent {\n  CANVAS_TTI, // Time To Interactive，画布可交互时间\n  CANVAS_FPS, // Frame Per Second，画布渲染帧率\n}\n\n/**\n * 画布全局的选择器，可以放任何东西\n */\n@injectable()\nexport class LoggerService implements Disposable {\n  protected readonly onLoggerEmitter = new Emitter<LoggerProps>();\n\n  // plugin 内注册：loggerService.onLogger(() => {})\n  readonly onLogger: Event<any> = this.onLoggerEmitter.event;\n\n  onAllLayersRendered() {\n    this.onLoggerEmitter.fire({\n      event: LoggerEvent.CANVAS_TTI,\n    });\n  }\n\n  onFlushRequest(renderFrameInterval: number) {\n    if (renderFrameInterval <= 0) {\n      return;\n    }\n    const fps = 1000 / renderFrameInterval;\n    this.onLoggerEmitter.fire({\n      event: LoggerEvent.CANVAS_FPS,\n      props: { rfi: renderFrameInterval, fps },\n    });\n  }\n\n  dispose() {\n    this.onLoggerEmitter.dispose();\n  }\n}\n","import ReactDOM from 'react-dom';\nimport React, { useEffect, useState, useCallback } from 'react';\n\nimport { NOOP } from '@flowgram.ai/utils';\n\nimport type { Layer } from '../layer';\nimport { type PipelineRenderer } from './pipeline-renderer';\n\ninterface LayerReactAutorun {\n  autorun: () => void; // autorun function\n  portal: () => JSX.Element;\n}\n\nfunction OriginComp({\n  originRenderer,\n  renderedCb,\n}: {\n  originRenderer: () => JSX.Element | void;\n  renderedCb: () => void;\n}): JSX.Element | null {\n  useEffect(() => {\n    renderedCb();\n  }, []);\n  return originRenderer() || null;\n}\n\nexport function createLayerReactAutorun(\n  layer: Layer,\n  originRenderer: () => JSX.Element | void,\n  renderedCb: (layer: Layer) => void,\n  pipelineRenderer: PipelineRenderer,\n): LayerReactAutorun {\n  let update = NOOP;\n  function PlaygroundReactLayerPortal(): JSX.Element {\n    const [, refresh] = useState({});\n    const handleRendered = useCallback(() => {\n      renderedCb(layer);\n    }, [layer]);\n    useEffect(() => {\n      update = () => refresh({});\n      return () => {\n        update = NOOP;\n      };\n    });\n\n    let result: any;\n    try {\n      result = !pipelineRenderer.isReady ? (\n        <></>\n      ) : (\n        <OriginComp originRenderer={originRenderer} renderedCb={handleRendered} />\n      );\n    } catch (e) {\n      console.error(`Render Layer \"${layer.constructor.name}\" error `, e);\n      result = <></>;\n    }\n    return ReactDOM.createPortal(result, layer.node!);\n  }\n  return {\n    autorun: () => update(),\n    // 这里使用了 memo 缓存隔离，这样做的前提 layer 的刷新完全交给 entity，不受外部干扰\n    portal: layer.renderWithReactMemo\n      ? (React.memo(PlaygroundReactLayerPortal) as any)\n      : PlaygroundReactLayerPortal,\n  };\n}\n","import { inject, injectable } from 'inversify';\n\nimport { type Layer } from '../layer';\nimport {\n  // AbleManager,\n  // type AbleRegistry,\n  type Entity,\n  type EntityData,\n  type EntityDataRegistry,\n  EntityManager,\n  type EntityRegistry,\n} from '../../common';\n\ntype SelectorVersion = Map<string, number>;\n\nexport interface LayerEntitiesSelector {\n  // lastAbleVersion?: SelectorVersion;\n  lastEntityVersion?: SelectorVersion;\n  lastDataVersion?: SelectorVersion;\n  entities: EntityRegistry[];\n  // ables: AbleRegistry[];\n  datas: [EntityRegistry, EntityDataRegistry][]; // entity-data\n}\n\n/**\n * 选择器用来在 pipeline 绘制之前，筛选并注入 entities\n */\n@injectable()\nexport class PipelineEntitiesSelector {\n  protected layerEntitiesSelectorMap: WeakMap<Layer, LayerEntitiesSelector> = new WeakMap();\n\n  readonly entityLayerMap: Map<string, Set<Layer>> = new Map();\n\n  readonly ableLayerMap: Map<string, Set<Layer>> = new Map();\n\n  // @inject(AbleManager) ableManager: AbleManager;\n\n  @inject(EntityManager) entityManager: EntityManager;\n\n  /**\n   * 订阅关联的 entity，会影响 autorun\n   */\n  subscribeEntities(layer: Layer, entities: EntityRegistry[]): void {\n    const selector = this.getSelector(layer);\n    entities.forEach(e => {\n      if (!selector.entities.includes(e)) selector.entities.push(e);\n      let layers = this.entityLayerMap.get(e.type);\n      if (!layers) {\n        layers = new Set();\n        this.entityLayerMap.set(e.type, layers);\n      }\n      layers.add(layer);\n    });\n  }\n\n  // /**\n  //  * 订阅关联的 able, 会影响 autorun\n  //  */\n  // subscribeAbles(layer: Layer, ables: AbleRegistry[]): void {\n  //   const selector = this.getSelector(layer);\n  //   ables.forEach(able => {\n  //     if (!selector.ables.includes(able)) selector.ables.push(able);\n  //     let layers = this.ableLayerMap.get(able.type);\n  //     if (!layers) {\n  //       layers = new Set();\n  //       this.ableLayerMap.set(able.type, layers);\n  //     }\n  //     layers.add(layer);\n  //   });\n  // }\n\n  /**\n   * 订阅 data 数据\n   * @param layer\n   * @param entity\n   * @param data\n   */\n  subscribleEntityByData(layer: Layer, entity: EntityRegistry, data: EntityDataRegistry): void {\n    const selector = this.getSelector(layer);\n    // Entity 和 layer 做关联\n    let layers = this.entityLayerMap.get(entity.type);\n    if (!layers) {\n      layers = new Set();\n      this.entityLayerMap.set(entity.type, layers);\n    }\n    layers.add(layer);\n    const item: [EntityRegistry, EntityDataRegistry] = [entity, data];\n    if (!selector.datas.find(i => i[0] === entity && i[1] === data)) selector.datas.push(item);\n  }\n\n  protected getSelector(layer: Layer): LayerEntitiesSelector {\n    let selector = this.layerEntitiesSelectorMap.get(layer);\n    if (!selector) {\n      selector = { entities: [], datas: [] };\n      this.layerEntitiesSelectorMap.set(layer, selector);\n    }\n    return selector;\n  }\n\n  /**\n   * 查询 layer 关联的实体\n   */\n  getLayerEntities(layer: Layer): { entities: Entity[]; changed: boolean } {\n    const selector = this.layerEntitiesSelectorMap.get(layer);\n    /* v8 ignore next 1 */\n    if (!selector) return { entities: [], changed: false };\n    const allEntities: Set<Entity> = new Set();\n    const entityVersion: SelectorVersion = new Map();\n    let entityChanged = false;\n    selector.entities.forEach(registry => {\n      const entities = this.entityManager.getEntities(registry);\n      const version = this.entityManager.getEntityVersion(registry);\n      entityVersion.set(registry.type, version);\n      for (const item of entities) {\n        allEntities.add(item);\n      }\n    });\n    // selector.ables.forEach(registry => {\n    //   const entities = this.ableManager.getEntitiesByAble(registry);\n    //   for (const item of entities) {\n    //     if (!entityVersion.has(item.type)) {\n    //       const version = this.entityManager.getEntityVersion(item.type);\n    //       entityVersion.set(item.type, version);\n    //     }\n    //     allEntities.add(item);\n    //   }\n    // });\n    // To array\n    const result: Entity[] = [];\n    for (const item of allEntities.values()) {\n      result.push(item);\n    }\n    /**\n     * 检查版本变化\n     */\n    if (checkChanged(entityVersion, selector.lastEntityVersion)) {\n      selector.lastEntityVersion = entityVersion;\n      entityChanged = true;\n    }\n    return {\n      entities: result,\n      changed: entityChanged,\n    };\n  }\n\n  getLayerEntityDatas(layer: Layer): { datas: EntityData[]; changed: boolean } {\n    const selector = this.layerEntitiesSelectorMap.get(layer);\n    /* v8 ignore next 1 */\n    if (!selector) return { datas: [], changed: false };\n    const allDatas: EntityData[] = [];\n    const dataVersion: SelectorVersion = new Map();\n    let dataChanged = false;\n    selector.datas.forEach(registries => {\n      const [entityRegistry, entityDataRegistry] = registries;\n      const entityDatas = this.entityManager.getEntityDatas(entityRegistry, entityDataRegistry);\n      const version = this.entityManager.getEntityDataVersion(entityDataRegistry);\n      dataVersion.set(entityDataRegistry.type, version);\n      /* v8 ignore next 3 */\n      for (const item of entityDatas) {\n        allDatas.push(item);\n      }\n    });\n    if (checkChanged(dataVersion, selector.lastDataVersion)) {\n      selector.lastDataVersion = dataVersion;\n      dataChanged = true;\n    }\n    return {\n      datas: allDatas,\n      changed: dataChanged,\n    };\n  }\n\n  getLayerData(layer: Layer): {\n    observeEntities: Entity[];\n    observeDatas: EntityData[];\n    changed: boolean;\n  } {\n    const entitiesSelector = this.getLayerEntities(layer);\n    const datasSelector = this.getLayerEntityDatas(layer);\n    return {\n      observeEntities: entitiesSelector.entities,\n      observeDatas: datasSelector.datas,\n      changed: datasSelector.changed || entitiesSelector.changed,\n    };\n  }\n}\n\nfunction checkChanged(v1: SelectorVersion = new Map(), v2: SelectorVersion = new Map()): boolean {\n  if (v1.size !== v2.size) return true;\n  for (const key of v1.keys()) {\n    /* v8 ignore next 1 */\n    if (v1.get(key) !== v2.get(key)) return true;\n  }\n  return false;\n}\n","import { inject, injectable } from 'inversify';\nimport {\n  ConflatableMessage,\n  type IMessageHandler,\n  type Message,\n  MessageLoop,\n} from '@phosphor/messaging';\nimport { Disposable, DisposableCollection, Emitter } from '@flowgram.ai/utils';\n\nimport { type Layer, type LayerRegistry, PlaygroundConfigEntity } from '../layer';\nimport {\n  // AbleManager,\n  ConfigEntity,\n  Entity,\n  EntityManager,\n  // getAbleMetadata,\n  getEntityDatasMetadata,\n  getEntityMetadata,\n  injectPlaygroundContext,\n  PlaygroundContext,\n} from '../../common';\nimport { PipelineRenderer } from './pipeline-renderer';\nimport { PipelineEntitiesSelector } from './pipeline-entities-selector';\nimport { PipelineEntitiesImpl } from './pipeline-entities';\n// import { PipelineDispatcher } from './pipeline-dispatcher';\nimport {\n  type PipeEventName,\n  type PipelineDimension,\n  type PipelineEventHandler,\n  type PipelineEventRegsiter,\n  PipelineLayerFactory,\n  type PipeSupportEvent,\n} from './pipeline';\n\nexport enum PipelineMessage {\n  ZOOM = 'PIPELINE_ZOOM',\n  SCROLL = 'PIPELINE_SCROLL',\n}\nconst zoomMessage = new ConflatableMessage(PipelineMessage.ZOOM);\nconst scrollMessage = new ConflatableMessage(PipelineMessage.SCROLL);\n/**\n * pipeline 注册器，用于注册一些事件\n */\n@injectable()\nexport class PipelineRegistry implements Disposable, IMessageHandler {\n  private _isFocused = false;\n\n  protected toDispose = new DisposableCollection();\n\n  protected allLayersMap = new Map<LayerRegistry, Layer>();\n\n  readonly onResizeEmitter = new Emitter<PipelineDimension>();\n\n  readonly onFocusEmitter = new Emitter<void>();\n\n  readonly onBlurEmitter = new Emitter<void>();\n\n  readonly onZoomEmitter = new Emitter<number>();\n\n  readonly onScrollEmitter = new Emitter<{ scrollX: number; scrollY: number }>();\n\n  readonly onFocus = this.onFocusEmitter.event;\n\n  readonly onBlur = this.onBlurEmitter.event;\n\n  readonly onZoom = this.onZoomEmitter.event;\n\n  readonly onScroll = this.onScrollEmitter.event;\n\n  constructor() {\n    this.toDispose.pushAll([\n      this.onResizeEmitter,\n      this.onFocusEmitter,\n      this.onZoomEmitter,\n      this.onBlurEmitter,\n      this.onScrollEmitter,\n    ]);\n    this.onFocusEmitter.event(() => {\n      this._isFocused = true;\n    });\n    this.onBlurEmitter.event(() => {\n      this._isFocused = false;\n    });\n  }\n\n  // @inject(PipelineDispatcher) dispatcher: PipelineDispatcher;\n\n  @inject(PipelineRenderer) renderer: PipelineRenderer;\n\n  @inject(PipelineEntitiesSelector) selector: PipelineEntitiesSelector;\n\n  @inject(EntityManager) entityManager: EntityManager;\n\n  // @inject(AbleManager) ableManager: AbleManager;\n\n  @injectPlaygroundContext() context: PlaygroundContext;\n\n  @inject(PipelineLayerFactory) layerFactory: PipelineLayerFactory;\n\n  // @inject(SelectionService) @optional() selectionService?: SelectionService;\n  protected playgroundEvents: {\n    [key: string]: { handlers: PipelineEventRegsiter[] } & Disposable;\n  } = {};\n\n  protected globalEvents: {\n    [key: string]: { handlers: PipelineEventRegsiter[] } & Disposable;\n  } = {};\n\n  _listenEvent(\n    name: PipeEventName,\n    handle: PipelineEventHandler,\n    isGlobal: boolean,\n    priority = 0,\n    options?: AddEventListenerOptions\n  ): Disposable {\n    const eventsCache = isGlobal ? this.globalEvents : this.playgroundEvents;\n    const domNode = isGlobal ? document : this.renderer.node.parentNode!;\n    let eventRegister = eventsCache[name];\n    if (!eventRegister) {\n      const realHandler = {\n        handleEvent: (e: PipeSupportEvent) => {\n          const list = eventRegister.handlers;\n          for (let i = 0, len = list.length; i < len; i++) {\n            const prevent = list[i].handle(e);\n            /* v8 ignore next 1 */\n            if (prevent) return;\n          }\n        },\n      };\n      domNode.addEventListener(name, realHandler, options);\n      eventRegister = eventsCache[name] = {\n        handlers: [],\n        dispose: () => {\n          domNode.removeEventListener(name, realHandler);\n          delete eventsCache[name];\n        },\n      };\n    }\n    const { handlers } = eventRegister;\n    const item = { handle, priority };\n    /**\n     * handlers 排序：\n     * 1. 后注册先执行 (符合冒泡规则)\n     * 2. 按 priority 排序\n     */\n    handlers.unshift(item);\n    handlers.sort((a, b) => b.priority - a.priority);\n    const dispose = Disposable.create(() => {\n      const index = eventRegister.handlers.indexOf(item);\n      if (index !== -1) eventRegister.handlers.splice(index, 1);\n      if (eventRegister.handlers.length === 0) {\n        eventRegister.dispose();\n      }\n    });\n    this.toDispose.push(dispose);\n    return dispose;\n  }\n\n  /**\n   * 监听画布上的浏览器事件\n   */\n  listenPlaygroundEvent(\n    name: PipeEventName,\n    handle: (event: PipeSupportEvent) => boolean | undefined,\n    priority?: number,\n    options?: AddEventListenerOptions\n  ): Disposable {\n    return this._listenEvent(name, handle, false, priority, options);\n  }\n\n  /**\n   * 监听全局的事件\n   * @param name\n   * @param handle\n   */\n  listenGlobalEvent(\n    name: PipeEventName,\n    handle: (event: PipeSupportEvent) => boolean | undefined,\n    priority?: number,\n    options?: AddEventListenerOptions\n  ): Disposable {\n    return this._listenEvent(name, handle, true, priority, options);\n  }\n\n  /**\n   * 注册 layer\n   * @param layerRegistry\n   * @param layerOptions 配置\n   */\n  registerLayer<P extends Layer = Layer>(\n    layerRegistry: LayerRegistry<P>,\n    layerOptions?: P['options']\n  ): void {\n    // layer 不允许重复添加\n    if (this.allLayersMap.has(layerRegistry)) return;\n    const layer = this.layerFactory(layerRegistry, layerOptions);\n    this.allLayersMap.set(layerRegistry, layer);\n    // const ableRegistries = getAbleMetadata(layerRegistry);\n    const entityRegistries = getEntityMetadata(layerRegistry);\n    const entityDataRegistries = getEntityDatasMetadata(layerRegistry);\n    // ableRegistries.forEach(r => this.ableManager.registerAble(r));\n    entityRegistries.forEach((r) => {\n      this.entityManager.registerEntity(r);\n      if (Entity.isRegistryOf(r, ConfigEntity)) {\n        // 自动创建注册的 entity\n        this.entityManager.createEntity(r);\n      }\n    });\n    entityDataRegistries.forEach((r) => {\n      this.entityManager.registerEntity(r.entity);\n      this.entityManager.registerEntityData(r.data);\n    });\n    // this.selector.subscribeAVbles(layer, ableRegistries);\n    this.selector.subscribeEntities(layer, entityRegistries);\n    entityDataRegistries.forEach((r) =>\n      this.selector.subscribleEntityByData(layer, r.entity, r.data)\n    );\n    layer.observeManager = new PipelineEntitiesImpl(this.entityManager);\n    // layer.commands = this.commands;\n    // layer.menus = this.menus;\n    // layer.keybindings = this.keybindings;\n    // layer.selectionService = this.selectionService;\n    layer.reloadEntities = () => {\n      const result = this.selector.getLayerData(layer);\n      if (result.changed) {\n        (layer.observeManager as PipelineEntitiesImpl).load(\n          result.observeEntities,\n          result.observeDatas\n        );\n      }\n      return result.changed;\n    };\n    // layer.dispatch = (payloadKey: string | symbol, payloadValue: object, cb?: () => void) => {\n    //   const changedEntities = this.dispatcher.dispatch(payloadKey, payloadValue);\n    //   if (cb) {\n    //     if (changedEntities.length > 0) {\n    //       const changed = layer.reloadEntities();\n    //       if (changed && layer.autorun) layer.autorun();\n    //     }\n    //     cb();\n    //   }\n    // };\n    // @ts-ignore\n    layer.listenPlaygroundEvent = this.listenPlaygroundEvent.bind(this);\n    // @ts-ignore\n    layer.listenGlobalEvent = this.listenGlobalEvent.bind(this);\n    layer.config = this.configEntity;\n    layer.getOtherLayer = this.getLayer.bind(this);\n    Object.defineProperty(layer, 'isFocused', {\n      get: () => this._isFocused,\n    });\n    if (layer.onResize) {\n      this.onResize(layer.onResize.bind(layer));\n    }\n    if (layer.onBlur) {\n      this.onBlurEmitter.event(layer.onBlur.bind(layer));\n    }\n    if (layer.onFocus) {\n      this.onFocusEmitter.event(layer.onFocus.bind(layer));\n    }\n    if (layer.onZoom) {\n      this.onZoomEmitter.event(layer.onZoom.bind(layer));\n    }\n    if (layer.onScroll) {\n      this.onScrollEmitter.event(layer.onScroll.bind(layer));\n    }\n    if (layer.onViewportChange) {\n      const viewportChange = layer.onViewportChange.bind(layer);\n      this.onResize(viewportChange);\n      this.onZoomEmitter.event(viewportChange);\n      this.onScrollEmitter.event(viewportChange);\n    }\n    if (layer.onReadonlyOrDisabledChange) {\n      this.configEntity.onReadonlyOrDisabledChange(layer.onReadonlyOrDisabledChange.bind(layer));\n    }\n    this.renderer.addLayer(layer);\n  }\n\n  /**\n   * 获取 layer\n   */\n  getLayer<T extends Layer>(layerRegistry: LayerRegistry<T>): T | undefined {\n    return this.allLayersMap.get(layerRegistry) as T;\n  }\n\n  get configEntity(): PlaygroundConfigEntity {\n    return this.entityManager.getEntity<PlaygroundConfigEntity>(PlaygroundConfigEntity, true)!;\n  }\n\n  ready(): void {\n    const config = this.configEntity;\n    let lastScale = config.finalScale;\n    let lastScroll = config.scrollData;\n    // 监听 zoom\n    config.onConfigChanged(() => {\n      /* v8 ignore next 10 */\n      const newScale = config.finalScale;\n      const newScroll = config.scrollData;\n      if (newScale !== lastScale) {\n        lastScale = newScale;\n        if (process.env.NODE_ENV === 'test') {\n          this.processMessage(zoomMessage);\n        } else {\n          MessageLoop.postMessage(this, zoomMessage);\n        }\n      }\n      if (lastScroll.scrollX !== newScroll.scrollX || lastScroll.scrollY !== newScroll.scrollY) {\n        lastScroll = newScroll;\n        if (process.env.NODE_ENV === 'test') {\n          this.processMessage(scrollMessage);\n        } else {\n          MessageLoop.postMessage(this, scrollMessage);\n        }\n      }\n    });\n  }\n\n  processMessage(msg: Message): void {\n    const config = this.configEntity;\n    switch (msg.type) {\n      case PipelineMessage.SCROLL:\n        this.onScrollEmitter.fire(config.scrollData);\n        break;\n      case PipelineMessage.ZOOM:\n        this.onZoomEmitter.fire(config.finalScale);\n        break;\n      default:\n    }\n  }\n\n  /**\n   * pipline 大小变化时候会触发\n   */\n  readonly onResize = this.onResizeEmitter.event;\n\n  dispose(): void {\n    this.toDispose.dispose();\n  }\n}\n","import React from 'react';\nimport { Disposable, Emitter } from '@flowgram.ai/utils';\nimport { ConfigEntity, EntityOpts } from '../../../common';\nimport type { PlaygroundConfigEntity } from './playground-config-entity';\n\n/**\n * 编辑态\n */\nexport interface EditorState {\n  id: string;\n  disabled?: boolean | ((config: PlaygroundConfigEntity) => boolean);\n  cursor?: string; // 光标类型\n  shortcut?: string; // 快捷键\n  shortcutAutoEsc?: boolean; // 点击快捷键后自动退出到默认\n  // 仅在状态发生变化时，当前快捷键才会生效\n  shortcutWorksOnlyOnStateChanged?: boolean;\n  handle?: (config: PlaygroundConfigEntity, e?: EditorStateChangeEvent) => void; // 触发逻辑\n  disableSelector?: boolean; // 切换后会把选择器隐藏了\n  cancelMode:\n    | 'esc' // 按住 esc 则退\n    | 'once' // 触发一次后则退出\n    | 'hold' // 点击会保持该状态\n  onEsc?: (config: PlaygroundConfigEntity, e?: KeyboardEvent) => void;\n}\n\nexport namespace EditorState {\n  export const STATE_SELECT: EditorState = {\n    id: 'STATE_SELECT',\n    cursor: '',\n    shortcut: '',\n    cancelMode: 'hold',\n  };\n\n  /** 鼠标友好模式状态 */\n  export const STATE_MOUSE_FRIENDLY_SELECT: EditorState = {\n    id: 'STATE_MOUSE_FRIENDLY_SELECT',\n    cursor: 'grab', // 初始为小手状态\n    shortcut: '',\n    cancelMode: 'hold',\n  };\n\n  export const STATE_GRAB: EditorState = {\n    id: 'STATE_GRAB',\n    cursor: 'grab',\n    shortcut: 'SPACE', // 如果是鼠标模式，这里不用按住 SPACE 就可以拖动\n    shortcutAutoEsc: true,\n    shortcutWorksOnlyOnStateChanged: true,\n    cancelMode: 'hold',\n  };\n}\nexport const EDITOR_STATE_DEFAULTS: EditorState[] = [\n  EditorState.STATE_SELECT,\n  EditorState.STATE_MOUSE_FRIENDLY_SELECT,\n  EditorState.STATE_GRAB,\n];\n\nexport interface EditorStateChangeEvent {\n  state: EditorState;\n  event?: React.MouseEvent;\n  lastState?: EditorState;\n}\n\n/**\n * 编辑状态管理\n */\nexport class EditorStateConfigEntity extends ConfigEntity {\n  static type = 'EditorStateConfigEntity';\n\n  private _isPressingSpaceBar: boolean = false;\n  private _isPressingShift: boolean = false;\n\n  protected states = EDITOR_STATE_DEFAULTS.slice();\n\n  protected selected: string = EditorState.STATE_SELECT.id;\n\n  protected onStateChangeEmitter = new Emitter<EditorStateChangeEvent>();\n\n  readonly onStateChange = this.onStateChangeEmitter.event;\n\n  constructor(opts: EntityOpts) {\n    super(opts);\n    this.toDispose.push(this.onStateChangeEmitter);\n  }\n\n  get isPressingSpaceBar(): boolean {\n    return this._isPressingSpaceBar;\n  }\n\n  set isPressingSpaceBar(isPressing: boolean) {\n    this._isPressingSpaceBar = isPressing;\n  }\n\n  get isPressingShift(): boolean {\n    return this._isPressingShift;\n  }\n\n  set isPressingShift(isPressing: boolean) {\n    this._isPressingShift = isPressing;\n  }\n\n  /**\n   * 取消指定状态后触发\n   * @param stateId\n   * @param fn\n   */\n  onCancel(stateId: string, fn: () => void): Disposable {\n    return this.onStateChange(e => {\n      if (e.lastState && e.lastState.id === stateId) {\n        fn();\n      }\n    });\n  }\n\n  getCurrentState(): EditorState | undefined {\n    return this.states.find(s => s.id === this.selected);\n  }\n\n  is(stateId: string): boolean {\n    return this.selected === stateId;\n  }\n\n  changeState(stateId: string, event?: React.MouseEvent): void {\n    const state = this.states.find(s => s.id === stateId);\n    if (!state) throw new Error(`Unknown editor state ${stateId}`);\n    if (this.selected !== stateId) {\n      const lastState = this.getCurrentState();\n      this.selected = stateId;\n      this.onStateChangeEmitter.fire({ state, event, lastState });\n      this.fireChange();\n    }\n  }\n\n  toDefaultState(): void {\n    this.changeState(EditorState.STATE_SELECT.id);\n  }\n\n  registerState(state: EditorState): void {\n    this.states.push(state);\n    // this.sortStates();\n    this.fireChange();\n  }\n\n  getStates(): EditorState[] {\n    return this.states;\n  }\n\n  /**\n   * 是否为鼠标友好模式\n   */\n  isMouseFriendlyMode(): boolean {\n    return this.getCurrentState() === EditorState.STATE_MOUSE_FRIENDLY_SELECT;\n  }\n\n\n  getStateFromShortcut(e: KeyboardEvent): EditorState | undefined {\n    return this.states.find(s => {\n      const shortcut =\n        s.shortcut === 'SPACE' ? ' ' : (s.shortcut || '').toLowerCase();\n      if (shortcut === e.key.toLowerCase()) {\n        return s;\n        // switch (e.key.toLowerCase()) {\n        //   case '=':\n        //   case '-':\n        //   case '0':\n        //     if (e.ctrlKey) {\n        //       return s;\n        //     }\n        //     break;\n        //   default:\n        //     return s;\n        // }\n      }\n      return undefined;\n    });\n  }\n}\n","import { Disposable, domUtils, Emitter, PromiseDeferred, Rectangle } from '@flowgram.ai/utils'\nimport {\n  ConfigEntity,\n  Entity,\n  PositionData,\n  PositionSchema,\n  SizeData,\n  SizeSchema,\n  TransformData,\n} from '../../../common'\nimport { startTween } from '../../utils'\n// import { Selectable } from '../../able'\n\nexport interface PlaygroundConfigEntityData {\n  scrollX: number // 滚动 x\n  scrollY: number // 滚动 y\n  originX: number // 左上角默认开始的原点坐标\n  originY: number // 左上角默认开始原点坐标\n  width: number // 编辑区宽，在 onResize 触发后重制\n  height: number // 编辑区高，在 onResize 触发后重制\n  clientX: number // 如果有拖拽场景需要传入\n  clientY: number // 如果有拖拽场景需要传入\n  reverseScroll: boolean // 支持反方向滚动\n  overflowX: 'hidden' | 'scroll'\n  overflowY: 'hidden' | 'scroll'\n  minZoom: number // 最大\n  maxZoom: number //  最小\n  zoom: number // 缩放比\n  scrollLimitX?: number // 水平滚动限制\n  scrollLimitY?: number // 垂直滚动限制\n  mouseScrollDelta?: number | ((zoom: number) => number); // 鼠标滚动时的 delta 值\n  pageBounds?: { x: number; y: number; width: number; height: number } // 编辑的画布边框，用于处理外部对齐问题\n  disabled: boolean // 禁用状态\n  readonly: boolean // readonly 状态\n  grabDisable: boolean // 禁用抓取拖拽画布能力\n}\n\nexport interface PlaygroundConfigRevealOpts {\n  entities?: Entity[]\n  position?: PositionSchema // 滚动到指定位置，并居中\n  bounds?: Rectangle // 滚动的 bounds\n  // selection?: boolean 是否回到选择器所在位置，默认 true\n  scrollDelta?: PositionSchema\n  zoom?: number // 需要缩放的比例\n  easing?: boolean // 是否开启缓动，默认开启\n  easingDuration?: number // 默认 500 ms\n  scrollToCenter?: boolean // 是否滚动到中心\n}\nexport const SCALE_WIDTH = 0\n\n/** 鼠标缩放 delta */\nexport const MOUSE_SCROLL_DELTA = 0.05;\nexport type PlaygroundScrollLimitFn = (scroll: { scrollX: number; scrollY: number }) => {\n  scrollX: number\n  scrollY: number\n}\nexport type Cursors = Record<string, string>;\n/**\n * 全局画布的配置信息\n */\nexport class PlaygroundConfigEntity extends ConfigEntity<PlaygroundConfigEntityData> {\n  static type = 'PlaygroundConfigEntity'\n\n  public getCursors: (() => Cursors | undefined) | undefined;\n  private _loading = false\n  private _zoomEnable = true\n\n  private _scrollLimitFn?: PlaygroundScrollLimitFn\n\n  private _onReadonlyOrDisabledChangeEmitter = new Emitter<{ readonly: boolean, disabled: boolean }>()\n  private _onGrabDisableChangeEmitter = new Emitter<boolean>()\n  readonly onGrabDisableChange = this._onGrabDisableChangeEmitter.event;\n  readonly onReadonlyOrDisabledChange = this._onReadonlyOrDisabledChangeEmitter.event\n\n  cursor = 'default'\n  constructor(opts: any) {\n    super(opts);\n    this.toDispose.push(this._onReadonlyOrDisabledChangeEmitter)\n  }\n\n  /**\n   * 是否禁用抓取拖拽画布能力\n   */\n  get grabDisable(): boolean {\n    return this.config.grabDisable;\n  }\n\n  /**\n   * 是否禁用抓取拖拽画布能力\n   */\n  set grabDisable(grabDisable: boolean) {\n    this.updateConfig({\n      grabDisable\n    })\n  }\n  getDefaultConfig(): PlaygroundConfigEntityData {\n    return {\n      scrollX: 0,\n      scrollY: 0,\n      originX: 0,\n      originY: 0,\n      width: 0,\n      height: 0,\n      minZoom: 0.1,\n      maxZoom: 2,\n      zoom: 1,\n      clientX: 0,\n      clientY: 0,\n      reverseScroll: true,\n      overflowX: 'scroll',\n      overflowY: 'scroll',\n      disabled: false,\n      readonly: false,\n      grabDisable: false,\n      mouseScrollDelta: MOUSE_SCROLL_DELTA\n    }\n  }\n\n  /**\n   * 添加滚动限制逻辑\n   * @param fn\n   */\n  addScrollLimit(fn: PlaygroundScrollLimitFn): void {\n    this._scrollLimitFn = fn\n  }\n\n  /**\n   * 更新实体配置\n   * @param props\n   */\n  updateConfig(props: Partial<PlaygroundConfigEntityData>): void {\n    if (props.zoom !== undefined) {\n      props = { ...props, zoom: this.normalizeZoom(props.zoom) }\n    }\n    props = { ...this.config, ...props }\n    if (!props.reverseScroll) {\n      if (props.scrollX! < this.config.originX) {\n        props.scrollX = this.config.originX\n      }\n      if (props.scrollY! < this.config.originY) {\n        props.scrollY = this.config.originY\n      }\n    }\n    if (props.scrollLimitX !== undefined && props.scrollX! < props.scrollLimitX) {\n      props.scrollX = props.scrollLimitX\n    }\n    if (props.scrollLimitY !== undefined && props.scrollY! < props.scrollLimitY) {\n      props.scrollY = props.scrollLimitY\n    }\n    if (props.overflowX === 'hidden') {\n      props.scrollX = this.config.originX\n    }\n    if (props.overflowY === 'hidden') {\n      props.scrollY = this.config.originY\n    }\n    const { readonly, disabled, grabDisable } = this\n    super.updateConfig(\n      this._scrollLimitFn\n        ? { ...props, ...this._scrollLimitFn({ scrollX: props.scrollX!, scrollY: props.scrollY! }) }\n        : props\n    )\n    const readonlyOrDisableChanged = readonly !== this.readonly || disabled !== this.disabled\n    if (readonlyOrDisableChanged) this._onReadonlyOrDisabledChangeEmitter.fire({ readonly: this.readonly, disabled: this.disabled })\n    if (grabDisable !== this.grabDisable) this._onGrabDisableChangeEmitter.fire(this.grabDisable)\n  }\n\n  /**\n   * 缩放比例\n   * 使用 zoom 替代\n   * @deprecated\n   */\n  get finalScale(): number {\n    if (!this.zoomEnable) return 1\n    return this.config.zoom\n  }\n\n  /**\n   * 缩放比例\n   */\n  get zoom(): number {\n    if (!this.zoomEnable) return 1\n    return this.config.zoom\n  }\n\n  get scrollData(): { scrollX: number; scrollY: number } {\n    return {\n      scrollX: this.config.scrollX,\n      scrollY: this.config.scrollY,\n    }\n  }\n\n  protected normalizeZoom(zoom: number): number {\n    if (!this.zoomEnable) return 1\n    if (zoom < this.config.minZoom) {\n      zoom = this.config.minZoom\n    } else if (zoom > this.config.maxZoom) {\n      zoom = this.config.maxZoom\n    }\n    return zoom\n  }\n\n  /**\n   * 修改画布光标\n   * @param cursor\n   */\n  updateCursor(cursor: string): void {\n    if (this.cursor !== cursor) {\n      this.cursor = cursor\n      this.fireChange()\n    }\n  }\n\n  /**\n   * 获取相对画布的位置\n   * @param event\n   * @param widthScale 是否要计算缩放\n   */\n  getPosFromMouseEvent(\n    event: { clientX: number; clientY: number },\n    withScale = true\n  ): PositionSchema {\n    const { config } = this\n    const scale = withScale ? this.finalScale : 1\n    return {\n      x: (event.clientX + config.scrollX - config.clientX) / scale,\n      y: (event.clientY + config.scrollY - config.clientY) / scale,\n    }\n  }\n\n  /**\n   * 将画布中的位置转成相对 window 的位置\n   * @param pos\n   */\n  toFixedPos(pos: PositionSchema): PositionSchema {\n    const { config } = this\n    return {\n      x: pos.x - config.scrollX + config.clientX,\n      y: pos.y - config.scrollY + config.clientY,\n    }\n  }\n\n  /**\n   * 获取可视区域\n   */\n  getViewport(withScale: boolean = true): Rectangle {\n    const { config } = this\n    const scale = withScale ? this.finalScale : 1\n    return new Rectangle(\n      config.scrollX / scale,\n      config.scrollY / scale,\n      config.width / scale,\n      config.height / scale\n    )\n  }\n\n  /**\n   * 判断矩形是否在可视区域，如果有擦边页代表在可是区域\n   * @param bounds\n   * @param rotation\n   * @param includeAll - 是否包含在里边，默认 false\n   */\n  isViewportVisible(bounds: Rectangle, rotation: number = 0, includeAll: boolean = false): boolean {\n    return Rectangle.isViewportVisible(bounds, this.getViewport(), rotation, includeAll)\n  }\n\n  /**\n   * 按下边顺序执行\n   * 1. 指定的 entity 位置或 pos 位置\n   * 3. 初始化位置\n   */\n  scrollToView(opts: PlaygroundConfigRevealOpts = {}): Promise<void> {\n    const {\n      scrollDelta,\n      position: pos,\n      // selection = true,\n      easing = true,\n      easingDuration = 300,\n      entities,\n    } = opts\n    const { config } = this\n    const scale = opts.zoom ? opts.zoom : this.finalScale\n    let bounds: Rectangle | undefined\n    if (entities && entities.length > 0) {\n      const entitiesBounds = entities\n        .map((e) => {\n          const transform = e.getData<TransformData>(TransformData)\n          if (transform) return transform.bounds\n          const position = e.getData<PositionData>(PositionData)\n          const size = e.getData<SizeData>(SizeData) || { width: 0, height: 0 }\n          if (!position) return\n          return new Rectangle(position.x, position.y, size.width, size.height || 0)\n        })\n        .filter((e) => !!e) as Rectangle[]\n      if (entitiesBounds.length > 0) {\n        bounds = Rectangle.enlarge(entitiesBounds)\n      }\n    } else if (pos) {\n      bounds = new Rectangle(pos.x, pos.y, 0, 0)\n    } else if (opts.bounds) {\n      bounds = opts.bounds\n    } // else if (selection) {\n      // bounds = Selectable.getSelectedBounds(this.entityManager)\n    // }\n    if (!bounds) {\n      const defaultConfig = this.getDefaultConfig()\n      bounds = new Rectangle(\n        (defaultConfig.scrollX + config.width / 2) / scale,\n        (defaultConfig.scrollY + config.height / 2) / scale,\n        0,\n        0\n      )\n    }\n    if (!opts.scrollToCenter) {\n      const boundsVisible = this.getViewport()\n      // 判断是否看得见\n      if (boundsVisible.containsRectangle(bounds)) {\n        return Promise.resolve()\n      }\n    }\n    // TODO 微调滚动，而不是直接滚动到中心\n    const toValues = {\n      scrollX:\n        (bounds.x + bounds.width / 2 + (scrollDelta ? scrollDelta.x : 0)) * scale -\n        config.width / 2,\n      scrollY:\n        (bounds.y + bounds.height / 2 + (scrollDelta ? scrollDelta.y : 0)) * scale -\n        config.height / 2,\n      zoom: opts.zoom,\n    }\n    return this.scroll(toValues, easing, easingDuration)\n  }\n\n  /**\n   * 这只画布边框，元素编辑的时候回吸附画布边框\n   * @param bounds\n   */\n  setPageBounds(bounds: Rectangle): void {\n    this.updateConfig({\n      pageBounds: {\n        x: bounds.x,\n        y: bounds.y,\n        width: bounds.width,\n        height: bounds.height,\n      },\n    })\n  }\n\n  getPageBounds(): Rectangle | undefined {\n    const { pageBounds } = this.config\n    if (pageBounds) {\n      return new Rectangle(pageBounds.x, pageBounds.y, pageBounds.width, pageBounds.height)\n    }\n  }\n\n  /**\n   * 滚动到画布中央\n   * @param zoomToFit 是否缩放并适配外围大小\n   * @param fitPadding 适配外围的留白\n   * @param easing 是否缓动\n   */\n  scrollPageBoundsToCenter(\n    zoomToFit: boolean = true,\n    fitPadding = 16,\n    easing = true\n  ): Promise<void> {\n    const pageBounds = this.getPageBounds()\n    if (pageBounds) {\n      let zoom: number | undefined\n      const fitPaddingDouble = fitPadding * 2\n      if (zoomToFit) {\n        const fixedScale = SizeSchema.fixSize(\n          {\n            width: pageBounds.width,\n            height: pageBounds.height,\n          },\n          {\n            width:\n              fitPaddingDouble > this.config.width\n                ? fitPaddingDouble\n                : this.config.width - fitPaddingDouble,\n            height:\n              fitPaddingDouble > this.config.height\n                ? fitPaddingDouble\n                : this.config.height - fitPaddingDouble,\n          }\n        )\n        zoom = fixedScale\n      }\n      return this.scrollToView({\n        bounds: pageBounds,\n        zoom,\n        scrollToCenter: true,\n        // selection: false,\n        easing,\n      })\n    }\n    return this.scrollToView({ easing })\n  }\n\n  private cancelScrollTeeen?: Disposable\n\n  /**\n   * 滚动\n   * @param scroll\n   * @param easing - 是否开启缓动，默认开启\n   * @param easingDuration - 滚动持续时间，默认 300ms\n   */\n  scroll(\n    scroll: Partial<{ scrollX: number; scrollY: number; zoom: number }>,\n    easing: boolean = true,\n    easingDuration = 300\n  ): Promise<void> {\n    const deferred = new PromiseDeferred<void>()\n    if (this.cancelScrollTeeen) this.cancelScrollTeeen.dispose()\n    if (easing) {\n      const fromValues = {\n        scrollX: this.config.scrollX,\n        scrollY: this.config.scrollY,\n        zoom: this.config.zoom,\n      }\n      this.cancelScrollTeeen = startTween({\n        from: fromValues,\n        to: {\n          ...fromValues,\n          ...scroll,\n        },\n        onUpdate: (v) => {\n          this.updateConfig(v)\n        },\n        onComplete: () => {\n          this.cancelScrollTeeen = undefined\n          deferred.resolve()\n        },\n        onDispose: () => {\n          deferred.resolve()\n        },\n        duration: easingDuration,\n      })\n    } else {\n      this.updateConfig(scroll)\n      deferred.resolve()\n    }\n    return deferred.promise\n  }\n\n  /**\n   * 让 layer 的 node 节点不随着画布滚动条滚动\n   * @param layerNode\n   */\n  fixLayerPosition(layerNode: HTMLElement): void {\n    domUtils.setStyle(layerNode, {\n      left: this.config.scrollX,\n      top: this.config.scrollY,\n    })\n  }\n\n  get loading(): boolean {\n    return this._loading\n  }\n\n  set loading(loading: boolean) {\n    if (this.loading !== loading) {\n      this._loading = loading\n      this.fireChange()\n    }\n  }\n\n  get zoomEnable(): boolean {\n    return this._zoomEnable\n  }\n\n  /**\n   * 开启缩放\n   * @param zoomEnable\n   */\n  set zoomEnable(zoomEnable: boolean) {\n    if (this._zoomEnable !== zoomEnable) {\n      this._zoomEnable = zoomEnable\n      this.fireChange()\n    }\n  }\n\n  /**\n   * 放大\n   */\n  zoomin(easing?: boolean, easingDuration?: number): void {\n    const unit = this.config.zoom / 10\n    const newZoom = Math.ceil((this.config.zoom + unit) * 10) / 10\n    this.updateZoom(newZoom, easing, easingDuration)\n  }\n\n  /**\n   * 缩小\n   */\n  zoomout(easing?: boolean, easingDuration?: number): void {\n    const unit = this.config.zoom / 10\n    const newZoom = Math.floor((this.config.zoom - unit) * 10) / 10\n    this.updateZoom(newZoom, easing, easingDuration)\n  }\n\n  updateZoom(newZoom: number, easing: boolean = true, easingDuration = 200): void {\n    newZoom = this.normalizeZoom(newZoom)\n    const { center } = this.getViewport()\n    const oldScale = this.finalScale\n    const newScale = !this.zoomEnable ? oldScale : newZoom\n    if (newScale !== oldScale) {\n      const delta = {\n        x: center.x * newScale - center.x * oldScale,\n        y: center.y * newScale - center.y * oldScale,\n      }\n      this.scroll(\n        {\n          scrollX: this.config.scrollX + delta.x,\n          scrollY: this.config.scrollY + delta.y,\n          zoom: newZoom,\n        },\n        easing,\n        easingDuration\n      )\n    }\n  }\n  get disabled(): boolean {\n    return this.config.disabled\n  }\n  get readonly(): boolean {\n    return this.config.readonly\n  }\n  get readonlyOrDisabled(): boolean {\n    return this.config.readonly || this.config.disabled\n  }\n  set readonly(readonly) {\n    this.updateConfig({\n      readonly\n    })\n  }\n  set disabled(disabled) {\n    this.updateConfig({\n      disabled\n    })\n  }\n\n  /**\n   * 适应大小\n   * @param bounds 目标大小\n   * @param easing 是否开启动画，默认开启\n   * @param padding 边界空白\n   */\n  fitView(bounds: Rectangle, easing = true, padding = 0): Promise<void> {\n    const viewport = this.getViewport(false);\n    const zoom = SizeSchema.fixSize(bounds.pad(padding, padding), viewport);\n    return this.scrollToView({\n      bounds,\n      zoom,\n      easing,\n      scrollToCenter: true,\n    });\n\n  }\n}\n","import { inject, injectable } from 'inversify';\nimport {\n  type CacheManager,\n  type Disposable,\n  DisposableCollection,\n  type DOMCache,\n  domUtils,\n} from '@flowgram.ai/utils';\n\n// import { Adsorber } from '../utils/adsorber';\n// import { PlaygroundDrag, type PlaygroundDragEntitiesOpts } from '../utils';\nimport { type PipelineEntities } from '../pipeline/pipeline-entities';\nimport { type PipeEventName, type PipelineDimension, type PipeSupportEvent } from '../pipeline';\nimport {\n  EntityManager,\n  injectPlaygroundContext,\n  PlaygroundContext,\n  type PositionSchema,\n} from '../../common';\n// import { SelectionService } from '@flowgram.ai/application-common';\nimport { type PlaygroundConfigEntity } from './config';\n\nexport interface LayerOptions {}\n\nexport const LayerOptions = Symbol('LayerOptions');\n\n/**\n * 基础 layer\n */\n@injectable()\nexport class Layer<\n  OPT extends LayerOptions = any,\n  CONTEXT extends PlaygroundContext = PlaygroundContext\n> {\n  /**\n   * layer 的配置, 由 registerLayer(Layer, LayerOptions) 传入\n   */\n  @inject(LayerOptions) options: OPT;\n\n  protected readonly toDispose = new DisposableCollection();\n\n  /**\n   * layer 可能存在 dom 也可能没有，如果有，则会加入到 pipeline 的 dom 节点上\n   */\n  node: HTMLElement;\n\n  /**\n   * 父节点\n   */\n  pipelineNode: HTMLElement;\n\n  /**\n   * 画布根节点\n   */\n  playgroundNode: HTMLElement;\n\n  // /**\n  //  * 发送 payload\n  //  * @param payloadKey\n  //  * @param payloadValue\n  //  * @param cb - layer 触发 autorun 后的回调\n  //  */\n  // dispatch<P>(payloadKey: string | symbol, payloadValue: P, cb?: () => void): void {}\n\n  /**\n   * 当前 layer 的所有监听的实体数据\n   */\n  observeManager: PipelineEntities;\n\n  /**\n   * 实体管理器\n   */\n  @inject(EntityManager) readonly entityManager: EntityManager;\n\n  @injectPlaygroundContext() readonly context: CONTEXT;\n\n  /**\n   * 自动触发更新，在不需要 react 的时候用这个方法\n   */\n  autorun?(): void;\n\n  /**\n   * 绘制 react\n   */\n  render?(): JSX.Element;\n\n  /**\n   * 默认在渲染时候都会启用 react memo 进行隔离，这种情况就需要数据驱动更新\n   */\n  renderWithReactMemo = true;\n\n  /**\n   * 全局选择\n   */\n  // selectionService?: SelectionService;\n  /**\n   * 监听 playground 上的事件\n   * 规则：\n   *  1. 按 priority 排序，越高先执行\n   *  2. 没有提供，按 layer 的注册顺序，后注册先执行 (符合冒泡排序)\n   *  3. 执行返回 true，则阻止后续的执行\n   */\n  listenPlaygroundEvent: (\n    name: PipeEventName,\n    handle: (event: PipeSupportEvent) => boolean | void,\n    priority?: number,\n    options?: AddEventListenerOptions\n  ) => Disposable;\n\n  /**\n   * 监听 document 上的事件\n   * 规则：\n   *  1. 按 priority 排序，越高先执行\n   *  2. 没有提供，按 layer 的注册顺序，后注册先执行 (符合冒泡排序)\n   *  3. 执行返回 true，则阻止后续的执行\n   */\n  listenGlobalEvent: (\n    name: PipeEventName,\n    handle: (event: PipeSupportEvent) => boolean | void,\n    priority?: number,\n    options?: AddEventListenerOptions\n  ) => Disposable;\n\n  /**\n   * 初始化时候触发\n   */\n  onReady?(): void;\n\n  /**\n   * playground 大小变化时候会触发\n   */\n  onResize?(size: PipelineDimension): void;\n\n  /**\n   * playground focus 时候触发\n   */\n  onFocus?(): void;\n\n  /**\n   * playground blur 时候触发\n   */\n  onBlur?(): void;\n\n  /**\n   * 监听缩放\n   */\n  onZoom?(zoom: number): void;\n\n  /**\n   * 监听滚动\n   */\n  onScroll?(scroll: { scrollX: number; scrollY: number }): void;\n\n  /**\n   * viewport 更新触发\n   */\n  onViewportChange?(): void;\n\n  /**\n   * readonly 或 disable 状态变化\n   * @param state\n   */\n  onReadonlyOrDisabledChange?(state: { disabled: boolean; readonly: boolean }): void;\n\n  /**\n   * playground 是否 focused\n   */\n  readonly isFocused: boolean;\n\n  /**\n   * 销毁\n   */\n  dispose(): void {\n    this.toDispose.dispose();\n  }\n\n  /**\n   * 创建 dom 缓冲池\n   * @param className\n   */\n  createDOMCache<T extends DOMCache>(\n    className: string | (() => HTMLElement),\n    children?: string\n  ): CacheManager<T> {\n    if (!this.node) throw new Error('DomCache need a parent dom node.');\n    return domUtils.createDOMCache<T>(this.node, className, children);\n  }\n\n  /**\n   * 加载 layer 注册的实体数据，内部使用，不需要手动触发\n   * @return 数据是否变化\n   */\n  declare reloadEntities: () => boolean;\n\n  // /**\n  //  * 在画布上拖动实体\n  //  */\n  // startDrag<T>(\n  //   clientX: number,\n  //   clientY: number,\n  //   opts: PlaygroundDragEntitiesOpts<T> = {},\n  // ): Disposable {\n  //   const adsorbRefs = Adsorber.getRefsFromEntities(\n  //     this.entityManager,\n  //     opts.entities || [],\n  //     this.config,\n  //   );\n  //   return PlaygroundDrag.startDrag(clientX, clientY, {\n  //     ...opts,\n  //     adsorbRefs,\n  //     config: this.config,\n  //   });\n  // }\n\n  /**\n   * 全局画布配置\n   */\n  config: PlaygroundConfigEntity;\n\n  /**\n   * 获取鼠标在 Playground 的位置\n   */\n  getPosFromMouseEvent(\n    event: { clientX: number; clientY: number },\n    addScale = true\n  ): PositionSchema {\n    const pos = this.config.getPosFromMouseEvent(event, addScale);\n    return {\n      x: pos.x,\n      y: pos.y,\n    };\n  }\n\n  /**\n   * 可以用于获取别的 layer\n   */\n  getOtherLayer: <T extends Layer>(layerRegistry: LayerRegistry<T>) => T | undefined;\n}\n\nexport interface LayerRegistry<P extends Layer = Layer> {\n  new (): P;\n}\n","import { inject, injectable, optional } from 'inversify';\nimport { Disposable, domUtils } from '@flowgram.ai/utils';\n\nimport { Gesture } from '../utils/use-gesture';\nimport { PlaygroundGesture } from '../utils/playground-gesture';\nimport { PlaygroundDrag } from '../utils';\nimport { type PipelineDimension, PipelineLayerPriority } from '../pipeline';\nimport { ProtectWheelArea } from '../../common/protect-wheel-area';\nimport { observeEntity } from '../../common';\nimport { Layer, LayerOptions } from './layer';\nimport {\n  EditorState,\n  type EditorStateChangeEvent,\n  EditorStateConfigEntity,\n  PlaygroundConfigEntity,\n  type PlaygroundConfigEntityData,\n  MOUSE_SCROLL_DELTA,\n} from './config';\n\n/**\n * MOUSE: 鼠标友好模式，鼠标左键拖动画布，滚动缩放 (适合 windows )\n * PAD: 双指同向移动拖动，双指张开捏合缩放 (适合 mac)\n */\nexport type PlaygroundInteractiveType = 'MOUSE' | 'PAD';\n\nexport interface PlaygroundLayerOptions extends LayerOptions {\n  /**\n   * 阻止浏览器默认的手势（苹果触摸板），包含：放大缩小、左右滑动翻页，默认为 false\n   */\n  preventGlobalGesture?: boolean;\n\n  ineractiveType?: PlaygroundInteractiveType;\n\n  /** 悬浮服务 */\n  hoverService?: {\n    /** 精确判断当前鼠标位置是否有元素存在 */\n    isSomeHovered: () => boolean;\n  };\n}\n\n/**\n * 基础层，控制画布缩放/滚动等操作\n */\n@injectable()\nexport class PlaygroundLayer extends Layer<PlaygroundLayerOptions> {\n  @observeEntity(PlaygroundConfigEntity)\n  protected playgroundConfigEntity: PlaygroundConfigEntity;\n\n  @observeEntity(EditorStateConfigEntity)\n  protected editorStateConfig: EditorStateConfigEntity;\n\n  @optional()\n  @inject(ProtectWheelArea)\n  protectWheelArea?: ProtectWheelArea;\n\n  private cancelStateListen?: Disposable;\n\n  private lastShortcutState?: EditorState;\n\n  private currentGesture?: PlaygroundGesture;\n\n  private startGrabScroll: { scrollX: number; scrollY: number } = {\n    scrollX: 0,\n    scrollY: 0,\n  };\n\n  private size?: PipelineDimension;\n\n  private cursorStyle: HTMLStyleElement = document.createElement('style');\n\n  private maskNode: HTMLDivElement = document.createElement('div');\n\n  onReady(): void {\n    this.options = {\n      preventGlobalGesture: false,\n      ...this.options,\n    };\n    /**\n     * 阻止默认的浏览器手势缩放\n     */\n    if (this.options.preventGlobalGesture) {\n      const gesturePreventGlobal = new Gesture(document.body, {\n        /* v8 ignore next 3 */\n        onPinch: () => {\n          // Do nothing\n        },\n      });\n      if (document.documentElement) {\n        document.documentElement.style.overscrollBehaviorX = 'none';\n      }\n      document.body.style.overscrollBehaviorX = 'none';\n      this.toDispose.push(Disposable.create(() => gesturePreventGlobal.destroy()));\n    }\n    this.toDispose.pushAll([\n      this.config.onGrabDisableChange((disable) => {\n        if (disable) {\n          this.grabDragger.stop(0, 0);\n        }\n      }),\n      /**\n       * 防止滚动事件被透出到业务层滚动\n       */\n      domUtils.addStandardDisposableListener(this.playgroundNode, 'wheel', (event: WheelEvent) => {\n        // 判断当前 scrollParent，有滚动条则停止滚动\n        if (this.getScrollParent(event.target as HTMLElement)) {\n          return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n      }),\n      /**\n       * 在父节点上监听滚动事件\n       */\n      this.listenPlaygroundEvent(\n        'wheel',\n        this.handleWheelEvent.bind(this),\n        PipelineLayerPriority.BASE_LAYER,\n        { passive: true }\n      ),\n      this.listenPlaygroundEvent(\n        'mousedown',\n        (e: MouseEvent) => {\n          const isMouseCenterButton = e.button === 1;\n\n          // 按住中键，进入拖拽模式，鼠标模式不支持\n          if (isMouseCenterButton && !this.isMouseMode()) {\n            this.editorStateConfig.changeState(EditorState.STATE_GRAB.id);\n          }\n\n          // 触控板模式下，目前支持按住 space 键或者鼠标中键后拖动\n          if (this.isGrab() && (this.editorStateConfig.isPressingSpaceBar || isMouseCenterButton)) {\n            this.grabDragger.start(e.clientX, e.clientY);\n          }\n        },\n        PipelineLayerPriority.BASE_LAYER\n      ),\n      this.listenPlaygroundEvent(\n        'mousedown',\n        (e: MouseEvent) => {\n          const isSomeHovered = this.options?.hoverService?.isSomeHovered();\n\n          // 如果是鼠标优先模式，当前位置不是节点，并且没有按下 shift，才启动拖拽\n          if (this.isMouseMode() && !isSomeHovered && !this.editorStateConfig.isPressingShift) {\n            this.grabDragger.start(e.clientX, e.clientY);\n          }\n        },\n        // 这里必须监听 NORMAL_LAYER，该图层最先触发\n        PipelineLayerPriority.NORMAL_LAYER\n      ),\n\n      this.editorStateConfig.onStateChange(this.onStateChanged.bind(this)),\n\n      // 单独监听 shift 按键\n      // 只有 keydown 能监听到 shift 按键，keypress 无法监听到\n      this.listenGlobalEvent(\n        'keydown',\n        (e: KeyboardEvent) => {\n          if (e.shiftKey) {\n            this.editorStateConfig.isPressingShift = true;\n\n            // 如果是鼠标优先，按住 shift 键需要更新鼠标为默认\n            if (this.isMouseMode()) {\n              this.config.updateCursor('');\n            }\n          }\n        },\n        PipelineLayerPriority.BASE_LAYER\n      ),\n\n      // 监听快捷键\n      this.listenGlobalEvent(\n        'keypress',\n        (e: KeyboardEvent) => {\n          if (!this.isFocused || e.target !== this.playgroundNode) return;\n\n          // PS: 如果是鼠标优先模式，不监听快捷键\n          if (this.isMouseMode()) {\n            return;\n          }\n\n          const state = this.editorStateConfig.getStateFromShortcut(e);\n\n          // 使用场景：\n          // 在按住空格时（进入 grab 模式），此时点击工具栏的手型工具，需禁止退出 grab 模式\n          // 需要让业务侧感知是否按住空格\n          if (e.key === ' ') {\n            this.editorStateConfig.isPressingSpaceBar = true;\n          }\n\n          // 部分状态不允许重复进入\n          if (\n            state?.shortcutWorksOnlyOnStateChanged === true &&\n            state === this.editorStateConfig.getCurrentState()\n          ) {\n            return;\n          }\n\n          this.lastShortcutState = state;\n          if (state) {\n            this.editorStateConfig.changeState(state.id);\n          }\n        },\n        PipelineLayerPriority.BASE_LAYER\n      ),\n      this.listenGlobalEvent('keyup', (e: KeyboardEvent) => {\n        if (e.key === ' ') {\n          this.editorStateConfig.isPressingSpaceBar = false;\n        }\n\n        this.editorStateConfig.isPressingShift = false;\n\n        if (this.lastShortcutState && this.lastShortcutState.shortcutAutoEsc) {\n          this.editorStateConfig.toDefaultState();\n        }\n\n        this.lastShortcutState = undefined;\n      }),\n      {\n        // 在进入 grab 模式后，此时后退页面，需清理样式\n        dispose: () => {\n          if (this.maskNode.parentNode) {\n            this.maskNode.parentNode.removeChild(this.maskNode);\n          }\n          if (this.cursorStyle.parentNode) {\n            this.cursorStyle.parentNode.removeChild(this.cursorStyle);\n          }\n        },\n      },\n    ]);\n    // 切换到鼠标模式\n    if (this.options.ineractiveType === 'MOUSE') {\n      this.editorStateConfig.changeState(EditorState.STATE_MOUSE_FRIENDLY_SELECT.id);\n    }\n  }\n\n  private getCursor(cursor: string | undefined) {\n    if (!cursor) {\n      return '';\n    }\n    return this.playgroundConfigEntity.getCursors?.()?.[cursor] ?? cursor;\n  }\n\n  /** 是否为鼠标优先模式 */\n  private isMouseMode() {\n    return this.editorStateConfig.isMouseFriendlyMode();\n  }\n\n  onStateChanged(e: EditorStateChangeEvent): void {\n    const { state } = e;\n    if (this.cancelStateListen) {\n      this.cancelStateListen.dispose();\n      this.cancelStateListen = undefined;\n    }\n    if (state.handle) {\n      state.handle(this.config, e);\n    }\n    if (state.cursor) {\n      this.playgroundConfigEntity.updateCursor(state.cursor);\n\n      if (this.currentGesture && this.currentGesture.target.parentNode) {\n        (this.currentGesture.target.parentNode as HTMLElement).style.cursor = this.getCursor(\n          state.cursor\n        );\n      }\n    } else {\n      this.playgroundConfigEntity.updateCursor('');\n      if (this.currentGesture && this.currentGesture.target.parentNode) {\n        (this.currentGesture.target.parentNode as HTMLElement).style.cursor = '';\n      }\n    }\n\n    // 避免触发控件交互\n    if (state.cursor === 'grab' || state.cursor === 'grabbing') {\n      // 在鼠标优先交互模式下，应该要允许控件交互，可以选择节点拖动\n      if (state === EditorState.STATE_MOUSE_FRIENDLY_SELECT) {\n        return;\n      }\n\n      this.maskNode.style.cssText = `\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        z-index: 100;\n      `;\n      this.playgroundNode.appendChild(this.maskNode);\n    } else {\n      if (this.maskNode.parentNode) {\n        this.maskNode.parentNode.removeChild(this.maskNode);\n      }\n    }\n    // 按 esc 退出\n    if (state.cancelMode === 'esc') {\n      this.cancelStateListen = domUtils.addStandardDisposableListener(\n        document.body,\n        'keydown',\n        (keyboard: KeyboardEvent) => {\n          if (keyboard.key === 'Escape' || keyboard.key === 'Enter') {\n            this.editorStateConfig.toDefaultState();\n          }\n        },\n        true\n      );\n    } else if (state.cancelMode === 'once') {\n      // 只执行一次\n      this.editorStateConfig.toDefaultState();\n    }\n  }\n\n  protected grabDragger = new PlaygroundDrag({\n    onDragStart: (e) => {\n      if (this.config.grabDisable) return;\n      this.config.updateCursor('grabbing');\n      this.startGrabScroll = {\n        scrollX: this.config.config.scrollX,\n        scrollY: this.config.config.scrollY,\n      };\n    },\n    onDrag: (e) => {\n      if (this.config.grabDisable) return;\n      this.config.updateConfig({\n        scrollX: this.startGrabScroll.scrollX - e.endPos.x + e.startPos.x,\n        scrollY: this.startGrabScroll.scrollY - e.endPos.y + e.startPos.y,\n      });\n    },\n    onDragEnd: (e) => {\n      if (this.isGrab()) {\n        // 可能已经取消了\n        this.config.updateCursor('grab');\n      }\n\n      // 如果拖拽触发自中键，需从拖拽态退出，且重置光标\n      const isMouseCenterButton = e.button === 1;\n      if (isMouseCenterButton) {\n        if (this.isMouseMode()) {\n          this.editorStateConfig.changeState(EditorState.STATE_MOUSE_FRIENDLY_SELECT.id);\n          this.config.updateCursor('grab');\n        } else {\n          this.editorStateConfig.toDefaultState();\n          this.config.updateCursor('');\n        }\n      }\n    },\n  });\n\n  protected isGrab(): boolean {\n    const currentState = this.editorStateConfig.getCurrentState();\n\n    // STATE_GRAB 和 STATE_MOUSE_FRIENDLY_SELECT 都允许拖动\n    return (\n      currentState === EditorState.STATE_GRAB ||\n      currentState === EditorState.STATE_MOUSE_FRIENDLY_SELECT\n    );\n  }\n\n  createGesture(): void {\n    if (!this.currentGesture) {\n      this.currentGesture = new PlaygroundGesture(this.pipelineNode.parentElement!, this.config);\n      this.currentGesture.onDispose(() => {\n        this.currentGesture = undefined;\n      });\n      this.toDispose.push(this.currentGesture);\n    }\n  }\n\n  /**\n   * 监听 resize\n   * @param size\n   */\n  onResize(size: PipelineDimension): void {\n    this.size = { ...size };\n    this.updateSizeWithRulerConfig();\n  }\n\n  updateSizeWithRulerConfig(): void {\n    const { size } = this;\n    if (!size) return;\n    this.config.updateConfig({\n      width: size.width,\n      height: size.height,\n      clientX: size.clientX,\n      clientY: size.clientY,\n    });\n  }\n\n  protected handleScrollEvent(event: WheelEvent): void {\n    const { playgroundConfigEntity } = this;\n    const scrollX = playgroundConfigEntity.config.scrollX + event.deltaX;\n    const scrollY = playgroundConfigEntity.config.scrollY + event.deltaY;\n    const state: Partial<PlaygroundConfigEntityData> = {\n      scrollX,\n      scrollY,\n    };\n    playgroundConfigEntity.updateConfig(state);\n  }\n\n  protected getMouseScaleDelta(): number {\n    const { mouseScrollDelta, zoom } = this.config.config;\n    if (typeof mouseScrollDelta === 'function') {\n      return mouseScrollDelta(zoom);\n    }\n    return mouseScrollDelta ?? MOUSE_SCROLL_DELTA;\n  }\n\n  /**\n   * 监听滚动事件\n   * @param event\n   */\n  protected handleWheelEvent(event: WheelEvent): void {\n    const e = event as any;\n    if ((this.currentGesture && this.currentGesture.pinching) || event.ctrlKey || event.metaKey)\n      return;\n\n    // 判断当前 scrollParent，有滚动条则停止滚动\n    if (this.getScrollParent(event.target as HTMLElement)) {\n      return;\n    }\n\n    // 鼠标优先模式，使用滚轮缩放，并且在当前鼠标位置放大缩小\n    if (this.isMouseMode()) {\n      // 这里没有使用 this.config.zoomin 和 zoomout 方法\n      // 因为这两个方法目前看没有实现居中缩放的效果，且体验有些卡顿\n      const { zoom, minZoom, maxZoom, scrollX, scrollY } = this.playgroundConfigEntity.config;\n\n      // 鼠标模式下，为了避免过快缩放，这里比例相对触控板模式缩小一倍，这个参数从业务侧传过来，同时提供默认值\n      const scaleStep = this.getMouseScaleDelta();\n      const scaleMin = minZoom;\n      const scaleMax = maxZoom;\n\n      // 处理横向和竖向滚轮\n      const getDelta = (wheelDelta: number): number => (wheelDelta > 0 ? -scaleStep : scaleStep);\n\n      // 优先使用垂直滚动，如果垂直滚动为0则使用水平滚动\n      const wheelDelta = Math.abs(e.deltaY) > 0 ? e.deltaY : e.deltaX;\n      const delta = getDelta(wheelDelta);\n\n      const oldScale = this.config.finalScale;\n      const originX = event.clientX;\n      const originY = event.clientY;\n\n      const newScale = Math.max(scaleMin, Math.min(scaleMax, zoom + delta));\n\n      const origin = this.config.getPosFromMouseEvent(\n        { clientX: originX, clientY: originY },\n        false\n      );\n\n      // 计算放大后的位置，鼠标位置居中缩放\n      // 参见 packages-ide-editor/common/core/src/core/utils/playground-gesture.ts\n      const finalPos = {\n        x: (origin.x / oldScale) * newScale,\n        y: (origin.y / oldScale) * newScale,\n      };\n      this.config.updateConfig({\n        scrollX: scrollX + finalPos.x - origin.x,\n        scrollY: scrollY + finalPos.y - origin.y,\n        zoom: newScale,\n      });\n      return;\n    }\n\n    this.handleScrollEvent(e);\n  }\n\n  /**\n   * 获取 wheel 事件滚动的父元素\n   * @param dom\n   */\n  protected getScrollParent(ele?: HTMLElement | null): HTMLElement | null {\n    if (!ele || ele === this.pipelineNode.parentElement) {\n      return null;\n    }\n\n    const hasScrollableXContent = ele.scrollWidth > ele.clientWidth;\n    const hasScrollableYContent = ele.scrollHeight > ele.clientHeight;\n    const overflowXStyle = window.getComputedStyle(ele).overflowX;\n    const overflowYStyle = window.getComputedStyle(ele).overflowY;\n    const isOverflowXScrollable = ['auto', 'scroll', 'overlay'].includes(overflowXStyle);\n    const isOverflowYScrollable = ['auto', 'scroll', 'overlay'].includes(overflowYStyle);\n\n    const hasScrollableContent =\n      (hasScrollableXContent && isOverflowXScrollable) ||\n      (hasScrollableYContent && isOverflowYScrollable);\n\n    if (hasScrollableContent || this.protectWheelArea?.(ele)) {\n      return ele;\n    }\n\n    return this.getScrollParent(ele.parentElement);\n  }\n\n  autorun(): void {\n    const playgroundConfig = this.playgroundConfigEntity.config;\n    const { cursor } = this.playgroundConfigEntity;\n    const finalCursor = this.getCursor(cursor);\n\n    // 创建手势\n    if (this.config.zoomEnable) {\n      this.createGesture();\n    } else if (this.currentGesture) {\n      this.currentGesture.dispose();\n    }\n    // // 设置 pipeline 的样式\n    // if (scaleVisible) {\n    //   domUtils.setStyle(this.pipelineNode, {\n    //     left: SCALE_WIDTH - playgroundConfig.scrollX,\n    //     top: SCALE_WIDTH - playgroundConfig.scrollY,\n    //     width: playgroundConfig.width,\n    //     height: playgroundConfig.height,\n    //   });\n    // } else {\n    // }\n    domUtils.setStyle(this.pipelineNode, {\n      left: -playgroundConfig.scrollX,\n      top: -playgroundConfig.scrollY,\n      width: playgroundConfig.width,\n      height: playgroundConfig.height,\n    });\n    this.pipelineNode.parentElement!.style.cursor = finalCursor;\n\n    // Note: 为什么要通过 style 注入样式\n    // 原因：在 pipelineNode.parentElement 上设置 style.cursor，子元素继承样式时 cursor 样式优先级不够（子元素自身也存在 cursor 配置）\n    if (cursor === 'grab' || cursor === 'grabbing') {\n      let classSelector = '';\n      this.playgroundNode.classList.forEach((className) => {\n        classSelector += `.${className}`;\n      });\n      this.cursorStyle.innerText = `.${classSelector} * { cursor: ${finalCursor} }`;\n      if (!this.cursorStyle.parentNode) {\n        document.head.appendChild(this.cursorStyle);\n      }\n    } else {\n      if (this.cursorStyle.parentNode) {\n        this.cursorStyle.parentNode.removeChild(this.cursorStyle);\n      }\n    }\n  }\n}\n","import {\n  // type AbleRegistry,\n  type ConfigEntity,\n  type Entity,\n  type EntityData,\n  type EntityManager,\n  type EntityRegistry,\n} from '../../common';\n\n/**\n * 注入到 Layer 中的实体选择器\n */\nexport interface PipelineEntities extends Iterable<Entity> {\n  /**\n   * 获取单个实体，如果该实体是单例且被注册过，则会自动创建\n   * @param registry\n   */\n  get<T extends Entity>(registry: EntityRegistry, id?: string): T | undefined;\n  /**\n   * 获取多个实体\n   * @param registry\n   */\n  getEntities<T extends Entity>(registry: EntityRegistry): T[];\n\n  // /**\n  //  * 通过 Able 获取多个实体\n  //  * @param registry\n  //  */\n  // getEntitiesByAble<T extends Entity>(registry: AbleRegistry): T[];\n  // /**\n  //  * 通过多个 Ables 获取多个实体\n  //  * @param andAbles - 多个 able，条件且\n  //  * @param orAbles - 多个 able，条件或\n  //  */\n  // getEntitiesByAbles<T extends Entity>(andAbles: AbleRegistry[], orAbles?: AbleRegistry[]): T[];\n\n  /**\n   * 获取 entity\n   * @param entityRegistry\n   * @param dataRegistry\n   */\n  getEntityDatas<T extends EntityData>(entityRegistry: EntityRegistry, dataRegistry: T): T[];\n  /**\n   * 是否存在\n   * @param registry\n   */\n  has(registry: EntityRegistry): boolean;\n  /**\n   * 获取配置信息\n   * @param registry\n   */\n  getConfig<E extends ConfigEntity>(registry: EntityRegistry): E['config'] | undefined;\n  /**\n   * 更新配置数据\n   */\n  updateConfig<E extends ConfigEntity>(registry: EntityRegistry, props: Partial<E['config']>): void;\n\n  /**\n   * 创建实体\n   */\n  createEntity: <E extends Entity>(\n    registry: EntityRegistry,\n    opts?: Omit<E['__opts_type__'], 'entityManager'>,\n  ) => E;\n  /**\n   * 批量删除实体\n   */\n  removeEntities: (registry: EntityRegistry) => void;\n  /**\n   * 当前画布订阅的实体数目\n   */\n  readonly size: number;\n}\n\nexport class PipelineEntitiesImpl implements PipelineEntities {\n  protected observeEntities: Entity[] = [];\n\n  protected observeDatas: EntityData[] = [];\n\n  // @Action 这里要加多个缓存的原因是，每次 decorator 触发都会频繁调用获取方法，\"this.xxx\" 也会触发 decorator 方法\n  protected entitiesTypeCache: Map<EntityRegistry, Entity[]> = new Map();\n\n  protected entitiesAbleCache: Map<string, Entity[]> = new Map();\n\n  protected entitiyDataCache: Map<string, EntityData[]> = new Map();\n\n  constructor(protected readonly entityManager: EntityManager) {}\n\n  get size(): number {\n    return this.observeEntities.length;\n  }\n\n  /**\n   * 加载订阅数据，会缓存到 layer 内部，layer 只能拿到订阅数据的子集\n   * @param observeEntites\n   * @param observeDatas\n   */\n  load(observeEntites: Entity[], observeDatas: EntityData[]): void {\n    this.observeEntities = observeEntites;\n    this.observeDatas = observeDatas;\n    // clear cache\n    this.entitiesTypeCache.clear();\n    this.entitiesAbleCache.clear();\n    this.entitiyDataCache.clear();\n  }\n\n  get<T extends Entity>(registry: EntityRegistry, id?: string): T | undefined {\n    const entities = this.getEntities(registry) as T[];\n    if (id !== undefined) {\n      return entities.find(e => e.id === id);\n    }\n    return entities[0];\n  }\n\n  has(registy: EntityRegistry): boolean {\n    return !!this.get(registy);\n  }\n\n  getEntities<T extends Entity>(registry: EntityRegistry): T[] {\n    let result = this.entitiesTypeCache.get(registry) as T[];\n    // 缓存查询结果\n    if (!result) {\n      result = [];\n      this.observeEntities.forEach(e => {\n        if (e.type === registry.type) result!.push(e as T);\n      });\n      this.entitiesTypeCache.set(registry, result);\n    }\n    // 可能会出现延迟更新\n    return result.filter(r => !r.disposed);\n  }\n\n  getEntityDatas<T extends EntityData = EntityData>(\n    entityRegistry: EntityRegistry,\n    dataRegistry: T,\n  ): T[] {\n    const dataKey = `${entityRegistry.type}:${dataRegistry.type}`;\n    let result = this.entitiyDataCache.get(dataKey) as T[];\n    if (result) {\n      return result;\n    }\n    result = this.observeDatas.filter(\n      data => data.type === dataRegistry.type && data.entity.type === entityRegistry.type,\n    ) as T[];\n    this.entitiyDataCache.set(dataKey, result);\n    return result;\n  }\n\n  // getEntitiesByAble<T extends Entity = Entity>(able: AbleRegistry): T[] {\n  //   return this.getEntitiesByAbles([able]);\n  // }\n\n  // getEntitiesByAbles<T extends Entity = Entity>(\n  //   andAbles: AbleRegistry[] = [],\n  //   orAbles: AbleRegistry[] = [],\n  // ): T[] {\n  //   const ableKey = `${andAbles.map(a => a.type).join(':')}_${orAbles.map(a => a.type).join(':')}`;\n  //   let result = this.entitiesAbleCache.get(ableKey) as T[];\n  //   // 缓存查询结果\n  //   if (!result) {\n  //     result = [];\n  //     this.observeEntities.forEach(entity => {\n  //       const checkAnd = andAbles.length === 0 || !andAbles.find(able => !entity.ables.has(able));\n  //       const checkOr = orAbles.length === 0 || orAbles.find(able => entity.ables.has(able));\n  //       if (checkAnd && checkOr) {\n  //         result.push(entity as T);\n  //       }\n  //     });\n  //     this.entitiesAbleCache.set(ableKey, result);\n  //   }\n  //   // 可能会出现延迟更新\n  //   return result.filter(r => !r.disposed);\n  // }\n\n  updateConfig<E extends ConfigEntity>(\n    registry: EntityRegistry,\n    props: Partial<E['config']>,\n  ): void {\n    const entity = this.get(registry) as ConfigEntity;\n    /* v8 ignore next 3 */\n    if (entity && entity.updateConfig) {\n      entity.updateConfig(props);\n    }\n  }\n\n  getConfig<E extends ConfigEntity>(registry: EntityRegistry): E['config'] | undefined {\n    const entity = this.get(registry) as ConfigEntity;\n    /* v8 ignore next 3 */\n    if (entity) {\n      return entity.config;\n    }\n  }\n\n  /**\n   * 创建实体\n   */\n  createEntity<E extends Entity>(\n    registry: EntityRegistry,\n    opts?: Omit<E['__opts_type__'], 'entityManager'>,\n  ): E {\n    return this.entityManager.createEntity<E>(registry, opts);\n  }\n\n  /**\n   * 批量删除实体\n   */\n  removeEntities(registry: EntityRegistry): void {\n    this.entityManager.removeEntities(registry);\n  }\n\n  [Symbol.iterator](): Iterator<Entity> {\n    let index = 0;\n    const len = this.observeEntities.length;\n    return {\n      next: () => {\n        const current = index++;\n        const done = current === len;\n        return {\n          value: this.observeEntities[current],\n          done,\n        };\n      },\n    };\n  }\n}\n","import React from 'react';\n\nexport const PlaygroundReactContext = React.createContext<any>({});\n\nexport const PlaygroundReactContainerContext = React.createContext<any>({});\n\nexport const PlaygroundReactRefContext = React.createContext<any>({});\n\n/**\n * 当前 entity\n */\nexport const PlaygroundEntityContext = React.createContext<any>(undefined);\n","import React, { useMemo, useImperativeHandle, forwardRef } from 'react';\n\nimport { type interfaces } from 'inversify';\n\nimport { PluginContext, loadPlugins, type PluginsProvider } from '../plugin';\nimport { createPlaygroundContainer } from '../playground-container';\nimport { Playground } from '../playground';\nimport { PlaygroundContext } from '../common';\nimport {\n  PlaygroundReactContainerContext,\n  PlaygroundReactContext,\n  PlaygroundReactRefContext,\n} from './playground-react-context';\n\nexport interface PlaygroundReactProviderProps {\n  containerModules?: interfaces.ContainerModule[]; // 注入的 IOC 包\n  parentContainer?: interfaces.Container;\n  playgroundContainer?: interfaces.Container; // 由外部加载 playgroundContainer, 和 container 不能共存\n  playgroundContext?: any; // 注入到画布中的 context, 所有的 layer 都能拿到\n  autoFocus?: boolean; // 是否会自动触发画布 focus，默认 true\n  autoResize?: boolean; // 是否允许根据浏览器自动 resize, 默认 true\n  zoomEnable?: boolean; // 是否允许缩放，默认 true\n  plugins?: PluginsProvider<any>;\n  customPluginContext?: (container: interfaces.Container) => PluginContext; // 自定义插件的上下文\n  children?: React.ReactNode;\n}\n\n/**\n * Playground react 组件\n * @param props\n */\nexport const PlaygroundReactProvider = forwardRef<\n  PlaygroundContext | any,\n  PlaygroundReactProviderProps\n>(function PlaygroundReactProvider(props, ref) {\n  const {\n    containerModules,\n    playgroundContext,\n    parentContainer: fromContainer,\n    playgroundContainer,\n    plugins,\n    customPluginContext,\n    ...others\n  } = props;\n\n  /**\n   * 创建 IOC 包\n   */\n  const container = useMemo(() => {\n    let flowContainer: interfaces.Container;\n    // 忽略所有 containerModules, 由外部加载 container,\n    if (playgroundContainer) {\n      flowContainer = playgroundContainer;\n    } else {\n      flowContainer = createPlaygroundContainer(\n        {\n          autoFocus: true,\n          autoResize: true,\n          zoomEnable: true,\n          ...others,\n        },\n        fromContainer,\n      );\n      if (playgroundContext) {\n        flowContainer.rebind(PlaygroundContext).toConstantValue(playgroundContext);\n      }\n      if (containerModules) {\n        containerModules.forEach(module => flowContainer.load(module));\n      }\n    }\n    return flowContainer;\n    // @action 这里 props 数据如果更改不会触发刷新，不允许修改\n  }, []);\n  const playground = useMemo(() => {\n    const playground = container.get(Playground);\n    let ctx: PluginContext;\n    if (customPluginContext) {\n      ctx = customPluginContext(container);\n      container.rebind(PluginContext).toConstantValue(ctx);\n    } else {\n      ctx = container.get<PluginContext>(PluginContext);\n    }\n    if (plugins) {\n      loadPlugins(plugins(ctx), container);\n    }\n    playground.init();\n    return playground;\n  }, []);\n\n  useImperativeHandle(ref, () => container.get<PluginContext>(PluginContext), []);\n\n  return (\n    <PlaygroundReactContainerContext.Provider value={container}>\n      <PlaygroundReactRefContext.Provider value={playground}>\n        <PlaygroundReactContext.Provider value={playgroundContext}>\n          {props.children}\n        </PlaygroundReactContext.Provider>\n      </PlaygroundReactRefContext.Provider>\n    </PlaygroundReactContainerContext.Provider>\n  );\n});\n","import { ContainerModule, interfaces } from 'inversify';\n\nimport { PlaygroundContribution } from '../playground-contribution';\nimport { type Playground } from '../playground';\n\nexport interface PluginContext {\n  /**\n   * 画布实例\n   */\n  playground: Playground;\n  /**\n   * IOC 容器\n   */\n  container: interfaces.Container;\n  /**\n   * 获取 IOC 容器的 单例模块\n   * @param identifier\n   */\n  get<T>(identifier: interfaces.ServiceIdentifier<T>): T;\n\n  /**\n   * 获取 IOC 容器的 多例模块\n   */\n  getAll<T>(identifier: interfaces.ServiceIdentifier<T>): T[];\n}\n\nexport const PluginContext = Symbol('PluginContext');\nexport interface PluginBindConfig {\n  bind: interfaces.Bind;\n  unbind: interfaces.Unbind;\n  isBound: interfaces.IsBound;\n  rebind: interfaces.Rebind;\n}\n\nexport interface PluginConfig<Opts, CTX extends PluginContext = PluginContext> {\n  /**\n   * 插件 IOC 注册, 等价于 containerModule\n   * @param ctx\n   */\n  onBind?: (bindConfig: PluginBindConfig, opts: Opts) => void;\n  /**\n   * 画布注册阶段\n   */\n  onInit?: (ctx: CTX, opts: Opts) => void;\n  /**\n   * 画布准备阶段，一般用于 dom 事件注册等\n   */\n  onReady?: (ctx: CTX, opts: Opts) => void;\n  /**\n   * 画布销毁阶段\n   */\n  onDispose?: (ctx: CTX, opts: Opts) => void;\n  /**\n   * 画布所有 layer 渲染结束\n   */\n  onAllLayersRendered?: (ctx: CTX, opts: Opts) => void;\n  /**\n   * IOC 模块，用于更底层的插件扩展\n   */\n  containerModules?: interfaces.ContainerModule[];\n}\n\nexport const Plugin = Symbol('Plugin');\n\nexport type Plugin<Options = any> = {\n  options: Options;\n  pluginId: string;\n  singleton: boolean;\n  initPlugin: () => void;\n  contributionKeys?: interfaces.ServiceIdentifier[];\n  containerModules?: interfaces.ContainerModule[];\n};\n\nexport interface PluginsProvider<CTX extends PluginContext = PluginContext> {\n  (ctx: CTX): Plugin[];\n}\n\nexport type PluginCreator<Options> = (opts: Options) => Plugin<Options>;\n\nexport function loadPlugins(plugins: Plugin[], container: interfaces.Container): void {\n  const pluginInitSet = new Set<string>();\n  const singletonPluginIds = new Set<string>();\n  const modules: interfaces.ContainerModule[] = plugins\n    .reduceRight((result: Plugin[], plugin: Plugin) => {\n      const shouldSkip = plugin.singleton && singletonPluginIds.has(plugin.pluginId);\n      if (plugin.singleton) {\n        singletonPluginIds.add(plugin.pluginId);\n      }\n      return shouldSkip ? result : [plugin, ...result];\n    }, [])\n    .reduce((res, plugin) => {\n      if (!pluginInitSet.has(plugin.pluginId)) {\n        plugin.initPlugin();\n        pluginInitSet.add(plugin.pluginId);\n      }\n      if (plugin.containerModules && plugin.containerModules.length > 0) {\n        for (let module of plugin.containerModules) {\n          // 去重\n          if (!res.includes(module)) {\n            res.push(module);\n          }\n        }\n        return res;\n      }\n      return res;\n    }, [] as interfaces.ContainerModule[]);\n  modules.forEach((module) => container.load(module));\n  plugins.forEach((plugin) => {\n    if (plugin.contributionKeys) {\n      for (const contribution of plugin.contributionKeys) {\n        container.bind(contribution).toConstantValue(plugin.options);\n      }\n    }\n  });\n}\n\nfunction toPlaygroundContainerModule<Options, CTX extends PluginContext = PluginContext>(\n  config: {\n    onInit?: (ctx: CTX, opts: Options) => void;\n    onDispose?: (ctx: CTX, opts: Options) => void;\n    onReady?: (ctx: CTX, opts: Options) => void;\n    onAllLayersRendered?: (ctx: CTX, opts: Options) => void;\n  },\n  opts: Options\n): interfaces.ContainerModule {\n  return new ContainerModule((bind) => {\n    bind(PlaygroundContribution).toDynamicValue((ctx) => {\n      const pluginContext = ctx.container.get<CTX>(PluginContext);\n      return {\n        onInit: () => {\n          config.onInit?.(pluginContext, opts);\n        },\n        onReady: () => {\n          config.onReady?.(pluginContext, opts);\n        },\n        onDispose: () => {\n          config.onDispose?.(pluginContext, opts);\n        },\n        onAllLayersRendered: () => {\n          config.onAllLayersRendered?.(pluginContext, opts);\n        },\n      };\n    });\n  });\n}\n\nlet pluginIndex = 0;\nexport function definePluginCreator<Options, CTX extends PluginContext = PluginContext>(\n  config: {\n    containerModules?: interfaces.ContainerModule[];\n    contributionKeys?: interfaces.ServiceIdentifier[];\n    singleton?: boolean;\n  } & PluginConfig<Options, CTX>\n): PluginCreator<Options> {\n  const { contributionKeys, singleton = false } = config;\n  pluginIndex += 1;\n  const pluginId = `Playground_${pluginIndex}`;\n  return (opts: Options) => {\n    const containerModules: interfaces.ContainerModule[] = [];\n    let isInit = false;\n\n    return {\n      pluginId,\n      singleton,\n      initPlugin: () => {\n        // 防止 plugin 被上层业务多次 init\n        if (isInit) {\n          return;\n        }\n        isInit = true;\n\n        if (config.containerModules) {\n          containerModules.push(...config.containerModules);\n        }\n        if (config.onBind) {\n          containerModules.push(\n            new ContainerModule((bind, unbind, isBound, rebind) => {\n              config.onBind!(\n                {\n                  bind,\n                  unbind,\n                  isBound,\n                  rebind,\n                },\n                opts\n              );\n            })\n          );\n        }\n        if (config.onInit || config.onDispose || config.onReady || config.onAllLayersRendered) {\n          containerModules.push(toPlaygroundContainerModule<Options, CTX>(config, opts));\n        }\n      },\n      options: opts,\n      contributionKeys,\n      containerModules,\n    };\n  };\n}\n\n/**\n * @example\n * createPlaygroundPlugin({\n *    // IOC 注册\n *    onBind(bind) {\n *      bind('xxx').toSelf().inSingletonScope()\n *    },\n *    // 画布初始化\n *    onInit(ctx) {\n *      ctx.playground.registerLayer(MyLayer)\n *    },\n *    // 画布销毁\n *    onDispose(ctx) {\n *    },\n *    // IOC 模块\n *    containerModules: [new ContainerModule(() => {})]\n * })\n */\nexport const createPlaygroundPlugin = <CTX extends PluginContext = PluginContext>(\n  options: PluginConfig<undefined, CTX>\n) => definePluginCreator<undefined, CTX>(options)(undefined);\n","import { inject, injectable } from 'inversify';\n\nimport { PlaygroundConfig } from './playground-config';\nimport { type Playground } from './playground';\nimport {\n  PipelineRegistry,\n  type EditorState,\n  EditorStateConfigEntity,\n  type LayerRegistry,\n} from './core';\nimport { EntityManager, type EntityRegistry } from './common';\n\nexport const PlaygroundContribution = Symbol('PlaygroundContribution');\n\nexport interface PlaygroundContribution {\n  /**\n   * 注册 Layer/Entity/Able 相关\n   * @param registry\n   * @deprecated\n   */\n  registerPlayground?(registry: PlaygroundRegistry): void;\n  /**\n   * 初始化画布 (onReady 之前)\n   * @param playground\n   */\n  onInit?(playground: Playground): void;\n  /**\n   * 初始化 entity 完毕后触发\n   * @param playground\n   */\n  onReady?(playground: Playground): void;\n  /**\n   * 销毁\n   * @param playground\n   */\n  onDispose?(playground: Playground): void;\n\n  /**\n   * 所有 Layer 第一次渲染完毕后触发\n   * @param playground\n   */\n  onAllLayersRendered?(playground: Playground): void;\n}\n\n@injectable()\nexport class PlaygroundRegistry {\n  @inject(PipelineRegistry) protected readonly pipeline: PipelineRegistry;\n\n  // @inject(AbleManager) readonly ableManager: AbleManager;\n\n  @inject(EntityManager) readonly entityManager: EntityManager;\n\n  @inject(PlaygroundConfig) readonly playgroundConfig: PlaygroundConfig;\n\n  config(config: Partial<PlaygroundConfig>): void {\n    Object.assign(this.playgroundConfig, config);\n  }\n\n  registerLayer(layerRegistry: LayerRegistry): void {\n    this.pipeline.registerLayer(layerRegistry);\n  }\n\n  registerEntity(entityRegistry: EntityRegistry): void {\n    this.entityManager.registerEntity(entityRegistry);\n  }\n\n  // registerAble(ableRegistry: AbleRegistry): void {\n  //   this.ableManager.registerAble(ableRegistry);\n  // }\n\n  registerEditorState(state: EditorState): void {\n    const stateConfig =\n      this.entityManager.getEntity<EditorStateConfigEntity>(EditorStateConfigEntity);\n    stateConfig?.registerState(state);\n  }\n}\n","// import {\n//   PlaygroundConfigEntity,\n//   SelectorBoxConfigEntity,\n//   SnaplineConfigEntity,\n//   EditorStateConfigEntity,\n// } from './core/layer/config';\nimport {\n  // AlignLayer,\n  type EditorState,\n  type LayerRegistry,\n  // SelectorBoxLayer,\n  // SelectorLayer,\n  // SnaplineLayer,\n} from './core/layer';\n// import { SelectableEntity } from './core/entity';\n// import { Selectable } from './core/able/selectable';\n// import { Dragable, Resizable } from './core/able';\nimport { type ConfigEntity, type EntityRegistry } from './common';\n\nexport const PlaygroundConfig = Symbol('PlaygroundConfig');\n\n/**\n * 画布配置\n */\nexport interface PlaygroundConfig {\n  layers?: LayerRegistry[]; // 渲染分层\n  // ables?: AbleRegistry[]; // 能力\n  // entities?: EntityRegistry[]; // 数据实体\n  editorStates?: EditorState[]; // 编辑态切换\n  width?: number; // 画布的初始宽度\n  height?: number; // 画布的初始高度\n  node?: HTMLElement; // 画布的容器节点\n  autoFocus?: boolean; // 自动 focus 及 blur，默认 true\n  autoResize?: boolean; // 监听变化\n  zoomEnable?: boolean; // 是否支持缩放，默认 true\n  contextMenuPath?: string[]; // 右键菜单路径\n  entityConfigs?: Map<EntityRegistry<ConfigEntity>, any>;\n  context?: any; // 注入到 layer 中的上下文数据\n}\n\n/**\n * 默认配置\n */\nexport function createDefaultPlaygroundConfig(): PlaygroundConfig {\n  return {\n    autoFocus: true,\n    autoResize: true,\n    zoomEnable: true,\n    layers: [\n      // PlaygroundLayer, // 基础配置\n      // SelectorLayer, // 节点选择器\n      // SelectorBoxLayer, // 选择框\n      // SnaplineLayer, // 参考线\n      // AlignLayer, // 对齐线\n    ],\n    // ables: [Dragable, Selectable, Resizable],\n    // entities: [\n    //   SelectableEntity,\n    //   SnaplineConfigEntity,\n    //   PlaygroundConfigEntity,\n    //   SelectorBoxConfigEntity,\n    //   EditorStateConfigEntity,\n    // ],\n  };\n}\n","import { Container, ContainerModule, type interfaces } from 'inversify';\nimport { CommandService, CommandContainerModule } from '@flowgram.ai/command';\n\nimport { ContextMenuService } from './services/context-menu-service';\nimport {\n  ClipboardService,\n  DefaultClipboardService,\n  LocalStorageService,\n  SelectionService,\n  StorageService,\n  LoggerService,\n} from './services';\nimport { PluginContext } from './plugin';\nimport { PlaygroundContribution, PlaygroundRegistry } from './playground-contribution';\nimport { createDefaultPlaygroundConfig, PlaygroundConfig } from './playground-config';\nimport { Playground } from './playground';\nimport {\n  type LayerRegistry,\n  LayerOptions,\n  // PipelineDispatcher,\n  PipelineEntitiesSelector,\n  PipelineLayerFactory,\n  PipelineRegistry,\n  PipelineRenderer,\n  PlaygroundConfigEntity,\n  LazyInjectContext,\n} from './core';\nimport {\n  // AbleManager,\n  bindConfigEntity,\n  bindContributionProvider,\n  bindPlaygroundContextProvider,\n  EntityManager,\n  PlaygroundContainerFactory,\n  PlaygroundContext,\n  removeInjectedProperties,\n} from './common';\n\nexport function createPluginContextDefault(container: interfaces.Container): PluginContext {\n  return {\n    container,\n    playground: container.get(Playground),\n    get<T>(identifier: interfaces.ServiceIdentifier): T {\n      return container.get(identifier) as T;\n    },\n    getAll<T>(identifier: interfaces.ServiceIdentifier): T[] {\n      return container.getAll(identifier) as T[];\n    },\n  };\n}\n\nexport function createPlaygroundLayerDefault(\n  container: interfaces.Container,\n  layerRegistry: LayerRegistry,\n  options: any = {},\n) {\n  const layerContainer = container.createChild();\n  layerContainer.bind(layerRegistry).toSelf().inSingletonScope();\n  layerContainer.bind(LayerOptions).toConstantValue(options);\n  const layerInstance = layerContainer.get(layerRegistry);\n  removeInjectedProperties(layerInstance);\n  return layerInstance;\n}\n\nexport const PlaygroundContainerModule = new ContainerModule(bind => {\n  // bind(AbleManager).toSelf().inSingletonScope();\n  bind(EntityManager).toSelf().inSingletonScope();\n  bind(PipelineRenderer).toSelf().inSingletonScope();\n  bind(PlaygroundRegistry).toSelf().inSingletonScope();\n  bind(Playground).toSelf().inSingletonScope();\n  bind(PipelineEntitiesSelector).toSelf().inSingletonScope();\n  bind(PipelineLayerFactory)\n    .toDynamicValue(\n      (context: interfaces.Context) => (layerRegistry: LayerRegistry, options?: any) =>\n        createPlaygroundLayerDefault(context.container, layerRegistry, options),\n    )\n    .inSingletonScope();\n  // bind(PipelineDispatcher).toSelf().inSingletonScope();\n  bind(PipelineRegistry).toSelf().inSingletonScope();\n  bind(PlaygroundContainerFactory)\n    .toDynamicValue(ctx => ctx.container)\n    .inSingletonScope();\n  bind(PlaygroundConfig).toConstantValue(createDefaultPlaygroundConfig());\n  bind(PlaygroundContext).toConstantValue({});\n  bindPlaygroundContextProvider(bind);\n\n  bind(LoggerService).toSelf().inSingletonScope();\n\n  bind(ContextMenuService).toSelf().inSingletonScope();\n  bind(SelectionService).toSelf().inSingletonScope();\n\n  // 默认采用 LocalStorageService\n  bind(StorageService).to(LocalStorageService).inSingletonScope();\n  bind(ClipboardService).to(DefaultClipboardService).inSingletonScope();\n  bindConfigEntity(bind, PlaygroundConfigEntity);\n  bindContributionProvider(bind, PlaygroundContribution);\n  bind(PluginContext)\n    .toDynamicValue(ctx => createPluginContextDefault(ctx.container))\n    .inSingletonScope();\n\n  bind(LazyInjectContext).toService(PluginContext);\n});\n\nexport function createPlaygroundContainer(\n  config?: PlaygroundConfig,\n  parent?: interfaces.Container,\n  container?: interfaces.Container,\n): interfaces.Container {\n  const child = container || new Container({ defaultScope: 'Singleton' });\n  if (parent) {\n    child.parent = parent;\n  }\n  child.load(PlaygroundContainerModule);\n  if (!child.isBound(CommandService)) {\n    child.load(CommandContainerModule);\n  }\n  if (config) {\n    child.rebind(PlaygroundConfig).toConstantValue(config);\n    if (config.context) {\n      child.rebind(PlaygroundContext).toConstantValue(config.context);\n    }\n  }\n  return child;\n}\n","import React from 'react';\n\nimport { nanoid } from 'nanoid';\nimport { debounce } from 'lodash';\nimport { inject, injectable, optional, named } from 'inversify';\nimport {\n  Disposable,\n  DisposableCollection,\n  domUtils,\n  Emitter,\n  type Event,\n} from '@flowgram.ai/utils';\nimport { CommandService } from '@flowgram.ai/command';\n\nimport { SelectionService } from './services';\nimport { PlaygroundContribution, PlaygroundRegistry } from './playground-contribution';\nimport { PlaygroundConfig } from './playground-config';\nimport {\n  type PipelineDimension,\n  // PipelineDispatcher,\n  PipelineRegistry,\n  PipelineRenderer,\n} from './core/pipeline';\nimport {\n  EditorStateConfigEntity,\n  PlaygroundConfigEntity,\n  type PlaygroundConfigRevealOpts,\n} from './core/layer/config';\nimport { Layer, LayerRegistry } from './core';\nimport {\n  // type AbleDispatchEvent,\n  // AbleManager,\n  type ConfigEntity,\n  EntityManager,\n  type EntityRegistry,\n  PlaygroundContext,\n  ContributionProvider,\n  PlaygroundContextProvider,\n} from './common';\n// import { PlaygroundCommandRegistry, PlaygroundId, toContextMenuPath } from './playground-registries';\n\nconst playgroundInstances: Set<Playground> = new Set();\n\nconst playgroundInstanceCreateEmitter = new Emitter<Playground>();\nconst playgroundInstanceDisposeEmitter = new Emitter<Playground>();\n\n@injectable()\nexport class Playground<CONTEXT = PlaygroundContext> implements Disposable {\n  readonly toDispose = new DisposableCollection();\n\n  readonly node: HTMLElement;\n\n  private _focused = false;\n\n  readonly onBlur: Event<void>;\n\n  readonly onFocus: Event<void>;\n\n  readonly onZoom: Event<number>;\n\n  readonly onScroll: Event<{ scrollX: number; scrollY: number }>;\n\n  // 唯一 className，适配画布多实例场景\n  private playgroundClassName = nanoid();\n\n  static getLatest(): Playground | undefined {\n    const instances = Playground.getAllInstances();\n    return instances[instances.length - 1];\n  }\n\n  // static getSelection(selectionService: SelectionService): Entity[] {\n  //   const selection = selectionService.selection;\n  //   if (!selection || !Array.isArray(selection)) return [];\n  //   if (selection.find(s => !(s instanceof Entity) || !s.hasAble(Selectable))) return [];\n  //   return selection;\n  // }\n  static getAllInstances(): Playground[] {\n    const result: Playground[] = [];\n    for (const p of playgroundInstances.values()) {\n      result.push(p);\n    }\n    return result;\n  }\n\n  /**\n   * 有实例创建\n   */\n  static onInstanceCreate = playgroundInstanceCreateEmitter.event;\n\n  /**\n   * 有实例销毁\n   */\n  static onInstanceDispose = playgroundInstanceDisposeEmitter.event;\n\n  constructor(\n    // @inject(PlaygroundId) readonly id: PlaygroundId,\n    @inject(EntityManager) readonly entityManager: EntityManager,\n    @inject(PlaygroundRegistry) readonly registry: PlaygroundRegistry,\n    @inject(PlaygroundContextProvider)\n    @optional()\n    readonly contextProvider: PlaygroundContextProvider,\n    @inject(PipelineRenderer)\n    readonly pipelineRenderer: PipelineRenderer,\n    // @inject(PlaygroundCommandRegistry) protected readonly commands: PlaygroundCommandRegistry,\n    @inject(PipelineRegistry)\n    readonly pipelineRegistry: PipelineRegistry,\n    // @inject(AbleManager) readonly ableManager: AbleManager,\n    // @inject(PipelineDispatcher) protected readonly dispatcher: PipelineDispatcher,\n    @inject(PlaygroundConfig)\n    protected readonly playgroundConfig: PlaygroundConfig,\n    @inject(ContributionProvider)\n    @named(PlaygroundContribution)\n    @optional()\n    protected readonly contributionProvider: ContributionProvider<PlaygroundContribution>,\n    /**\n     * 用于管理画布命令\n     */\n    @inject(CommandService) readonly commandService: CommandService,\n    /**\n     * 用于管理画布选择\n     */\n    @inject(SelectionService) readonly selectionService: SelectionService\n  ) {\n    this.toDispose.pushAll([\n      this.pipelineRenderer,\n      this.pipelineRegistry,\n      this.entityManager,\n      // this.ableManager,\n      this.commandService,\n      this.selectionService,\n      Disposable.create(() => {\n        playgroundInstances.delete(this);\n        this.node.remove();\n        playgroundInstanceDisposeEmitter.fire(this);\n      }),\n      pipelineRenderer.onAllLayersRendered(() => {\n        this.contributions.forEach((contrib) => contrib.onAllLayersRendered?.(this));\n      }),\n    ]);\n    // Deafult entities added\n    const editStates =\n      this.entityManager.createEntity<EditorStateConfigEntity>(EditorStateConfigEntity);\n    this.entityManager.createEntity(PlaygroundConfigEntity);\n    this.node = playgroundConfig.node || document.createElement('div');\n    this.toDispose.pushAll([\n      // 浏览器原生的 scrollIntoView 会导致页面的滚动\n      // 需要禁用这种操作，否则会引发画布 viewport 计算问题\n      domUtils.addStandardDisposableListener(this.node, 'scroll', (event: UIEvent) => {\n        this.node.scrollTop = 0;\n        this.node.scrollLeft = 0;\n        event.preventDefault();\n        event.stopPropagation();\n      }),\n    ]);\n    this.node.classList.add('gedit-playground');\n    if (process.env.NODE_ENV !== 'test') {\n      this.node.classList.add(this.playgroundClassName);\n    }\n    this.node.dataset.testid = 'sdk.workflow.canvas';\n    if (playgroundConfig.layers)\n      playgroundConfig.layers.forEach((layer) => this.registry.registerLayer(layer));\n    // if (playgroundConfig.ables)\n    //   playgroundConfig.ables.forEach(able => this.ableManager.registerAble(able));\n    // if (playgroundConfig.entities)\n    //   playgroundConfig.entities.forEach(entity => this.entityManager.registerEntity(entity));\n    if (playgroundConfig.editorStates)\n      playgroundConfig.editorStates.forEach((state) => editStates.registerState(state));\n    if (playgroundConfig.zoomEnable !== undefined) this.zoomEnable = playgroundConfig.zoomEnable;\n    if (playgroundConfig.entityConfigs) {\n      for (const [k, v] of playgroundConfig.entityConfigs) {\n        const entity = this.entityManager.getEntity<ConfigEntity>(k, true);\n        entity?.updateConfig(v);\n      }\n    }\n    this.node.addEventListener('blur', () => {\n      this.blur();\n    });\n    this.node.addEventListener('focus', () => {\n      this.focus();\n    });\n    this.node.tabIndex = 0;\n    this.node.appendChild(this.pipelineRenderer.node);\n    this.onBlur = this.pipelineRegistry.onBlurEmitter.event;\n    this.onFocus = this.pipelineRegistry.onFocusEmitter.event;\n    this.onZoom = this.pipelineRegistry.onZoomEmitter.event;\n    this.onScroll = this.pipelineRegistry.onScrollEmitter.event;\n    playgroundInstances.add(this);\n  }\n\n  get context(): CONTEXT {\n    return this.contextProvider?.();\n  }\n\n  protected get contributions(): PlaygroundContribution[] {\n    return this.contributionProvider.getContributions();\n  }\n\n  init(): void {\n    const { contributions } = this;\n    for (const contrib of contributions) {\n      if (contrib.registerPlayground) contrib.registerPlayground(this.registry);\n    }\n    for (const contrib of contributions) {\n      if (contrib.onInit) contrib.onInit(this);\n    }\n    playgroundInstanceCreateEmitter.fire(this);\n  }\n\n  get pipelineNode(): HTMLDivElement {\n    return this.pipelineRenderer.node;\n  }\n\n  setParent(parent: HTMLElement): void {\n    parent.appendChild(this.node);\n    this.resize();\n  }\n\n  // get onDispatch(): Event<AbleDispatchEvent> {\n  //   return this.ableManager.onAbleDispatch;\n  // }\n\n  /**\n   * 对应的右键菜单路径\n   */\n  // get contextMenuPath(): string[] {\n  //   return this.playgroundConfig.contextMenuPath ? this.playgroundConfig.contextMenuPath : toContextMenuPath(this.id);\n  // }\n  get zoomEnable(): boolean {\n    return this.config.zoomEnable;\n  }\n\n  set zoomEnable(zoomEnable) {\n    this.config.zoomEnable = zoomEnable;\n  }\n\n  /**\n   * 转换为内部的命令 id\n   * @param commandId\n   */\n  // toPlaygroundCommandId(commandId: string): string {\n  //   return this.registry.commands.toCommandId(commandId);\n  // }\n  /**\n   * 通知所有关联 able 的 entity\n   */\n  // dispatch<P>(payloadKey: string | symbol, payload: P): string[] {\n  //   return this.ableManager.dispatch(payloadKey, payload);\n  // }\n\n  /**\n   * 刷新所有 layer\n   */\n  flush(): void {\n    this.pipelineRenderer.flush();\n  }\n\n  /**\n   * 执行命令\n   * @param commandId\n   * @param args\n   */\n  // execCommand<T>(commandId: string, ...args: any[]): Promise<T | undefined> {\n  //   return this.commands.executeCommand<T>(commandId, ...args);\n  // }\n  private isReady = false;\n\n  ready(): void {\n    if (this.isReady) return;\n    this.isReady = true;\n    if (this.playgroundConfig.autoResize) {\n      const resize = debounce(() => {\n        if (this.disposed) return;\n        this.resize();\n      }, 0);\n      if (typeof ResizeObserver !== 'undefined') {\n        const resizeObserver = new ResizeObserver(resize);\n        resizeObserver.observe(this.node);\n        this.toDispose.push(\n          Disposable.create(() => {\n            resizeObserver.disconnect();\n          })\n        );\n      } else {\n        this.toDispose.push(\n          domUtils.addStandardDisposableListener(window.document.body, 'resize', resize, {\n            passive: true,\n          })\n        );\n      }\n      this.toDispose.push(\n        domUtils.addStandardDisposableListener(window.document, 'scroll', resize, {\n          passive: true,\n        })\n      );\n      this.resize();\n    }\n    this.pipelineRegistry.ready();\n    this.pipelineRenderer.ready();\n    const { contributions } = this;\n    for (const contrib of contributions) {\n      if (contrib.onReady) contrib.onReady(this);\n    }\n  }\n\n  /**\n   * 按下边顺序执行\n   * 1. 指定的 entity 位置或 pos 位置\n   * 2. selection 位置\n   * 3. 初始化位置\n   */\n  scrollToView(opts?: PlaygroundConfigRevealOpts): Promise<void> {\n    const playgroundEntity =\n      this.entityManager.getEntity<PlaygroundConfigEntity>(PlaygroundConfigEntity)!;\n    return playgroundEntity.scrollToView(opts);\n  }\n\n  /**\n   * 这里会由 widget 透传进来\n   * @param msg\n   */\n  resize(msg?: PipelineDimension, scrollToCenter = true): void {\n    if (!msg) {\n      const boundingRect = this.node.getBoundingClientRect();\n      msg = {\n        clientX: boundingRect.left,\n        clientY: boundingRect.top,\n        width: boundingRect.width,\n        height: boundingRect.height,\n      };\n    }\n    // 页面宽度变更 触发滚动偏移\n    const { width, height } = this.config.config;\n    if (msg.width === 0 || msg.height === 0) {\n      return;\n    }\n    let { scrollX, scrollY } = this.config.config;\n    // 这个在处理滚动\n    if (scrollToCenter && width && Math.round(msg.width) !== width) {\n      scrollX += (width - msg.width) / 2;\n    }\n    if (scrollToCenter && height && Math.round(msg.height) !== height) {\n      scrollY += (height - msg.height) / 2;\n    }\n    this.config.updateConfig({ ...msg, scrollX, scrollY });\n    this.pipelineRegistry.onResizeEmitter.fire(msg);\n  }\n\n  /**\n   * 触发 focus\n   */\n  protected focus(): void {\n    if (this._focused) return;\n    this._focused = true;\n    this.pipelineRegistry.onFocusEmitter.fire();\n  }\n\n  /**\n   * 触发 blur\n   */\n  protected blur(): void {\n    if (!this._focused) return;\n    this._focused = false;\n    this.pipelineRegistry.onBlurEmitter.fire();\n  }\n\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * 画布配置数据\n   */\n  get config(): PlaygroundConfigEntity {\n    return this.entityManager.getEntity<PlaygroundConfigEntity>(PlaygroundConfigEntity)!;\n  }\n\n  /**\n   * 画布编辑状态管理\n   */\n  get editorState(): EditorStateConfigEntity {\n    return this.entityManager.getEntity<EditorStateConfigEntity>(EditorStateConfigEntity)!;\n  }\n\n  getConfigEntity<T extends ConfigEntity>(r: EntityRegistry<T>): T {\n    return this.entityManager.getEntity<T>(r, true) as T;\n  }\n\n  dispose(): void {\n    if (this.disposed) return;\n    const { contributions } = this;\n    for (const contrib of contributions) {\n      if (contrib.onDispose) contrib.onDispose(this);\n    }\n    this.toDispose.dispose();\n  }\n\n  get disposed(): boolean {\n    return this.toDispose.disposed;\n  }\n\n  /**\n   * 转换成 react 组件\n   */\n  toReactComponent(): React.FC {\n    return this.pipelineRenderer.toReactComponent();\n  }\n\n  /**\n   * 注册 layer\n   */\n  registerLayer<P extends Layer = Layer>(\n    layerRegistry: LayerRegistry<P>,\n    layerOptions?: P['options']\n  ): void {\n    this.pipelineRegistry.registerLayer<P>(layerRegistry, layerOptions);\n  }\n\n  /**\n   * 注册 多个 layer\n   */\n  registerLayers(...layerRegistries: LayerRegistry[]): void {\n    layerRegistries.forEach((layer) => this.pipelineRegistry.registerLayer(layer));\n  }\n\n  /**\n   * 获取 layer\n   */\n  getLayer<T extends Layer>(layerRegistry: LayerRegistry<T>): T | undefined {\n    return this.pipelineRegistry.getLayer<T>(layerRegistry);\n  }\n\n  get onAllLayersRendered(): Event<void> {\n    return this.pipelineRenderer.onAllLayersRendered;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport React, { useEffect, useRef } from 'react';\n\nimport { usePlayground } from '../react-hooks/use-playground';\nimport { useService } from '../react-hooks';\nimport { PlaygroundConfig } from '../playground-config';\n\nexport interface PlaygroundReactRendererProps {\n  /**\n   * 这个会放到 playground node 下边\n   */\n  children?: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport const PlaygroundReactRenderer: React.FC<PlaygroundReactRendererProps> = (props) => {\n  const playground = usePlayground();\n  const playgroundConfig = useService<PlaygroundConfig>(PlaygroundConfig);\n  const ref = useRef<any>();\n  /**\n   * 初始化画布\n   */\n  useEffect(() => {\n    if (ref.current) {\n      playground.setParent(ref.current);\n      playground.ready();\n      if (playgroundConfig.autoFocus) {\n        playground.node.focus();\n      }\n      return () => {\n        playground.dispose();\n      };\n    }\n  }, []);\n  const PlaygroundComp = playground.toReactComponent();\n  return (\n    <>\n      <div\n        ref={ref}\n        className={`gedit-playground-container${props.className ? ` ${props.className}` : ''}`}\n        style={props.style}\n      />\n      <PlaygroundComp />\n      {props.children ? ReactDOM.createPortal(<>{props.children}</>, playground.node) : null}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { PlaygroundReactRefContext } from '../react/playground-react-context';\nimport { Playground } from '../playground';\n\n/**\n * 获取 playground\n */\nexport function usePlayground(): Playground {\n  return React.useContext(PlaygroundReactRefContext);\n}\n","import { useLayoutEffect } from 'react';\n\nimport { Entity, EntityManager, EntityRegistry } from '../common';\nimport { useRefresh } from './use-refresh';\nimport { usePlaygroundContainer } from './use-playground-container';\n\n/**\n * 获取 entities 并监听变化\n * @deprecated\n */\nexport function useEntities<T extends Entity>(entityRegistry: EntityRegistry): T[] {\n  const entityManager = usePlaygroundContainer().get(EntityManager);\n  const refresh = useRefresh();\n  useLayoutEffect(() => {\n    const dispose = entityManager.onEntityChange(entityKey => {\n      if (entityKey === entityRegistry.type) {\n        refresh();\n      }\n    });\n    return () => dispose.dispose();\n  }, [entityManager, refresh]);\n  return entityManager.getEntities<T>(entityRegistry);\n}\n","export { useRefresh } from '@flowgram.ai/utils';\n","import React from 'react';\n\nimport { type interfaces } from 'inversify';\n\nimport { PlaygroundReactContainerContext } from '../react/playground-react-context';\n\n/**\n * 获取 playground inversify container\n */\nexport function usePlaygroundContainer(): interfaces.Container {\n  return React.useContext(PlaygroundReactContainerContext);\n}\n","import { useLayoutEffect } from 'react';\n\nimport { EntityData } from '../common';\nimport { EntityDataRegistry, EntityManager } from '../';\nimport { useRefresh } from './use-refresh';\n// 循环引用会导致单测访问不到 usePlaygroundContainer，这里改正路径。\nimport { usePlaygroundContainer } from './use-playground-container';\nimport { useEntityFromContext } from './use-entity-from-context';\n\n/**\n * 从上下 PlaygroundEntityContext 获取 entity data 并监听变化 (默认不监听)\n *\n * */\nexport function useEntityDataFromContext<T extends EntityData>(\n  dataRegistry: EntityDataRegistry<any>,\n  listenChange = false,\n): T {\n  const entityManager = usePlaygroundContainer().get(EntityManager);\n  const entityData = useEntityFromContext().getData<T>(dataRegistry)!;\n  if (!entityData) {\n    throw new Error(\n      `[useEntityDataFromContext] Unknown entity Data ${dataRegistry.name} from \"PlaygroundEntityContext\".`,\n    );\n  }\n  const refresh = useRefresh(entityData.version);\n  useLayoutEffect(() => {\n    const dispose = entityData.onDataChange(() => {\n      if (listenChange) refresh(entityData.version);\n    });\n    return () => dispose.dispose();\n  }, [entityManager, refresh, entityData, listenChange]);\n  return entityData;\n}\n","import { useContext, useLayoutEffect } from 'react';\n\nimport { Disposable } from '@flowgram.ai/utils';\n\nimport { PlaygroundEntityContext } from '../react';\nimport { Entity, EntityManager } from '../common';\nimport { useRefresh } from './use-refresh';\nimport { usePlaygroundContainer } from './use-playground-container';\n\n/**\n * 从上下 PlaygroundEntityContext 获取 entity 并监听变化(默认不监听)\n */\nexport function useEntityFromContext<T extends Entity>(listenChange = false): T {\n  const entityManager = usePlaygroundContainer().get(EntityManager);\n  const entity: T = useContext<T>(PlaygroundEntityContext);\n  if (!entity) {\n    throw new Error('[useEntityFromContext] Unknown entity from \"PlaygroundEntityContext\"');\n  }\n  const refresh = useRefresh(entity.version);\n  useLayoutEffect(() => {\n    let dispose: Disposable | undefined;\n    if (listenChange) {\n      dispose = entity.onEntityChange(() => refresh(entity.version));\n    }\n    return () => dispose?.dispose();\n  }, [entityManager, refresh, entity, listenChange]);\n  return entity;\n}\n","import { useLayoutEffect } from 'react';\n\nimport { DisposableCollection, type Event } from '@flowgram.ai/utils';\n\nimport { useRefresh } from './use-refresh';\n\n/**\n * 监听 event 事件变化\n */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useListenEvents(...events: Event<any>[]): void {\n  const refresh = useRefresh();\n  useLayoutEffect(() => {\n    const collection = new DisposableCollection();\n    collection.pushAll(events.map(e => e(() => refresh())));\n    return () => collection.dispose();\n  }, [events, refresh]);\n}\n","import React from 'react';\n\nimport { PlaygroundReactContext } from '../react/playground-react-context';\n\n/**\n * 获取 playground context 数据\n */\nexport function usePlaygroundContext<T>(): T {\n  return React.useContext(PlaygroundReactContext);\n}\n","import { useEffect, useState } from 'react';\n\nimport { Playground } from '../playground';\n\n/**\n * 从外部动态获取最新的 playground\n */\nexport function usePlaygroundLatest(): Playground | undefined {\n  const [playground, updatePlayground] = useState<Playground | undefined>(() =>\n    Playground.getLatest(),\n  );\n  useEffect(() => {\n    const newPlayground = Playground.getLatest();\n    if (newPlayground !== playground) {\n      updatePlayground(newPlayground);\n    }\n    const dispose = Playground.onInstanceCreate(p => {\n      updatePlayground(p);\n    });\n    const dispose2 = Playground.onInstanceDispose(playgroundDisposed => {\n      if (playground === playgroundDisposed) {\n        updatePlayground(undefined);\n      }\n    });\n    return () => {\n      dispose.dispose();\n      dispose2.dispose();\n    };\n  }, [playground]);\n  return playground;\n}\n","import { type interfaces } from 'inversify';\n\nimport { usePlaygroundContainer } from './use-playground-container';\n\n/**\n * 获取画布的 IOC 模块\n * @param identifier\n */\nexport function useService<T>(identifier: interfaces.ServiceIdentifier<T>): T {\n  const container = usePlaygroundContainer();\n  return container.get?.(identifier) as T;\n}\n","import { useLayoutEffect } from 'react';\n\nimport { Disposable } from '@flowgram.ai/utils';\n\nimport { ConfigEntity, EntityManager, EntityRegistry } from '../common';\nimport { useRefresh } from './use-refresh';\nimport { usePlaygroundContainer } from './use-playground-container';\n\n/**\n * 获取 config entity\n */\nexport function useConfigEntity<T extends ConfigEntity>(\n  entityRegistry: EntityRegistry<T>,\n  listenChange = false,\n): T {\n  const entityManager = usePlaygroundContainer().get(EntityManager);\n  const entity = entityManager.getEntity<T>(entityRegistry, true) as T;\n  const refresh = useRefresh(entity.version);\n  useLayoutEffect(() => {\n    const dispose = listenChange\n      ? entity.onEntityChange(() => {\n          refresh(entity.version);\n        })\n      : Disposable.NULL;\n    return () => dispose.dispose();\n  }, [entityManager, refresh, entity, listenChange]);\n  return entity;\n}\n","import { useMemo } from 'react';\n\nimport { Disposable } from '@flowgram.ai/utils';\n\nimport { PlaygroundDragOptions, PlaygroundDrag } from '../core';\nimport { usePlayground } from './use-playground';\n\ninterface UsePlaygroundDragReturn {\n  start<T = undefined>(\n    e: { clientX: number; clientY: number },\n    opts: PlaygroundDragOptions<T> & { context?: T },\n  ): Disposable;\n}\n\nexport function usePlaygroundDrag(): UsePlaygroundDragReturn {\n  const playground = usePlayground();\n  return useMemo(\n    () => ({\n      start<T>(\n        e: { clientX: number; clientY: number },\n        opts: PlaygroundDragOptions<T> & { context?: T },\n      ): Disposable {\n        return PlaygroundDrag.startDrag(e.clientX, e.clientY, {\n          ...opts,\n          config: playground.config,\n        });\n      },\n    }),\n    [],\n  );\n}\n","import { interfaces } from 'inversify';\n\nimport { createPlaygroundContainer, createPlaygroundLayerDefault } from './playground-container';\nimport { Playground } from './playground';\nimport { LayerRegistry, Layer, PipelineLayerFactory } from './core';\n\n/**\n * 画布测试工具\n *\n * @example\n *\n *  监听 layer 的执行\n *     const layerState = PlaygroundMockTools.createLayerTestState(PlaygroundLayer)\n *     layerState.playground.ready()\n *     expect(layerState.onReady.mock.calls.length).toEqual(1)\n *     expect(layerState.autorun.mock.calls.length).toEqual(1)\n *     layerState.playground.config.updateConfig({\n *       scrollX: 100\n *     })\n *     expect(layerState.onReady.mock.calls.length).toEqual(1)\n *     expect(layerState.autorun.mock.calls.length).toEqual(2)\n */\nexport namespace PlaygroundMockTools {\n  const LayerStateProvider = Symbol('LayerStateProvider');\n  type LayerStateProvider = WeakMap<LayerRegistry, LayerTestState>;\n\n  interface SpyInstance {\n    mock: {\n      calls: any[][];\n      instances: any[];\n      invocationCallOrder: any;\n      results: { type: string; value: any }[];\n      lastCall: any[];\n    };\n  }\n  export class LayerTestState<T extends Layer = Layer> {\n    autorun: SpyInstance;\n\n    render: SpyInstance;\n\n    onReady: SpyInstance;\n\n    onResize: SpyInstance;\n\n    onFocus: SpyInstance;\n\n    onBlur: SpyInstance;\n\n    onZoom: SpyInstance;\n\n    onScroll: SpyInstance;\n\n    onViewportChange: SpyInstance;\n\n    onReadonlyOrDisabledChange: SpyInstance;\n\n    constructor(\n      readonly instance: T,\n      readonly playground: Playground,\n      readonly container: interfaces.Container\n    ) {\n      this.hijackMethod(instance, 'autorun');\n      this.hijackMethod(instance, 'render');\n      this.hijackMethod(instance, 'onReady');\n      this.hijackMethod(instance, 'onResize');\n      this.hijackMethod(instance, 'onFocus');\n      this.hijackMethod(instance, 'onBlur');\n      this.hijackMethod(instance, 'onZoom');\n      this.hijackMethod(instance, 'onScroll');\n      this.hijackMethod(instance, 'onViewportChange');\n      this.hijackMethod(instance, 'onReadonlyOrDisabledChange');\n    }\n\n    private hijackMethod(layer: Layer, layerMethod: keyof Layer & keyof LayerTestState): void {\n      if (typeof layer[layerMethod] === 'function') {\n        // vi should be global\n        // @ts-ignore\n        (this as any)[layerMethod] = vi.spyOn(layer as any, layerMethod);\n      }\n    }\n  }\n\n  export function createContainer(modules?: interfaces.ContainerModule[]): interfaces.Container {\n    const container = createPlaygroundContainer();\n    container.bind(LayerStateProvider).toConstantValue(new WeakMap());\n    container\n      .rebind(PipelineLayerFactory)\n      .toDynamicValue((context) => (layerRegistry: LayerRegistry, options?: any) => {\n        const layerInstance = createPlaygroundLayerDefault(\n          context.container,\n          layerRegistry,\n          options\n        );\n        context.container\n          .get<LayerStateProvider>(LayerStateProvider)\n          .set(\n            layerRegistry,\n            new LayerTestState(layerInstance, container.get<Playground>(Playground), container)\n          );\n        return layerInstance;\n      });\n    if (modules) {\n      modules.forEach((module) => container.load(module));\n    }\n    return container;\n  }\n\n  export function createPlayground(modules?: interfaces.ContainerModule[]): Playground {\n    return createContainer(modules).get(Playground);\n  }\n\n  export function getLayerTestState<T extends Layer = Layer>(\n    container: interfaces.Container,\n    layerRegistry: LayerRegistry<T>\n  ): LayerTestState<T> {\n    return container\n      .get<LayerStateProvider>(LayerStateProvider)\n      .get(layerRegistry) as LayerTestState<T>;\n  }\n\n  /**\n   * 创建layer, 并记录layer的回调数据\n   * @param Layer\n   * @param opts\n   */\n  export function createLayerTestState<T extends Layer = Layer>(\n    layerRegistry: LayerRegistry<T>,\n    opts?: any,\n    modules?: interfaces.ContainerModule[]\n  ): LayerTestState<T> {\n    const container = createContainer(modules);\n    const playground = container.get<Playground>(Playground);\n    playground.registerLayer(layerRegistry, opts);\n    playground.init();\n    playground.ready();\n    return getLayerTestState(container, layerRegistry);\n  }\n}\n"],"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","names":["import_utils","import_utils","event","Entity","import_utils","import_utils","import_utils","import_utils","import_utils","import_utils","import_utils","import_utils","Bounds","TransformData","import_inversify","import_utils","import_utils","PlaygroundDrag","import_utils","TWEEN","import_utils","rubberband","id","id","window","Engine","import_inversify","id","entity","import_utils","PipelineLayerPriority","import_react","import_inversify","import_utils","import_inversify","import_utils","selection","import_inversify","import_inversify","import_utils","import_inversify","import_inversify","import_utils","LoggerEvent","import_utils","React","ReactDOM","import_inversify","React","import_inversify","import_messaging","import_utils","import_utils","EditorState","import_utils","import_inversify","import_utils","import_inversify","import_utils","wheelDelta","id","PipelineMessage","import_react","React","import_react","import_inversify","import_inversify","module","import_inversify","import_command","import_nanoid","import_lodash","import_inversify","import_utils","PlaygroundReactProvider","module","playground","React","import_react_dom","import_react","import_react","React","import_react","import_utils","import_react","React","import_react","import_react","import_react","import_utils","import_react","React","import_react","import_react","import_utils","import_react","React","ReactDOM","PlaygroundMockTools","module","import_command"]}