{"version":3,"sources":["../../src/typings/index.ts","../../src/typings/workflow-json.ts","../../src/typings/workflow-line.ts","../../src/typings/workflow-operation.ts"],"sourcesContent":["export * from './workflow-json';\nexport * from './workflow-edge';\nexport * from './workflow-node';\nexport * from './workflow-registry';\nexport * from './workflow-line';\nexport * from './workflow-sub-canvas';\nexport * from './workflow-operation';\nexport * from './workflow-drag';\n\nexport const URLParams = Symbol('');\n\nexport interface URLParams {\n  [key: string]: string;\n}\n","import { type WorkflowLineEntity, type WorkflowNodeEntity } from '../entities';\nimport { type WorkflowNodeJSON } from './workflow-node';\nimport { type WorkflowEdgeJSON } from './workflow-edge';\n\nexport interface WorkflowJSON {\n  nodes: WorkflowNodeJSON[];\n  edges: WorkflowEdgeJSON[];\n}\n\nexport enum WorkflowContentChangeType {\n  /**\n   * 添加节点\n   */\n  ADD_NODE = 'ADD_NODE',\n  /**\n   * 删除节点\n   */\n  DELETE_NODE = 'DELETE_NODE',\n  /**\n   * 移动节点\n   */\n  MOVE_NODE = 'MOVE_NODE',\n  /**\n   * 节点数据更新 （表单引擎数据 或者 extInfo 数据）\n   */\n  NODE_DATA_CHANGE = 'NODE_DATA_CHANGE',\n  /**\n   * 添加线条\n   */\n  ADD_LINE = 'ADD_LINE',\n  /**\n   * 删除线条\n   */\n  DELETE_LINE = 'DELETE_LINE',\n  /**\n   * 节点Meta信息变更\n   */\n  META_CHANGE = 'META_CHANGE',\n}\n\nexport interface WorkflowContentChangeEvent {\n  type: WorkflowContentChangeType;\n  /**\n   * 当前触发的元素的json数据，toJSON 需要主动触发\n   */\n  toJSON: () => any;\n  /*\n   * 当前的事件的 entity\n   */\n  entity: WorkflowNodeEntity | WorkflowLineEntity;\n}\n","import type { Rectangle, IPoint } from '@flowgram.ai/utils';\n\nimport { type WorkflowLineEntity } from '../entities';\n\nexport enum LineType {\n  BEZIER, // 贝塞尔曲线\n  LINE_CHART, // 折叠线\n}\n\nexport type LineRenderType = LineType | string;\n\nexport interface LinePosition {\n  from: IPoint;\n  to: IPoint;\n}\n\nexport interface LineColor {\n  hidden: string;\n  default: string;\n  drawing: string;\n  hovered: string;\n  selected: string;\n  error: string;\n}\n\nexport enum LineColors {\n  HIDDEN = 'transparent', // 隐藏线条\n  DEFUALT = '#4d53e8',\n  DRAWING = '#5DD6E3', // '#b5bbf8', // '#9197F1',\n  HOVER = '#37d0ff',\n  ERROR = 'red',\n}\n\nexport interface WorkflowLineRenderContribution {\n  entity: WorkflowLineEntity;\n  path: string;\n  bounds: Rectangle;\n  update: (params: { fromPos: IPoint; toPos: IPoint }) => void;\n  calcDistance: (pos: IPoint) => number;\n}\n\nexport type WorkflowLineRenderContributionFactory = (new (\n  entity: WorkflowLineEntity\n) => WorkflowLineRenderContribution) & {\n  type: LineRenderType;\n};\n","import { IPoint, Event } from '@flowgram.ai/utils';\nimport {\n  FlowNodeEntity,\n  FlowNodeEntityOrId,\n  FlowOperationBaseService,\n} from '@flowgram.ai/document';\n\nexport interface NodePostionUpdateEvent {\n  node: FlowNodeEntity;\n  oldPosition: IPoint;\n  newPosition: IPoint;\n}\n\nexport interface WorkflowOperationBaseService extends FlowOperationBaseService {\n  /**\n   * 节点位置更新事件\n   */\n  readonly onNodePostionUpdate: Event<NodePostionUpdateEvent>;\n  /**\n   * 更新节点位置\n   * @param nodeOrId\n   * @param position\n   * @returns\n   */\n  updateNodePosition(nodeOrId: FlowNodeEntityOrId, position: IPoint): void;\n}\n\nexport const WorkflowOperationBaseService = Symbol('WorkflowOperationBaseService');\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACSO,IAAK,4BAAL,kBAAKA,+BAAL;AAIL,EAAAA,2BAAA,cAAW;AAIX,EAAAA,2BAAA,iBAAc;AAId,EAAAA,2BAAA,eAAY;AAIZ,EAAAA,2BAAA,sBAAmB;AAInB,EAAAA,2BAAA,cAAW;AAIX,EAAAA,2BAAA,iBAAc;AAId,EAAAA,2BAAA,iBAAc;AA5BJ,SAAAA;AAAA,GAAA;;;ACLL,IAAK,WAAL,kBAAKC,cAAL;AACL,EAAAA,oBAAA;AACA,EAAAA,oBAAA;AAFU,SAAAA;AAAA,GAAA;AAqBL,IAAK,aAAL,kBAAKC,gBAAL;AACL,EAAAA,YAAA,YAAS;AACT,EAAAA,YAAA,aAAU;AACV,EAAAA,YAAA,aAAU;AACV,EAAAA,YAAA,WAAQ;AACR,EAAAA,YAAA,WAAQ;AALE,SAAAA;AAAA,GAAA;;;ACEL,IAAM,+BAA+B,OAAO,8BAA8B;;;AHlB1E,IAAM,YAAY,OAAO,EAAE;","names":["WorkflowContentChangeType","LineType","LineColors"]}