import * as _flowgram_ai_utils from '@flowgram.ai/utils';

interface I18nLanguage {
    languageId: string;
    languageName?: string;
    localizedLanguageName?: string;
    contents: Record<string, string>;
}
declare class I18nImpl {
    private _languages;
    private _localLanguage;
    private _onLanguageChangeEmitter;
    readonly onLanguageChange: _flowgram_ai_utils.Event<string>;
    constructor(languages: I18nLanguage[]);
    /**
     * TODO support replace
     * @param key
     * @param options
     */
    t(key: string, options?: {
        disableReturnKey?: boolean;
    }): string;
    getLocalLanguage(): string;
    setLocalLanguage(langId: string): void;
    getLangauges(): Map<string, I18nLanguage>;
    addLanguage(newLanguage: I18nLanguage): void;
}
declare const I18n: I18nImpl;

export { I18n, type I18nLanguage };
