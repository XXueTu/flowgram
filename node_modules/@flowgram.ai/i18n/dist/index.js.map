{"version":3,"sources":["../src/index.ts","../src/i18n/zh-CN.ts","../src/i18n/en-US.ts"],"sourcesContent":["import { Emitter } from '@flowgram.ai/utils';\n\ninterface I18nLanguage {\n  languageId: string;\n  languageName?: string;\n  localizedLanguageName?: string;\n  contents: Record<string, string>;\n}\n\nimport zhCNLanguageDefault from './i18n/zh-CN';\nimport enUSLanguageDefault from './i18n/en-US';\n\nclass I18nImpl {\n  private _languages = new Map<string, I18nLanguage>();\n\n  private _localLanguage = 'en-US';\n\n  private _onLanguageChangeEmitter = new Emitter<string>();\n\n  readonly onLanguageChange = this._onLanguageChangeEmitter.event;\n\n  constructor(languages: I18nLanguage[]) {\n    languages.forEach((language) => this.addLanguage(language));\n  }\n\n  /**\n   * TODO support replace\n   * @param key\n   * @param options\n   */\n  t(key: string, options?: { disableReturnKey?: boolean }): string {\n    const contents: Record<string, string> =\n      this._languages.get(this._localLanguage)?.contents || {};\n    if (contents[key]) {\n      return contents[key];\n    }\n    if (options?.disableReturnKey) return '';\n    return key;\n  }\n\n  getLocalLanguage() {\n    return this._localLanguage;\n  }\n\n  setLocalLanguage(langId: string) {\n    if (langId === this._localLanguage) return;\n    this._localLanguage = langId;\n    this._onLanguageChangeEmitter.fire(langId);\n  }\n\n  getLangauges() {\n    return this._languages;\n  }\n\n  addLanguage(newLanguage: I18nLanguage): void {\n    let oldLanguage = this._languages.get(newLanguage.languageId);\n    if (oldLanguage) {\n      this._languages.set(newLanguage.languageId, {\n        ...oldLanguage,\n        ...newLanguage,\n        contents: {\n          ...oldLanguage.contents,\n          ...newLanguage.contents,\n        },\n      });\n    } else {\n      this._languages.set(newLanguage.languageId, newLanguage);\n    }\n  }\n}\n\nconst I18n = new I18nImpl([enUSLanguageDefault, zhCNLanguageDefault]);\n\nexport { I18n, I18nLanguage };\n","export default {\n  languageId: 'zh-CN',\n  languageName: 'Chinese',\n  localizedLanguageName: '中文(中国)',\n  contents: {\n    Yes: '是',\n    No: '否',\n  },\n};\n","export default {\n  languageId: 'en-US',\n  languageName: 'English',\n  localizedLanguageName: 'English',\n  contents: {\n    Yes: 'Yes',\n    No: 'No',\n  },\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB;;;ACAxB,IAAO,gBAAQ;AAAA,EACb,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,uBAAuB;AAAA,EACvB,UAAU;AAAA,IACR,KAAK;AAAA,IACL,IAAI;AAAA,EACN;AACF;;;ACRA,IAAO,gBAAQ;AAAA,EACb,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,uBAAuB;AAAA,EACvB,UAAU;AAAA,IACR,KAAK;AAAA,IACL,IAAI;AAAA,EACN;AACF;;;AFIA,IAAM,WAAN,MAAe;AAAA,EASb,YAAY,WAA2B;AARvC,SAAQ,aAAa,oBAAI,IAA0B;AAEnD,SAAQ,iBAAiB;AAEzB,SAAQ,2BAA2B,IAAI,qBAAgB;AAEvD,SAAS,mBAAmB,KAAK,yBAAyB;AAGxD,cAAU,QAAQ,CAAC,aAAa,KAAK,YAAY,QAAQ,CAAC;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,EAAE,KAAa,SAAkD;AAC/D,UAAM,WACJ,KAAK,WAAW,IAAI,KAAK,cAAc,GAAG,YAAY,CAAC;AACzD,QAAI,SAAS,GAAG,GAAG;AACjB,aAAO,SAAS,GAAG;AAAA,IACrB;AACA,QAAI,SAAS,iBAAkB,QAAO;AACtC,WAAO;AAAA,EACT;AAAA,EAEA,mBAAmB;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,iBAAiB,QAAgB;AAC/B,QAAI,WAAW,KAAK,eAAgB;AACpC,SAAK,iBAAiB;AACtB,SAAK,yBAAyB,KAAK,MAAM;AAAA,EAC3C;AAAA,EAEA,eAAe;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,YAAY,aAAiC;AAC3C,QAAI,cAAc,KAAK,WAAW,IAAI,YAAY,UAAU;AAC5D,QAAI,aAAa;AACf,WAAK,WAAW,IAAI,YAAY,YAAY;AAAA,QAC1C,GAAG;AAAA,QACH,GAAG;AAAA,QACH,UAAU;AAAA,UACR,GAAG,YAAY;AAAA,UACf,GAAG,YAAY;AAAA,QACjB;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,WAAK,WAAW,IAAI,YAAY,YAAY,WAAW;AAAA,IACzD;AAAA,EACF;AACF;AAEA,IAAM,OAAO,IAAI,SAAS,CAAC,eAAqB,aAAmB,CAAC;","names":[]}