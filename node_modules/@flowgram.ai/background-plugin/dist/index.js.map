{"version":3,"sources":["../src/index.ts","../src/background-layer.tsx","../src/create-background-plugin.ts"],"sourcesContent":["export * from './background-layer';\nexport * from './create-background-plugin';\n","import { Layer, observeEntity, PlaygroundConfigEntity, SCALE_WIDTH } from '@flowgram.ai/core';\nimport { domUtils } from '@flowgram.ai/utils';\n\ninterface BackgroundScaleUnit {\n  realSize: number;\n  renderSize: number;\n  zoom: number;\n}\n\nconst PATTERN_PREFIX = 'gedit-background-pattern-';\nconst RENDER_SIZE = 20;\nconst DOT_SIZE = 1;\nlet id = 0;\nexport interface BackgroundLayerOptions {\n  // 预留配置项目\n}\n/**\n * dot 网格背景\n */\nexport class BackgroundLayer extends Layer<BackgroundLayerOptions> {\n  static type = 'WorkflowBackgroundLayer';\n\n  @observeEntity(PlaygroundConfigEntity)\n  protected playgroundConfigEntity: PlaygroundConfigEntity;\n\n  private _patternId = `${PATTERN_PREFIX}${id++}`;\n\n  node = domUtils.createDivWithClass('gedit-flow-background-layer');\n\n  grid: HTMLElement = document.createElement('div');\n\n  /**\n   * 当前缩放比\n   */\n  get zoom(): number {\n    return this.config.finalScale;\n  }\n\n  onReady() {\n    const { firstChild } = this.pipelineNode;\n    // 背景插入到最下边\n    this.pipelineNode.insertBefore(this.node, firstChild);\n    // 初始化设置最大 200% 最小 10% 缩放\n    this.playgroundConfigEntity.updateConfig({\n      minZoom: 0.1,\n      maxZoom: 2,\n    });\n    // 确保点的位置在线条的下方\n    this.grid.style.zIndex = '-1';\n    this.grid.style.position = 'relative';\n    this.node.appendChild(this.grid);\n    this.grid.className = 'gedit-grid-svg';\n  }\n\n  /**\n   * 最小单元格大小\n   */\n  getScaleUnit(): BackgroundScaleUnit {\n    const { zoom } = this;\n\n    return {\n      realSize: RENDER_SIZE, // 一个单元格代表的真实大小\n      renderSize: Math.round(RENDER_SIZE * zoom * 100) / 100, // 一个单元格渲染的大小值\n      zoom, // 缩放比\n    };\n  }\n\n  /**\n   * 绘制\n   */\n  autorun(): void {\n    const playgroundConfig = this.playgroundConfigEntity.config;\n    const scaleUnit = this.getScaleUnit();\n    const mod = scaleUnit.renderSize * 10;\n    const viewBoxWidth = playgroundConfig.width + mod * 2;\n    const viewBoxHeight = playgroundConfig.height + mod * 2;\n    const { scrollX } = playgroundConfig;\n    const { scrollY } = playgroundConfig;\n    const scrollXDelta = this.getScrollDelta(scrollX, mod);\n    const scrollYDelta = this.getScrollDelta(scrollY, mod);\n    domUtils.setStyle(this.node, {\n      left: scrollX - SCALE_WIDTH,\n      top: scrollY - SCALE_WIDTH,\n    });\n    this.drawGrid(scaleUnit);\n    // 设置网格\n    this.setSVGStyle(this.grid, {\n      width: viewBoxWidth,\n      height: viewBoxHeight,\n      left: SCALE_WIDTH - scrollXDelta - mod,\n      top: SCALE_WIDTH - scrollYDelta - mod,\n    });\n  }\n\n  /**\n   * 绘制网格\n   */\n  protected drawGrid(unit: BackgroundScaleUnit): void {\n    const minor = unit.renderSize;\n    if (!this.grid) {\n      return;\n    }\n    const patternSize = DOT_SIZE * this.zoom;\n    const newContent = `\n    <svg width=\"100%\" height=\"100%\">\n      <pattern id=\"${this._patternId}\" width=\"${minor}\" height=\"${minor}\" patternUnits=\"userSpaceOnUse\">\n        <circle\n          cx=\"${patternSize}\"\n          cy=\"${patternSize}\"\n          r=\"${patternSize}\"\n          stroke=\"#eceeef\"\n          fill-opacity=\"0.5\"\n        />\n      </pattern>\n      <rect width=\"100%\" height=\"100%\" fill=\"url(#${this._patternId})\"/>\n    </svg>`;\n    this.grid.innerHTML = newContent;\n  }\n\n  protected setSVGStyle(\n    svgElement: HTMLElement | undefined,\n    style: { width: number; height: number; left: number; top: number },\n  ): void {\n    if (!svgElement) {\n      return;\n    }\n\n    svgElement.style.width = `${style.width}px`;\n    svgElement.style.height = `${style.height}px`;\n    svgElement.style.left = `${style.left}px`;\n    svgElement.style.top = `${style.top}px`;\n  }\n\n  /**\n   * 获取相对滚动距离\n   * @param realScroll\n   * @param mod\n   */\n  protected getScrollDelta(realScroll: number, mod: number): number {\n    // 正向滚动不用补差\n    if (realScroll >= 0) {\n      return realScroll % mod;\n    }\n    return mod - (Math.abs(realScroll) % mod);\n  }\n}\n","import { definePluginCreator } from '@flowgram.ai/core';\n\nimport { BackgroundLayer, BackgroundLayerOptions } from './background-layer';\n\n/**\n * 点位背景插件\n */\nexport const createBackgroundPlugin = definePluginCreator<BackgroundLayerOptions>({\n  onInit: (ctx, opts) => {\n    ctx.playground.registerLayer(BackgroundLayer, opts);\n  },\n});\n"],"mappings":"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","names":["import_core"]}